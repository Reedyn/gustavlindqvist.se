@charset 'UTF-8';
/* MAIN
---------------
Import all relevant files
--------------- */
/* Breakpoints
-------------------
Breakpoints for various screen sizes
------------------- */
/* Colors
-------------------
All colors used throughout the theme
------------------- */
/* Fonts
---------------
Fonts
--------------- */
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video
{
    font: inherit;

    margin: 0;
    padding: 0;

    vertical-align: baseline;

    border: 0;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section
{
    display: block;
}

body
{
    line-height: 1;
}

ol,
ul
{
    list-style: none;
}

blockquote,
q
{
    quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after
{
    content: '';
    content: none;
}

table
{
    border-spacing: 0;
    border-collapse: collapse;
}

@font-face
{
    font-family: 'Noto Sans';
    font-weight: 500;
    font-style: normal;

    font-display: fallback;
    src: local('Noto Sans'), url('/assets/fonts/NotoSans-500.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Sans';
    font-weight: 700;
    font-style: normal;

    font-display: fallback;
    src: local('Noto Sans'), url('/assets/fonts/NotoSans-700.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Sans';
    font-weight: 900;
    font-style: normal;

    font-display: fallback;
    src: local('Noto Sans'), url('/assets/fonts/NotoSans-900.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Serif';
    font-weight: 500;
    font-style: normal;

    font-display: fallback;
    src: local('Noto Serif'), url('/assets/fonts/NotoSerif-500.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Serif';
    font-weight: 500;
    font-style: italic;

    font-display: fallback;
    src: local('Noto Serif'), url('/assets/fonts/NotoSerif-500-Italic.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Serif';
    font-weight: 700;
    font-style: normal;

    font-display: fallback;
    src: local('Noto Serif'), url('/assets/fonts/NotoSerif-700.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Serif';
    font-weight: 700;
    font-style: italic;

    font-display: fallback;
    src: local('Noto Serif'), url('/assets/fonts/NotoSerif-700-Italic.woff2') format('woff2');
}
/**
 * GHColors theme by Avi Aryan (http://aviaryan.in)
 * Inspired by Github syntax coloring
 */
code[class*=language-],
pre[class*=language-]
{
    font-family: 'Consolas', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;
    font-size: .9em;
    line-height: 1.2em;

    text-align: left;
    white-space: pre;
    word-spacing: normal;
    word-break: normal;
    -moz-tab-size: 4;
      -o-tab-size: 4;
         tab-size: 4;
    -webkit-hyphens: none;
            hyphens: none;

    color: #393a34;

    direction: ltr;
}

pre > code[class*=language-]
{
    font-size: 1em;
}

pre[class*=language-]::-moz-selection,
pre[class*=language-] ::-moz-selection,
code[class*=language-]::-moz-selection,
code[class*=language-] ::-moz-selection
{
    background: #b3d4fc;
}

pre[class*=language-]::-moz-selection,
pre[class*=language-] ::-moz-selection,
code[class*=language-]::-moz-selection,
code[class*=language-] ::-moz-selection
{
    background: #b3d4fc;
}

pre[class*=language-]::selection,
pre[class*=language-] ::selection,
code[class*=language-]::selection,
code[class*=language-] ::selection
{
    background: #b3d4fc;
}

/* Code blocks */
pre[class*=language-]
{
    overflow: auto;

    margin: .5em 0;
    padding: 1em;

    border: 1px solid #ddd;
    background-color: white;
}

/* Inline code */
:not(pre) > code[class*=language-]
{
    padding: .2em;
    padding-top: 1px;
    padding-bottom: 1px;

    border: 1px solid #ddd;
    background: #f8f8f8;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata
{
    font-style: italic;

    color: #998;
}

.token.namespace
{
    opacity: .7;
}

.token.string,
.token.attr-value
{
    color: #e3116c;
}

.token.punctuation,
.token.operator
{
    color: #393a34; /* no highlight */
}

.token.entity,
.token.url,
.token.symbol,
.token.number,
.token.boolean,
.token.variable,
.token.constant,
.token.property,
.token.regex,
.token.inserted
{
    color: #36acaa;
}

.token.atrule,
.token.keyword,
.token.attr-name,
.language-autohotkey .token.selector
{
    color: #00a4db;
}

.token.function,
.token.deleted,
.language-autohotkey .token.tag
{
    color: #9a050f;
}

.token.tag,
.token.selector,
.language-autohotkey .token.keyword
{
    color: #00009f;
}

.token.important,
.token.function,
.token.bold
{
    font-weight: bold;
}

.token.italic
{
    font-style: italic;
}

:root
{
    --color__background: white;
    --color__background__alt: #f7f7f7;
    --color__background__widget: #f1f1f1;
    --color__background__contrast: #262626;
    --color__background__contrast__widget: #141414;
    --color__background__contrast__alt: #050505;
    --color__background__gradient: linear-gradient(180deg,rgba(0,0,0,0) 0,white 100%);
    --color__overlay: rgba(0,0,0,.5);
    --color__link: hsl(240, 100%, 60%);
    --color__link__visited: hsl(285, 100%, 40%);
    --color__text: black;
    --color__text-alt: #404040;
    --color__text__contrast: white;
    --color__text__contrast__alt: #666;
    --font__dynamic-scaling: .3vw;
    --font__ratio: 1.25;
    --font__dynamic-ratio: 1.3;
    --font__size: 1.6rem;
    --font__size-base: 1.4rem;
    --font__size__heading-4: calc( (var(--font__size-base) * var(--font__ratio)) + (var(--font__dynamic-scaling) * var(--font__dynamic-ratio)));
    --font__size__heading-3: calc( (var(--font__size-base) * var(--font__ratio) * var(--font__ratio)) + (var(--font__dynamic-scaling) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio)));
    --font__size__heading-2: calc( (var(--font__size-base) * var(--font__ratio) * var(--font__ratio) * var(--font__ratio)) + (var(--font__dynamic-scaling) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio)));
    --font__size__heading-1: calc( (var(--font__size-base) * var(--font__ratio) * var(--font__ratio) * var(--font__ratio) * var(--font__ratio)) + (var(--font__dynamic-scaling) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio)));
    --font__sans-serif: Noto Sans, Arial, sans-serif;
    --font__serif: Noto Serif, Times New Roman, serif;
    --font__mono: monospace;
    --max-width__base: 120rem;
    --max-width__content: 80rem;
    --margin__tiny: .5rem;
    --margin__small: 1rem;
    --margin__medium: 2rem;
    --margin__large: 4rem;
    --padding__small: 1rem;
    --padding__medium: 2rem;
    --padding__large: 4rem;
    --header__height: 6rem;
    --header__font-scale: 90%;
}

html
{
    font-size: 62.5%;

    display: flex;
    flex-direction: column;

    height: 100%;
}

body
{
    font-family: var(--font__sans-serif);
    font-size: var(--font__size);
    font-weight: 500;
    line-height: 1.8;

    display: flex;
    overflow-y: scroll;
    flex-direction: column;

    height: 100%;
    min-height: 100%;

    color: var(--color__text);
    background: var(--color__background);

    flex: 1;
}
body main
{
    flex: 1;
}

*
{
    box-sizing: border-box;
}

p,
ul,
ol,
blockquote,
br,
button,
canvas,
caption,
col,
colgroup,
dd,
dl,
dt,
embed,
fieldset,
figcaption,
figure,
img,
form,
h1,
h2,
h3,
h4,
h5,
h6
{
    margin-top: 1em;
    margin-bottom: .5em;
}

code
{
    font-family: var(--font__mono);
    font-size: 90%;

    padding: .2em .4em;

    color: var(--color__text);
    background: var(--color__background__widget);
}

figure figcaption
{
    font-family: var(--font__serif);

    margin-top: 0;

    text-align: center;
}
@media (min-width: 55em)
{
    figure
    {
        margin-top: var(--margin__medium);
        margin-bottom: var(--margin__medium);
    }
}
figure.-full > picture img,
figure.-full > img,
figure.-full iframe,
figure.-full > div
{
    position: relative;

    width: 100vw; /* Or whatever max width is */
    max-width: none;
    margin-right: calc(50% - 50vw);
    margin-left: calc(50% - 50vw); /* 50vw equals half the width */
}
figure.-pixels
{
    image-rendering: crisp-edges;
}
figure.-wide
{
    --card__extra-width: 0rem;
}
@media (min-width: 55em)
{
    figure.-wide
    {
        margin-top: var(--margin__medium);
        margin-bottom: var(--margin__medium);
    }
}
@media (min-width: 65em)
{
    figure.-wide
    {
        --card__extra-width: 10rem;
    }
    figure.-wide > picture img,
    figure.-wide > img,
    figure.-wide iframe,
    figure.-wide > div,
    figure.-wide > figure.gallery-row
    {
        width: calc(var(--max-width__content) + var(--card__extra-width));
        max-width: none;
        margin-left: calc(50% - (var(--max-width__content) + var(--card__extra-width)) / 2);
    }
}
@media (min-width: 90em)
{
    figure.-wide
    {
        --card__extra-width: 35rem;
    }
}
figure.embed
{
    width: 100%;
}
figure.embed iframe
{
    min-width: 100%;
    height: auto;

    aspect-ratio: 16/9;
}
figure.map iframe
{
    min-width: 100%;
    height: 50vh;
}
figure .instagram-media
{
    margin: 0 auto !important;
}

h1,
h2,
h3,
h4,
h5,
h6
{
    font-family: var(--font__sans-serif);
    line-height: 1.25;
}
h1 a,
h2 a,
h3 a,
h4 a,
h5 a,
h6 a
{
    border: 0;
}

h1
{
    font-size: var(--font__size__heading-1);
    font-weight: 900;

    letter-spacing: -.2rem;
}

h2
{
    font-size: var(--font__size__heading-2);
    font-weight: 900;
}

h3
{
    font-size: var(--font__size__heading-3);
    font-weight: 700;
}

h4
{
    font-size: var(--font__size__heading-4);
    font-weight: 500;
}

h5
{
    font-weight: 700;
}

h6
{
    font-size: 80%;
    font-weight: 700;

    text-transform: uppercase;
}

img
{
    max-width: 100%;
    height: auto;
}

svg
{
    fill: currentColor;
}

a
{
    transition: all .2s;
    text-decoration: none;

    color: var(--color__link);
}
a:hover,
a:focus
{
    text-decoration: underline;
}
a:visited
{
    color: var(--color__link__visited);
}

ul
{
    list-style: disc;

    -webkit-padding-start: 1.5em;
    padding-inline-start: 1.5em;
}
ul ul
{
    margin-top: 0;
    margin-bottom: 0;

    -webkit-padding-start: 1em;
    padding-inline-start: 1em;
}

ol
{
    list-style: decimal;

    -webkit-padding-start: 1.5em;
    padding-inline-start: 1.5em;
}
ol ol
{
    margin-top: 0;
    margin-bottom: 0;

    -webkit-padding-start: 1em;
    padding-inline-start: 1em;
}
ol li:last-of-type
{
    margin-bottom: 0;
}

.contains-task-list
{
    list-style: none;
}

.no-style
{
    list-style: none;

    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.task-list-item-checkbox
{
    margin-left: -1.6em;

    vertical-align: baseline;
}

[id]
{
    scroll-margin-top: 1ex;
}

select
{
    font-family: var(--font__sans-serif);
    font-size: var(--font__size);
    font-weight: 500;
    line-height: 2;

    padding: .4rem .4rem;

    color: var(--color__text);
    border: 1px solid var(--color__background__widget);
    border-radius: 3px;
    background: var(--color__background);
}

em
{
    font-family: var(--font__serif);
    font-style: italic;
}

.note
{
    padding: var(--margin__small);

    background: var(--color__background__alt);
}

.lead
{
    font-size: 115%;
}

sup
{
    font-size: 85%;

    vertical-align: super;
}

blockquote
{
    font-family: var(--font__serif);

    padding-left: var(--margin__medium);

    border-left: 4px solid var(--color__background__alt);
}
blockquote img
{
    width: 100%;
    margin: 2rem 0;
}
blockquote > :first-child
{
    margin-top: 0;
}
blockquote > :last-child
{
    margin-bottom: 0;
}

q
{
    font-family: var(--font__serif);
    font-size: 125%;
    font-style: italic;

    display: block;

    text-align: center;
}
@media (min-width: 40em)
{
    q
    {
        width: calc(100% + var(--margin__large));
        max-width: calc(100% + var(--margin__large));
        margin-top: var(--margin__large);
        margin-bottom: var(--margin__medium);
        margin-left: calc(0% - var(--margin__medium));
    }
}
q:before,
q:after
{
    display: none;
}

cite
{
    font-family: var(--font__serif);
    font-style: normal;

    display: block;
}
cite a
{
    color: inherit;
    border: none;
}
cite:before
{
    content: '— ';
}

strong
{
    font-weight: 700;
}

hr
{
    height: .4rem;
    margin: var(--margin__medium) 0 0;

    border: 0;
    background: var(--color__background__alt);
}

abbr
{
    font-variant: all-small-caps;

    text-decoration: none;

    border-bottom-width: 1px;
    border-bottom-style: dotted;
    border-bottom-color: var(--color__text);
}

.center
{
    text-align: center;
}

kbd
{
    padding: .2em .4em;

    border-radius: .3em;
    background: var(--color__background__alt);
}

.Breadcrumbs a
{
    color: var(--color__text-alt);
}

.Breadcrumbs a:hover,
.Breadcrumbs a:focus
{
    color: var(--color__link);
}

.Breadcrumbs ol
{
    font-size: 80%;

    margin: 0;

    list-style: none;

    text-transform: uppercase;

    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.Breadcrumbs ol li
{
    display: inline-block;
}

.Breadcrumbs ol li:before
{
    display: none !important;

    content: none !important;
}

.Breadcrumbs ol li:after
{
    content: '/';

    color: var(--color__text-alt);
}

.Breadcrumbs ol li:last-child:after
{
    content: none;
}

.Button
{
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    line-height: 1.5;

    display: inline-block;

    margin: 0;
    padding: .5em .8em;

    cursor: pointer;

    color: var(--color__background);
    border: 0;
    background: var(--color__link);
}
.Button:visited
{
    color: var(--color__background);
}
.Button:hover,
.Button:focus
{
    text-decoration: underline;
}

.Cards
{
    display: grid;

    margin-top: var(--margin__medium);
    margin-bottom: var(--margin__medium);

    grid-auto-flow: dense;
    grid-gap: var(--margin__medium);
    grid-template-columns: 1fr;
}
@media (min-width: 40em)
{
    .Cards
    {
        grid-template-columns: 1fr 1fr;
    }
}
@media (min-width: 55em)
{
    .Cards
    {
        grid-template-columns: 1fr 1fr 1fr;
    }
}
@media (min-width: 55em)
{
    .Cards.-max-2-columns
    {
        grid-template-columns: 1fr 1fr;
    }
}

.Card
{
    position: relative;

    display: flex;
    overflow: hidden;
    flex-direction: column;

    min-height: 25vh;
    padding: calc(var(--padding__small) * 1.5);

    color: var(--color__text__contrast);
    background: var(--color__background__contrast__widget);
    background-position: center;
    background-size: cover;
}
.Card.-align-bottom
{
    padding-top: 8rem;

    justify-content: flex-end;
}
.Card.-align-top
{
    justify-content: flex-start;
}
@media (min-width: 55em)
{
    .Card.post:first-of-type
    {
        aspect-ratio: 21/9;
        grid-column-start: span 3;
    }
    .Card.post:first-of-type .Card__title
    {
        font-size: 3rem;
    }
}
.Card.-featured-image:after
{
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';

    background: var(--color__overlay);
}

.Card__content
{
    font-size: var(--font__size-base);

    z-index: 10;
}
.Card__content > *
{
    margin: 0;
}
.Card__content ul,
.Card__content ol
{
    -webkit-padding-start: 2.5rem;
    padding-inline-start: 2.5rem;
}
.Card__content a
{
    color: var(--color__text__contrast);
}
.Card__content ol.metadata-list
{
    list-style: none;

    -webkit-margin-before: 1em;
    margin-block-start: 1em;
    -webkit-padding-start: 0;
    padding-inline-start: 0;
}
.Card__content .metadata-list__item
{
    overflow: hidden;

    margin-bottom: var(--margin__small);

    list-style: none;

    white-space: nowrap;
    text-overflow: ellipsis;
}
.Card__content .metadata-list__item:before
{
    display: none;

    content: none;
}
.Card__content .metadata-list__item:last-child
{
    margin-bottom: 0;
}
.Card__content .metadata-list__item .metadata-title
{
    font-size: var(--font__size__heading-4);

    margin: 0;
}
.Card__content .metadata-list__item p
{
    margin: 0;
}
.Card__content .metadata-list__item .metadata-content
{
    overflow: hidden;

    white-space: nowrap;
    text-overflow: ellipsis;
}
.Card__content .metadata-list__item .metadata-list__item-title
{
    display: block;

    color: var(--color__text__contrast);
}
.Card__content .metadata-list__item .metadata-values
{
    color: var(--color__text__contrast__alt);
}

.Card__image
{
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;
    margin: 0;
}
.Card__image img
{
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;

    -o-object-fit: cover;
       object-fit: cover;
    -o-object-position: center;
       object-position: center;
}

.Card__content__extra
{
    font-size: 90%;
    line-height: 1;

    position: absolute;
    z-index: 10;
}
.Card__content__extra.-top-left
{
    top: calc(var(--padding__small) * 1.5);
    left: calc(var(--padding__small) * 1.5);

    margin-right: 8rem;
}
.Card__content__extra.-top-right
{
    top: calc(var(--padding__small) * 1.5);
    right: calc(var(--padding__small) * 1.5);

    margin-left: 8rem;
}
.Card__content__extra.-symbol
{
    font-size: 2.5rem;
}
.Card__content__extra > :nth-child(2)
{
    margin-left: .5em;
}
.Card__content__extra .tags .tag
{
    display: inline-block;

    width: auto;
    margin-right: .4em;
    margin-bottom: .4em;

    color: var(--color__text__contrast);
}
.Card__content__extra .tags .tag:before
{
    content: '#';
}
.Card__content__extra .webmentions__count
{
    margin-right: .5em;
}

.Card__post-list
{
    margin-top: var(--margin__small);
    margin-bottom: var(--margin__small);

    list-style: decimal-leading-zero;
}

.Card__title
{
    font-size: 2.5rem;
    font-weight: 900;

    margin: 0;

    color: var(--color__text__contrast);
}
.Card__title a
{
    color: inherit;
}

.Card__title-link:after
{
    position: absolute;
    top: 0;
    left: 0;

    display: block;

    width: 100%;
    height: 100%;

    content: '';
}

.Comments__list
{
    margin-top: var(--margin__medium);

    list-style: none;

    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.Comments_reference
{
    font-size: calc(var(--font__size) * .85);
}

.Comments__panel
{
    font-weight: 500;
}
.Comments__panel .Comments__likes,
.Comments__panel .Comments__reposts,
.Comments__panel .Comments__comments
{
    margin-right: .5em;
}
.Comments__panel .Comments__status
{
    display: inline-block;

    padding: var(--padding__medium);

    background-color: var(--color__background__alt);
}
.Comments__panel svg
{
    height: 1.2em;

    vertical-align: sub;
}

.Comments__metadata
{
    font-size: var(--font__size-base);
    line-height: 1.4;

    color: var(--color__text-alt);
}
.Comments__metadata span.Comments__author
{
    color: var(--color__text);
}

.Comments__author .Comments__avatar
{
    position: absolute;
    top: 1.2rem;
    left: 1rem;

    width: 4.5rem;
    margin-right: .5em;

    vertical-align: bottom;

    border-radius: 50%;
}

.Comments__list-item
{
    position: relative;

    display: flex;
    flex-direction: column;

    margin-bottom: var(--margin__medium);
    padding: 1rem 1rem 1rem 7rem;
}
.Comments__list-item:before
{
    content: none !important;
}
.Comments__list-item.-is-me
{
    background: var(--color__background__alt);
}
.Comments__list-item.-repost-of
{
    padding-left: 4rem;
}
.Comments__list-item.-repost-of .Comments__author .Comments__avatar
{
    top: .8rem;
    left: .5rem;

    width: 2.5rem;
}
.Comments__list-item:hover
{
    background: var(--color__background__widget);
}
.Comments__list-item:last-child
{
    margin-bottom: 0;
}
.Comments__list-item p
{
    margin: .3em 0 0 0;
}

.Form
{
    font-family: var(--font__sans-serif);
    font-size: var(--font__size);

    margin-top: 2em;

    color: var(--color__text);
}
.Form.-inactive label
{
    display: none !important;
}
.Form.-inactive .-collapsed
{
    display: none !important;
}
.Form.-inactive textarea
{
    overflow: hidden;

    height: 2.7em;
    min-height: 0 !important;

    resize: none !important;
}
.Form__group
{
    position: relative;

    margin: 0 0 1em 0;
}
.Form__group input,
.Form__group textarea
{
    font-family: inherit;
    font-size: inherit;

    width: 100%;
    padding: .5em;

    color: inherit;
    border: 2px solid var(--color__background__widget);
    background: var(--color__background);
}
.Form__group input:focus,
.Form__group textarea:focus
{
    border-color: var(--color__text);
}
.Form__group input:focus + label,
.Form__group textarea:focus + label
{
    color: var(--color__text);
}
.Form__group textarea
{
    min-height: 15rem;

    resize: vertical;
}
.Form__group label
{
    font-size: var(--font__size-base);
    line-height: 1;

    position: absolute;
    top: -7px;
    left: 4px;

    display: inline-block;

    padding: 0 .5em;

    text-align: center;
    text-transform: uppercase;

    color: var(--color__text-alt);
    background: var(--color__background);
}

.post-header .post-title .beer-label
{
    display: block;

    width: 40rem;
    max-width: 100%;

    color: var(--color__text);
}

.beer-title a .beer-label
{
    color: var(--color__text);
}
.beer-title a:hover .beer-label,
.beer-title a:visited .beer-label
{
    color: var(--color__text);
}

.beer-statistics__list
{
    display: grid;

    max-width: 30em;
    margin: 0;
    padding: 0;

    list-style: none;

    grid-auto-flow: dense;
    grid-gap: var(--margin__small);
    grid-template-columns: 1fr 1fr;
}
@media (min-width: 25em)
{
    .beer-statistics__list
    {
        grid-template-columns: 1fr 1fr 1fr;
    }
}
.beer-statistics__list-item
{
    display: flex;
    flex-direction: column;

    justify-content: flex-end;
}
.beer-statistics__list-item__label
{
    font-size: var(--font__size-base);

    color: var(--color__text-alt);
}
.beer-statistics__list-item__value
{
    font-size: var(--font__size__heading-4);
}

.beer-ingredients__label
{
    display: block;

    -webkit-margin-before: var(--margin__medium);
    margin-block-start: var(--margin__medium);
    -webkit-margin-after: var(--margin__small);
    margin-block-end: var(--margin__small);
}
.beer-ingredients__label .icon
{
    margin-left: -.2em;
}
.beer-ingredients__list
{
    max-width: 25em;
    margin: 0;
    padding: 0;

    list-style: none;
}
.beer-ingredients__list-item
{
    display: grid;

    margin-bottom: .5em;

    grid-template-columns: 3.8em 1fr auto;
    grid-gap: 0 .5rem;
    grid-template-rows: auto;
    grid-template-areas: 'left middle right' 'left bottom bottom-right';
}
.beer-ingredients__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 3;
    -ms-grid-column: 1;
    grid-area: left;
}
.pack__list-item > .beer-ingredients__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 1;
    -ms-grid-column: 1;
}
.pack__list-item.-overview > .beer-ingredients__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 1;
    -ms-grid-column: 1;
}
.beer-ingredients__list-item__middle
{
    overflow: hidden;

    white-space: nowrap;
    text-overflow: ellipsis;

    -ms-grid-row: 1;
    -ms-grid-column: 3;
    grid-area: middle;
}
.pack__list-item > .beer-ingredients__list-item__middle
{
    -ms-grid-row: 1;
    -ms-grid-column: 3;
}
.pack__list-item.-overview > .beer-ingredients__list-item__middle
{
    -ms-grid-row: 1;
    -ms-grid-column: 3;
}
.beer-ingredients__list-item__right
{
    text-align: right;

    -ms-grid-row: 1;
    -ms-grid-column: 5;
    grid-area: right;
}
.pack__list-item > .beer-ingredients__list-item__right
{
    -ms-grid-row: 1;
    -ms-grid-column: 5;
}
.pack__list-item.-overview > .beer-ingredients__list-item__right
{
    -ms-grid-row: 1;
    -ms-grid-column: 5;
}
.beer-ingredients__list-item__bottom-left
{
    font-size: var(--font__size-base);

    -ms-grid-row: 3;
    -ms-grid-column: 1;
    grid-area: bottom-left;
}
.pack__list-item.-overview > .beer-ingredients__list-item__bottom-left
{
    -ms-grid-row: 3;
    -ms-grid-column: 1;
}
.beer-ingredients__list-item__bottom
{
    font-size: var(--font__size-base);

    -ms-grid-row: 3;
    -ms-grid-column: 3;
    grid-area: bottom;
}
.pack__list-item > .beer-ingredients__list-item__bottom
{
    -ms-grid-row: 3;
    -ms-grid-column: 3;
}
.pack__list-item.-overview > .beer-ingredients__list-item__bottom
{
    -ms-grid-row: 3;
    -ms-grid-column: 3;
}
.beer-ingredients__list-item__bottom-right
{
    font-size: var(--font__size-base);

    text-align: right;

    -ms-grid-row: 3;
    -ms-grid-column: 5;
    grid-area: bottom-right;
}
.pack__list-item > .beer-ingredients__list-item__bottom-right
{
    -ms-grid-row: 3;
    -ms-grid-column: 5;
}
.pack__list-item.-overview > .beer-ingredients__list-item__bottom-right
{
    -ms-grid-row: 3;
    -ms-grid-column: 5;
}

.batches__status
{
    font-size: var(--font__size);

    position: relative;
    bottom: .1em;

    display: inline-block;

    padding: .3em;

    vertical-align: middle;

    background: var(--color__background__widget);
}

.beers
{
    display: grid;

    margin-top: var(--margin__medium);
    margin-bottom: var(--margin__medium);

    grid-auto-flow: dense;
    grid-gap: var(--margin__medium);
    grid-template-columns: 1fr;
}
@media (min-width: 40em)
{
    .beers
    {
        grid-template-columns: 1fr 1fr;
    }
}

.beer
{
    margin: auto;
    padding: var(--padding__medium);
}
.beer a:hover .beer-label,
.beer a:focus .beer-label
{
    filter: drop-shadow(0 0 1rem var(--color__link));
}
.beer .beer-title
{
    margin: 0;
}
.beer .beer-label
{
    width: 100%;

    transition: .25s all ease;
}

.columns
{
    display: grid;

    grid-template-columns: 1fr;
    grid-gap: var(--margin__medium);
}
@media (min-width: 40em)
{
    .columns
    {
        grid-template-columns: repeat(3, minmax(0, 1fr));
    }
}

.content pre
{
    line-height: 125%;

    overflow-y: hidden;

    width: 100vw;
    max-width: 100%;
    margin-top: var(--margin__medium);
    margin-right: 0;
    margin-bottom: 0;
    margin-left: 0;
    padding: var(--padding__small);

    word-wrap: break-word;

    border: 0;
    background-color: var(--color__background__alt);
}
.content pre code
{
    font-size: 1.6rem;

    display: block;

    padding: 0;

    color: var(--color__text);
    background: none;
}

.header-anchor
{
    position: relative;

    color: var(--color__text);
}
.header-anchor:visited
{
    color: var(--color__text);
}
.header-anchor:before
{
    position: absolute;
    left: -.8em;

    display: none;

    content: '#';
}
.header-anchor:focus,
.header-anchor:hover
{
    color: var(--color__link);
}
.header-anchor:focus:before,
.header-anchor:hover:before
{
    display: block;
}

ol.activity-list
{
    list-style: none;

    -webkit-margin-before: 1em;
    margin-block-start: 1em;
    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.activity-list__item
{
    display: flex;

    margin-bottom: var(--margin__small);
}
.activity-list__item:last-child
{
    margin-bottom: 0;
}
.activity-list__item .icon
{
    font-size: 1.5em;

    margin-top: .4em;
    margin-right: .5em;
}
.activity-list__item .activity-title
{
    font-size: var(--font__size__heading-4);

    margin: 0;
}
.activity-list__item p
{
    margin: 0;
}
.activity-list__item .activity-content
{
    overflow: hidden;

    white-space: nowrap;
    text-overflow: ellipsis;
}
.activity-list__item .activity-metadata
{
    color: var(--color__text-alt);
}

ol.book-list
{
    list-style: none;

    -webkit-margin-before: 1em;
    margin-block-start: 1em;
    -webkit-padding-start: .6em;
    padding-inline-start: .6em;
}

.book-list__item
{
    display: flex;

    margin-bottom: var(--margin__small);
}
.book-list__item:last-child
{
    margin-bottom: 0;
}
.book-list__item .book-list__cover
{
    width: 5rem;
    height: -moz-fit-content;
    height:      fit-content;
    margin-right: .5em;
    margin-bottom: 0;
    margin-left: 0;
}
.book-list__item .book-title
{
    font-size: var(--font__size__heading-4);

    margin: 0;
}
.book-list__item p
{
    margin: 0;
}
.book-list__item .game-metadata
{
    color: var(--color__text-alt);
}

ol.game-list
{
    list-style: none;

    -webkit-margin-before: 1em;
    margin-block-start: 1em;
    -webkit-padding-start: .6em;
    padding-inline-start: .6em;
}

.game-list__item
{
    display: flex;

    margin-bottom: var(--margin__small);
}
.game-list__item:last-child
{
    margin-bottom: 0;
}
.game-list__item .icon
{
    width: 1em;
    height: 1em;
    margin-top: .4em;
    margin-right: .5em;
    margin-bottom: 0;
    margin-left: 0;
}
.game-list__item .game-title
{
    font-size: var(--font__size__heading-4);

    margin: 0;
}
.game-list__item p
{
    margin: 0;
}
.game-list__item .game-metadata
{
    color: var(--color__text-alt);
}

ol.list
{
    list-style: disc;
}

.list__item
{
    margin-bottom: var(--margin__small);
}
.list__item:last-child
{
    margin-bottom: 0;
}
.list__item .title
{
    font-size: var(--font__size__heading-4);

    margin: 0;
}
.list__item p
{
    margin: 0;
}
.list__item .metadata
{
    color: var(--color__text-alt);
}

.content img
{
    display: block;

    max-width: 100%;
    height: auto;
    margin: 0 auto;
}

.content
{
    width: 100%;
    max-width: var(--max-width__content);
    margin-right: auto;
    margin-left: auto;
    padding: var(--padding__medium);
}
@media (min-width: 40em)
{
    .content
    {
        padding-bottom: var(--padding__large);
    }
}
.content > *
{
    width: 100%;
}
.content > :first-child
{
    margin-top: 0;
}
.content > :last-child
{
    margin-bottom: 0;
}

.icon
{
    position: relative;
    bottom: .1rem;

    display: inline-block;

    width: 1em;
    height: 1em;

    vertical-align: sub;
}
.icon.-large
{
    width: 1.5em;
    height: 1.5em;

    vertical-align: middle;
}
.icon.-strava
{
    color: #e34a00;
}
.icon.-gaming
{
    color: #b172fd;
}
.icon.-fermentables
{
    color: #ffca5a;
}
.icon.-hops
{
    color: #6f9a4b;
}
.icon.-yeast
{
    color: #e2b693;
}

.kg-card
{
    margin-top: var(--margin__medium);
    margin-bottom: var(--margin__medium);
}
@media (min-width: 55em)
{
    .kg-card
    {
        margin-top: var(--margin__large);
        margin-bottom: var(--margin__large);
    }
}

.kg-card.kg-embed-card
{
    aspect-ratio: 16/9;
}
.kg-card.kg-embed-card iframe
{
    width: 100%;
    height: auto;

    aspect-ratio: inherit;
}
.kg-card.kg-embed-card.responsive-video
{
    position: relative;
}
.kg-card.kg-embed-card.responsive-video iframe
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;
}

.kg-card.kg-width-full img
{
    position: relative;

    width: 100vw; /* Or whatever max width is */
    max-width: none;
    margin-right: calc(50% - 50vw);
    margin-left: calc(50% - 50vw); /* 50vw equals half the width */
}

@media (min-width: 55em)
{
    .kg-card.kg-gallery-card
    {
        margin-top: var(--margin__large);
        margin-bottom: var(--margin__large);
    }
}
.kg-card.kg-gallery-card .kg-gallery-container
{
    display: flex;
    flex-direction: column;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row
{
    display: flex;
    flex-direction: row;

    justify-content: center;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row:not(:first-of-type)
{
    margin: 1rem 0 0 0;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row .kg-gallery-image:not(:first-of-type)
{
    margin: 0 0 0 var(--margin__small);
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row .kg-gallery-image img
{
    display: block;

    width: 100%;
    height: 100%;
    margin: 0;
}

.kg-card.kg-width-wide
{
    width: 100%;

    --card__extra-width: 0;
}
@media (min-width: 55em)
{
    .kg-card.kg-width-wide
    {
        margin-top: var(--margin__large);
        margin-bottom: var(--margin__large);
    }
    .kg-card.kg-width-wide > *
    {
        width: calc(var(--max-width__content) + var(--card__extra-width));
        max-width: none;
        margin-left: calc(50% - (var(--max-width__content) + var(--card__extra-width)) / 2);
    }
}
@media (min-width: 65em)
{
    .kg-card.kg-width-wide
    {
        --card__extra-width: 12rem;
    }
}
@media (min-width: 90em)
{
    .kg-card.kg-width-wide
    {
        --card__extra-width: 35rem;
    }
}

figure.exif
{
    position: relative;
}
figure.exif:hover .exif__container,
figure.exif:focus .exif__container
{
    opacity: 1;
}

figure.exif:hover .exif__container,
figure.exif:focus .exif__container
{
    opacity: 1;
}

.exif__container
{
    font-size: 75%;

    position: absolute;
    left: 0;

    transform: translateY(calc(-100% - var(--margin__small)));

    opacity: 0;
    color: var(--color__text__contrast);
    text-shadow: 0 0 2px #000, 0 0 2px #000, 0 0 4px #000, 0 0 3px #000;
}
.exif__data
{
    display: block;
}
.exif__data:before
{
    display: inline-block;

    width: 5.5em;

    content: attr(data-type);
}

@media (min-width: 40em)
{
    .gallery
    {
        display: flex;
        flex-direction: column;
    }
    .gallery .gallery-row
    {
        margin: var(--margin__small) 0 0 0;
    }
    .gallery .gallery-row:first-child
    {
        margin-top: 0;
    }
    .gallery .gallery-row:last-child
    {
        margin-bottom: 0;
    }
}

.gallery-row
{
    margin: 0;
}
.gallery-row.-no-wrap
{
    display: flex;
    flex-direction: row;

    margin-top: var(--margin__small);

    justify-content: center;
}
.gallery-row.-no-wrap > figure
{
    margin: 0;
}
.gallery-row.-no-wrap > figure:not(:last-child)
{
    margin-right: var(--margin__small);
}
.gallery-row.-no-wrap img
{
    width: 100%;
}
@media (min-width: 40em)
{
    .gallery-row
    {
        display: flex;
        flex-direction: row;

        margin-top: var(--margin__medium);
        margin-bottom: var(--margin__medium);

        justify-content: center;
    }
    .gallery-row > figure
    {
        margin: 0;
    }
    .gallery-row > figure:not(:last-child)
    {
        margin-right: var(--margin__small);
    }
    .gallery-row img
    {
        width: 100%;
    }
}

.pack__label
{
    display: block;

    -webkit-margin-before: var(--margin__medium);
    margin-block-start: var(--margin__medium);
    -webkit-margin-after: var(--margin__small);
    margin-block-end: var(--margin__small);
}
.pack__label .icon
{
    margin-right: calc(.2em + .5rem);
}
.pack__item__category-heading
{
    font-weight: 600;

    text-transform: uppercase;
}
.pack__list
{
    display: block;

    max-width: 35em;
    margin: 0;
    padding: 0;

    list-style: none;

    -webkit-margin-before: var(--margin__medium);
    margin-block-start: var(--margin__medium);
    -webkit-margin-after: var(--margin__small);
    margin-block-end: var(--margin__small);
}
.pack__list__bar
{
    position: absolute !important;
    z-index: 1 !important;
    top: 0;
    right: 0;

    height: 100%;

    opacity: .5;
}
.pack__list-item
{
    display: grid;

    margin-bottom: .5em;

    grid-template-columns: 2em 1fr auto;
    grid-gap: 0 .5rem;
    grid-template-rows: auto;
    grid-template-areas: 'left middle right' 'bottom-left bottom bottom-right';
}
.pack__list-item.-overview
{
    position: relative;

    margin-bottom: .1rem;

    background: hsla(0, 0%, 70%, .1);

    grid-template-columns: 2em 1fr auto;
    grid-template-areas: 'left middle right' 'bottom-left bottom bottom-right';
}
.pack__list-item.-overview .icon
{
    margin-left: .3rem;
}
.pack__list-item.-overview > span
{
    position: relative;
    z-index: 2;
}
.pack__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 3;
    -ms-grid-column: 1;
    grid-area: left;
}
.pack__list-item > .pack__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 1;
    -ms-grid-column: 1;
}
.pack__list-item.-overview > .pack__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 1;
    -ms-grid-column: 1;
}
.pack__list-item__middle
{
    -ms-grid-row: 1;
    -ms-grid-column: 3;
    grid-area: middle;
}
.pack__list-item > .pack__list-item__middle
{
    -ms-grid-row: 1;
    -ms-grid-column: 3;
}
.pack__list-item.-overview > .pack__list-item__middle
{
    -ms-grid-row: 1;
    -ms-grid-column: 3;
}
.pack__list-item__right
{
    text-align: right;

    -ms-grid-row: 1;
    -ms-grid-column: 5;
    grid-area: right;
}
.pack__list-item > .pack__list-item__right
{
    -ms-grid-row: 1;
    -ms-grid-column: 5;
}
.pack__list-item.-overview > .pack__list-item__right
{
    -ms-grid-row: 1;
    -ms-grid-column: 5;
}
.pack__list-item__bottom-left
{
    font-size: var(--font__size-base);

    -ms-grid-row: 3;
    -ms-grid-column: 1;
    grid-area: bottom-left;
}
.pack__list-item.-overview > .pack__list-item__bottom-left
{
    -ms-grid-row: 3;
    -ms-grid-column: 1;
}
.pack__list-item__bottom
{
    font-size: var(--font__size-base);

    -ms-grid-row: 3;
    -ms-grid-column: 3;
    grid-area: bottom;
}
.pack__list-item > .pack__list-item__bottom
{
    -ms-grid-row: 3;
    -ms-grid-column: 3;
}
.pack__list-item.-overview > .pack__list-item__bottom
{
    -ms-grid-row: 3;
    -ms-grid-column: 3;
}
.pack__list-item__bottom-right
{
    font-size: var(--font__size-base);

    text-align: right;

    -ms-grid-row: 3;
    -ms-grid-column: 5;
    grid-area: bottom-right;
}
.pack__list-item > .pack__list-item__bottom-right
{
    -ms-grid-row: 3;
    -ms-grid-column: 5;
}
.pack__list-item.-overview > .pack__list-item__bottom-right
{
    -ms-grid-row: 3;
    -ms-grid-column: 5;
}
.pack__list-button
{
    position: absolute;
    z-index: 1;
    bottom: 0;
}

.js .pack__list-container
{
    overflow: hidden;
}
.js .pack__list-container.-collapsed
{
    position: relative;

    max-height: 20rem;
}
.js .pack__list-container.-collapsed:after
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';

    background: var(--color__background__gradient);
}
.js .pack__list-container > :first-child
{
    margin-top: 0;
}

.page-header
{
    position: relative;

    display: flex;
    overflow: hidden;
    flex-direction: column;

    padding-top: var(--padding__large);
    padding-bottom: var(--padding__medium);

    color: var(--color__text);
    background-position: center;
    background-size: cover;

    align-items: center;
    justify-content: flex-end;
}
.page-header a
{
    color: var(--color__text);
}
.page-header .page-title
{
    font-weight: 900;

    margin-bottom: var(--margin__small);
}
.page-header .page-date
{
    margin-top: var(--margin__small);
}
.page-header .tags
{
    margin-top: var(--margin__small);
}
.page-header .tags .tag
{
    margin-right: .4em;

    color: var(--color__text__contrast);
}
.page-header .tags .tag:before
{
    content: '#';
}
.page-header .page-metadata
{
    position: relative;
    z-index: 10;

    width: 100%;
    max-width: var(--max-width__content);
    padding: 0 var(--padding__medium);
}
.page-header .page-metadata :first-child
{
    margin-top: 0;
}
.page-header .page-metadata :last-child
{
    margin-bottom: 0;
}
@supports ((-webkit-background-clip: text) or (background-clip: text)) and (background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%))
{
    .page-header:not(.-feature-image) .page-title
    {
        color: transparent;
        background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%);
        -webkit-background-clip: text;
                background-clip: text;
    }
}
.page-header.-feature-image
{
    position: relative;

    min-height: 50vmin;
    max-height: 80vh;

    color: var(--color__text__contrast);
    background-color: black;
}
.page-header.-feature-image a
{
    color: var(--color__text__contrast);
}
.page-header.-feature-image .page-header__image
{
    position: absolute;
    top: 0;

    width: 100%;
    height: 100%;
    margin: 0;

    opacity: .5;
}
.page-header.-feature-image .page-header__image img
{
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;

    -o-object-fit: cover;
       object-fit: cover;
    -o-object-position: center;
       object-position: center;
}

.post
{
    overflow: hidden;

    width: 100%;
}

.canonical
{
    color: var(--color__text-alt);
}
.canonical:before
{
    content: 'Länk: ';
}

.post-header
{
    position: relative;

    display: flex;
    overflow: hidden;
    flex-direction: column;

    padding-top: var(--padding__large);
    padding-bottom: var(--padding__medium);

    color: var(--color__text);
    background-position: center;
    background-size: cover;

    align-items: center;
    justify-content: flex-end;
}
.post-header a
{
    color: var(--color__text);
}
.post-header .post-title
{
    font-weight: 900;

    margin-bottom: var(--margin__small);
}
.post-header .post-title svg
{
    width: 90%;
    max-width: 60rem;
    padding-bottom: var(--padding__small);
}
.post-header .post-date
{
    margin-top: var(--margin__small);
}
.post-header .tags
{
    margin-top: var(--margin__small);
}
.post-header .tags .tag
{
    display: inline-block;

    margin-right: .4em;

    color: inherit;
}
.post-header .tags .tag:before
{
    content: '#';
}
.post-header .post-metadata
{
    position: relative;
    z-index: 10;

    width: 100%;
    max-width: var(--max-width__content);
    padding: 0 var(--padding__medium);
}
.post-header .post-metadata :first-child
{
    margin-top: 0;
}
.post-header .post-metadata :last-child
{
    margin-bottom: 0;
}
@supports ((-webkit-background-clip: text) or (background-clip: text)) and (background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%))
{
    .post-header:not(.-feature-image) .post-title
    {
        color: transparent;
        background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%);
        -webkit-background-clip: text;
                background-clip: text;
    }
}
.post-header.-feature-image
{
    position: relative;

    min-height: 50vmin;
    max-height: 80vh;

    color: var(--color__text__contrast);
    background-color: black;
}
.post-header.-feature-image a
{
    color: var(--color__text__contrast);
}
.post-header.-feature-image .post-header__image
{
    position: absolute;
    top: 0;

    width: 100%;
    height: 100%;
    margin: 0;

    opacity: .5;
}
.post-header.-feature-image .post-header__image img
{
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;

    -o-object-fit: cover;
       object-fit: cover;
    -o-object-position: center;
       object-position: center;
}

.next-post
{
    position: relative;

    display: flex;
    overflow: hidden;
    flex-direction: column;

    margin: auto;
    padding: calc(var(--padding__medium) * 4) 0;

    color: white;
    background: black;
    background-position: center;
    background-size: cover;

    align-items: center;
}
.next-post .read-more-text
{
    font-family: var(--font__sans-serif);
    font-size: 90%;
    font-weight: 600;

    margin-bottom: var(--margin__medium);

    text-align: center;
    text-transform: uppercase;
}
.next-post .next-post__title
{
    font-size: var(--font__size__heading-1);
    font-weight: 900;
    line-height: 1.2;

    display: block;

    letter-spacing: -.2rem;

    color: white;
}
.next-post .next-post__title:visited
{
    color: white;
}
.next-post .next-post__title:after
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';
}
.next-post .next-post__metadata
{
    z-index: 10;

    width: 100vw;
    max-width: var(--max-width__content);
    padding: 0 var(--padding__medium);
}
.next-post .next-post__date
{
    margin-top: var(--padding__small);
}
.next-post .next-post__date
{
    margin-top: var(--padding__small);
}
.next-post .next-post__image
{
    position: absolute;
    top: 0;

    width: 100%;
    height: 100%;
    margin: 0;

    opacity: .5;
}
.next-post .next-post__image img
{
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;

    -o-object-fit: cover;
       object-fit: cover;
    -o-object-position: center;
       object-position: center;
}
.next-post:after
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';

    background: var(--color__overlay);
}

.separator-heading
{
    font-size: var(--font__size__heading-5);
    font-weight: 500;

    position: relative;

    margin-top: var(--margin__large);
    margin-bottom: var(--margin__medium);

    text-align: center;
    text-transform: uppercase;

    color: var(--color__text-alt);
}
.separator-heading:after
{
    position: absolute;
    z-index: 0;
    top: 10px;
    left: 0;

    display: block;

    width: 100%;
    height: 2px;

    content: '';

    background: var(--color__background__widget);
}
.separator-heading span
{
    position: relative;
    z-index: 10;

    display: inline-block;

    padding: 0 1em;

    background: var(--color__background);
}

.post-list
{
    list-style: none;

    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.post-list__item
{
    margin-bottom: var(--margin__medium);
}
.post-list__item:last-child
{
    margin-bottom: 0;
}
.post-list__item .post-title
{
    font-size: var(--font__size__heading-4);
    font-weight: 500;

    margin: 0;
}
.post-list__item p
{
    margin: 0;
}

.post
{
    overflow: hidden;

    width: 100%;
}

.canonical
{
    color: var(--color__text-alt);
}
.canonical:before
{
    content: 'Länk: ';
}

.site-footer
{
    display: flex;
    flex-direction: column;

    padding: var(--padding__medium) 0;

    border-top: 1px solid var(--color__background__widget);

    align-content: space-around;
    align-items: center;
    justify-content: space-around;
}
.site-footer .column
{
    margin: var(--margin__medium) 0;
}

.site-footer__content
{
    font-size: 90%;

    width: 100%;
    max-width: var(--max-width__base);
    padding: 0 var(--padding__medium);

    grid-template-columns: 1fr;
    grid-gap: var(--margin__medium);
}
@media (min-width: 40em)
{
    .site-footer__content
    {
        grid-template-columns: 1fr 2fr 1fr;
    }
}
.site-footer__content label
{
    color: var(--color__text);
}

.site-footer__navigation
{
    color: var(--color__text);
}
.site-footer__navigation ul
{
    margin: 0;

    list-style: none;

    -webkit-padding-start: 0;
    padding-inline-start: 0;
}
.site-footer__navigation a
{
    color: var(--color__text);
}
.site-footer__navigation a:visited
{
    color: var(--color__text);
}

.site-footer__heading
{
    font-size: var(--font__size__heading-4);

    margin-top: 0;
}

.site-header__navigation
{
    text-align: right;

    flex: 1;
}
.site-header__navigation ul
{
    margin: 0;
}
.site-header__navigation ul li
{
    display: inline-block;

    margin-left: var(--margin__small);
}
.site-header__navigation ul li:first-child
{
    margin-left: 0;
}

.site-header
{
    background-color: var(--color__background);
}

.site-header__content
{
    font-size: var(--header__font-scale);
    line-height: var(--header__height);

    position: relative;
    z-index: 10;

    display: flex;
    flex-direction: row;

    max-width: var(--max-width__base);
    height: var(--header__height);
    max-height: var(--header__height);
    margin: auto;
    padding-right: var(--padding__medium);
    padding-left: var(--padding__medium);

    color: var(--color__text-alt);
}
.site-header__content .site__title
{
    font-size: inherit;
    line-height: inherit;

    margin: 0;

    letter-spacing: inherit;
}
.site-header__content .site__image
{
    width: calc(var(--header__height) * .5);
    margin: 0;
    margin-right: .75em;

    vertical-align: middle;

    border-radius: 50%;
}
.site-header__content a
{
    font-weight: 500;

    color: var(--color__text);
}
.site-header__content a:visited
{
    color: var(--color__text);
}
.site-header__content .site__description
{
    font-family: var(--font__serif);
    font-style: italic;

    display: none;
}
@media (min-width: 40em)
{
    .site-header__content .site__description
    {
        display: inline;
    }
}

.statistics__list
{
    display: grid;

    max-width: 35em;
    margin: 0;
    padding: 0;

    list-style: none;

    grid-auto-flow: dense;
    grid-gap: var(--margin__small);
    grid-template-columns: 1fr 1fr;
}
@media (min-width: 25em)
{
    .statistics__list
    {
        grid-template-columns: 1fr 1fr 1fr;
    }
}
.statistics__list.-column-count-4
{
    grid-template-columns: 1fr 1fr;
}
@media (min-width: 40em)
{
    .statistics__list.-column-count-4
    {
        grid-template-columns: 1fr 1fr 1fr 1fr;
    }
}
.statistics__list-item
{
    display: flex;
    flex-direction: column;

    justify-content: flex-end;
}
.statistics__list-item__label
{
    font-size: var(--font__size-base);

    color: var(--color__text-alt);
}
.statistics__list-item__value
{
    font-size: var(--font__size__heading-4);
}

.tag-header
{
    position: relative;

    display: flex;
    overflow: hidden;
    flex-direction: column;

    padding-top: var(--padding__large);
    padding-bottom: var(--padding__medium);

    color: var(--color__text);
    background-position: center;
    background-size: cover;

    align-items: center;
    justify-content: flex-end;
}
.tag-header .tag-metadata
{
    position: relative;
    z-index: 10;

    width: 100%;
    max-width: var(--max-width__content);
    padding: 0 var(--padding__medium);
}
.tag-header .tag-metadata :first-child
{
    margin-top: 0;
}
.tag-header .tag-metadata :last-child
{
    margin-bottom: 0;
}
.tag-header .tag-title
{
    font-weight: 900;

    margin-bottom: var(--margin__small);
}
.tag-header .tag-date
{
    margin-top: var(--margin__small);
}
@supports ((-webkit-background-clip: text) or (background-clip: text)) and (background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%))
{
    .tag-header:not(.-feature-image) .tag-title
    {
        color: transparent;
        background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%);
        -webkit-background-clip: text;
                background-clip: text;
    }
}
.tag-header.-feature-image
{
    height: 50vh;
    min-height: 25rem;
    max-height: 50vw;

    color: var(--color__text__contrast);
}
.tag-header.-feature-image:after
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';

    background: var(--color__overlay);
}

article.tag
{
    overflow: hidden;

    width: 100%;
}

.tags
{
    color: var(--color__text-alt);
}
.tags .tag:before
{
    content: '#';
}

.post-template main
{
    background: var(--color__background);
}

.tag-template main
{
    background: var(--color__background);
}

.page-template main
{
    background: var(--color__background);
}

.home-template main
{
    background: var(--color__background);
}

/* Deprecated fix for the old way of handling images, just so they don't look terrible */
.content img[src$='#large'],
.content img[src$='#full']
{
    width: 100%;
}

/* Fix for 100vw and horizontal scrollbar */
body
{
    overflow-x: hidden;
}

.hidden
{
    display: none !important;
}

.wrapper
{
    width: 100%;
    max-width: var(--max-width__base);
    margin-right: auto;
    margin-left: auto;
    padding: 0 var(--padding__medium);
}

.secondary
{
    color: var(--color__text-alt);
}

.-column-count-2
{
    -moz-column-count: 2;
         column-count: 2;
}

.sr-only
{
    position: absolute;

    overflow: hidden;
    clip: rect(0, 0, 0, 0);

    width: 1px;
    height: 1px;
    margin: -1 px;
    padding: 0;

    white-space: nowrap;

    border-width: 0;
}

.uppercase
{
    text-transform: uppercase;
}

.lowercase
{
    text-transform: lowercase;
}

.smallcaps
{
    font-variant: small-caps;
}

.light
{
    font-weight: 400;
}

.semibold
{
    font-weight: 600;
}

.bold
{
    font-weight: 700;
}

small,
.small
{
    font-size: var(--font__size-base);
}

.normal
{
    font-size: var(--font__size);
}

.large
{
    font-size: var(--font__size__heading-4);
}

.no-js .hidden\@no-js
{
    display: none;
}

@media print
{
    .hidden\@print
    {
        display: none !important;
    }
    .kg-bookmark-thumbnail
    {
        display: none !important;
    }
    a,
    p,
    span,
    ul,
    ol,
    li,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6
    {
        color: black !important;
    }
    main.main
    {
        background: white !important;
    }
    .header
    {
        color: black !important;
        background: white !important;
    }
    .header:after
    {
        display: none !important;
    }
    .header .header__top
    {
        display: none !important;
    }
    .header .hero
    {
        height: auto !important;
    }
    .header .hero-content
    {
        width: 100% !important;
        max-width: 100% !important;
    }
    .header .post__read-time,
    .header .post__tags
    {
        display: none !important;
    }
    .content
    {
        width: 100% !important;
        max-width: 100% !important;
        padding: 0 !important;
        padding-top: var(--margin__medium);
    }
    .content > *
    {
        margin-top: var(--margin__medium);
        margin-bottom: var(--margin__small);

        color: black !important;
        background: white !important;
    }
    .content pre
    {
        color: black !important;
        border: 1px solid black;
        background: white !important;
    }
    .content pre code
    {
        color: black !important;
    }
    .post-header
    {
        min-height: 0 !important;
        margin-bottom: 1em !important;
        padding: 0 !important;

        background: white !important;
    }
    .post-header.-feature-image:after
    {
        display: none;
    }
    .post-header .post-metadata
    {
        max-width: none !important;
        padding: 0;
    }
    .separator-heading
    {
        font-size: var(--font__size__heading-2);

        text-align: left;
        text-transform: initial;
    }
    .separator-heading span
    {
        padding: 0;
    }
    .separator-heading:after
    {
        display: none;
    }
    .tags .tag:before
    {
        margin-right: .2em;
        margin-left: -.2em;

        content: ',';
    }
    .tags .tag:first-of-type:before
    {
        display: none;
    }
    .-collapsed
    {
        max-height: none !important;
    }
    .-collapsed:after
    {
        display: none !important;
    }
    a.Button
    {
        position: initial !important;

        border: 1px solid black !important;
        background: none !important;
    }
    .Button:not(a)
    {
        display: none !important;
    }
    a[href^=http],
    a[href^='/']
    {
        text-decoration: underline !important;

        color: #006bf1 !important;
    }
    a[href^=http]:after,
    a[href^='/']:after
    {
        font-size: 85%;

        content: ' [' attr(href) ']';
        vertical-align: super;
    }
}
@media (prefers-color-scheme: dark)
{
    :root
    {
        --color__background: #141414;
        --color__background__alt: #1e1e1e;
        --color__background__widget: #333;
        --color__background__contrast: #141414;
        --color__background__contrast__widget: #262626;
        --color__background__contrast__alt: #333;
        --color__background__gradient: linear-gradient(180deg,rgba(0,0,0,0) 0,#141414 100%);
        --color__overlay: rgba(0,0,0,.5);
        --color__link: #6183fd;
        --color__link__visited: #b172fd;
        --color__text: #f1f1f1;
        --color__text-alt: #a6a6a6;
        --color__text__contrast: white;
    }
}
[data-theme=light]
{
    --color__background: white;
    --color__background__alt: #f7f7f7;
    --color__background__widget: #f1f1f1;
    --color__background__contrast: #262626;
    --color__background__contrast__widget: #141414;
    --color__background__contrast__alt: #050505;
    --color__background__gradient: linear-gradient(180deg,rgba(0,0,0,0) 0,white 100%);
    --color__overlay: rgba(0,0,0,.5);
    --color__link: hsl(240, 100%, 60%);
    --color__link__visited: hsl(285, 100%, 40%);
    --color__text: black;
    --color__text-alt: #404040;
    --color__text__contrast: white;
    --color__text__contrast__alt: #a9a9a9;
}

[data-theme=dark]
{
    --color__background: #141414;
    --color__background__alt: #1e1e1e;
    --color__background__widget: #333;
    --color__background__contrast: #141414;
    --color__background__contrast__widget: #262626;
    --color__background__contrast__alt: #333;
    --color__background__gradient: linear-gradient(180deg,rgba(0,0,0,0) 0,#141414 100%);
    --color__overlay: rgba(0,0,0,.5);
    --color__link: #6183fd;
    --color__link__visited: #b172fd;
    --color__text: #f1f1f1;
    --color__text-alt: #a6a6a6;
    --color__text__contrast: white;
    --color__text__contrast__alt: #a9a9a9;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1c3RhdmxpbmRxdmlzdC5jc3MiLCJndXN0YXZsaW5kcXZpc3Quc2NzcyIsIjAxLnNldHRpbmdzL2JyZWFrcG9pbnRzLnNjc3MiLCIwMS5zZXR0aW5ncy9jb2xvcnMuc2NzcyIsIjAxLnNldHRpbmdzL2ZvbnRzLnNjc3MiLCIwMy5nZW5lcmljL19jc3MtcmVzZXQuc2NzcyIsIjAzLmdlbmVyaWMvX2ZvbnRzLS1ub3RvLnNjc3MiLCIwMy5nZW5lcmljL19wcmlzbS0tY29kZS1oaWdobGlnaHRpbmcuc2NzcyIsIjAzLmdlbmVyaWMvX3Jvb3QtdmFyaWFibGVzLnNjc3MiLCIwMy5nZW5lcmljL2dlbmVyaWMuc2NzcyIsIjA0LmVsZW1lbnRzL2NvZGUuc2NzcyIsIjA0LmVsZW1lbnRzL2ZpZ3VyZS5zY3NzIiwiMDIudG9vbHMvbWl4aW5zLnNjc3MiLCIwNC5lbGVtZW50cy9oZWFkaW5ncy5zY3NzIiwiMDQuZWxlbWVudHMvaW1hZ2VzLnNjc3MiLCIwNC5lbGVtZW50cy9saW5rcy5zY3NzIiwiMDQuZWxlbWVudHMvbGlzdHMuc2NzcyIsIjA0LmVsZW1lbnRzL3BzZXVkby5zY3NzIiwiMDQuZWxlbWVudHMvc2VsZWN0LnNjc3MiLCIwNC5lbGVtZW50cy90eXBvZ3JhcGh5LnNjc3MiLCIwNS5vYmplY3RzL0JyZWFkY3J1bWJzLnNjc3MiLCIwNS5vYmplY3RzL0J1dHRvbi5zY3NzIiwiMDUub2JqZWN0cy9DYXJkLnNjc3MiLCIwNS5vYmplY3RzL0NvbW1lbnRzLnNjc3MiLCIwNS5vYmplY3RzL0Zvcm0uc2NzcyIsIjA2LmNvbXBvbmVudHMvYnJld2VyeV9fYmVlcl9fbGFiZWwuc2NzcyIsIjA2LmNvbXBvbmVudHMvYnJld2VyeV9fYmVlci5zY3NzIiwiMDYuY29tcG9uZW50cy9icmV3ZXJ5X19iZWVycy5zY3NzIiwiMDYuY29tcG9uZW50cy9jb2x1bW5zLnNjc3MiLCIwNi5jb21wb25lbnRzL2NvbnRlbnRfX2NvZGUtYmxvY2suc2NzcyIsIjA2LmNvbXBvbmVudHMvY29udGVudF9faGVhZGluZy1hbmNob3JzLnNjc3MiLCIwNi5jb21wb25lbnRzL2NvbnRlbnRfX2xpc3RfX2FjdGl2aXR5LnNjc3MiLCIwNi5jb21wb25lbnRzL2NvbnRlbnRfX2xpc3RfX2Jvb2suc2NzcyIsIjA2LmNvbXBvbmVudHMvY29udGVudF9fbGlzdF9fZ2FtZS5zY3NzIiwiMDYuY29tcG9uZW50cy9jb250ZW50X19saXN0LnNjc3MiLCIwNi5jb21wb25lbnRzL2NvbnRlbnRfX21lZGlhLnNjc3MiLCIwNi5jb21wb25lbnRzL2NvbnRlbnQuc2NzcyIsIjA2LmNvbXBvbmVudHMvaWNvbi5zY3NzIiwiMDYuY29tcG9uZW50cy9rb2VuaWctY2FyZC0tY2FyZC5zY3NzIiwiMDYuY29tcG9uZW50cy9rb2VuaWctY2FyZC0tZW1iZWQuc2NzcyIsIjA2LmNvbXBvbmVudHMva29lbmlnLWNhcmQtLWZ1bGwuc2NzcyIsIjA2LmNvbXBvbmVudHMva29lbmlnLWNhcmQtLWdhbGxlcnkuc2NzcyIsIjA2LmNvbXBvbmVudHMva29lbmlnLWNhcmQtLXdpZGUuc2NzcyIsIjA2LmNvbXBvbmVudHMvbWVkaWFfX2ZpZ3VyZV9fZXhpZi5zY3NzIiwiMDYuY29tcG9uZW50cy9tZWRpYV9fZ2FsbGVyeS5zY3NzIiwiMDYuY29tcG9uZW50cy9wYWNrLnNjc3MiLCIwNi5jb21wb25lbnRzL3BhZ2VfX2hlYWRlci5zY3NzIiwiMDYuY29tcG9uZW50cy9wYWdlLnNjc3MiLCIwNi5jb21wb25lbnRzL3Bvc3RfX2hlYWRlci5zY3NzIiwiMDYuY29tcG9uZW50cy9wb3N0X19uZXh0LXBvc3Quc2NzcyIsIjA2LmNvbXBvbmVudHMvcG9zdF9fc2VwYXJhdG9yLWhlYWRpbmcuc2NzcyIsIjA2LmNvbXBvbmVudHMvcG9zdC1saXN0LnNjc3MiLCIwNi5jb21wb25lbnRzL3Bvc3Quc2NzcyIsIjA2LmNvbXBvbmVudHMvc2l0ZS1mb290ZXIuc2NzcyIsIjA2LmNvbXBvbmVudHMvc2l0ZS1oZWFkZXJfX25hdmlnYXRpb24uc2NzcyIsIjA2LmNvbXBvbmVudHMvc2l0ZS1oZWFkZXIuc2NzcyIsIjA2LmNvbXBvbmVudHMvc3RhdGlzdGljcy5zY3NzIiwiMDYuY29tcG9uZW50cy90YWdfX2hlYWRlci5zY3NzIiwiMDYuY29tcG9uZW50cy90YWcuc2NzcyIsIjA2LmNvbXBvbmVudHMvdGFncy5zY3NzIiwiMDYuY29tcG9uZW50cy90ZW1wbGF0ZXMuc2NzcyIsIjA3Lm92ZXJyaWRlcy9maXgub2xkLWltYWdlLXN0eWxlcy5zY3NzIiwiMDcub3ZlcnJpZGVzL2ZpeC5zY3JvbGxiYXJzLnNjc3MiLCIwNy5vdmVycmlkZXMvaGVscGVycy5zY3NzIiwiMDcub3ZlcnJpZGVzL3ByaW50LnNjc3MiLCIwNy5vdmVycmlkZXMvdGhlbWVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FDQWhCOzs7aUJBQUE7QUNBQTs7O3FCQUFBO0FDQUE7OztxQkFBQTtBQ0FBOzs7aUJBQUE7QUNBQTs7O0NBQUE7QUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBaUZJLFVBQUE7RUFDQSxTQUFBO0VBQ0EsU0FBQTtFQUNBLGFBQUE7RUFDQSx3QkFBQTtBTGlCSjs7QUtkQSxnREFBQTtBQUNBOzs7Ozs7Ozs7OztFQVdJLGNBQUE7QUxpQko7O0FLZEE7RUFDSSxjQUFBO0FMaUJKOztBS2RBOztFQUVJLGdCQUFBO0FMaUJKOztBS2RBOztFQUVJLFlBQUE7QUxpQko7O0FLZEE7Ozs7RUFJSSxXQUFBO0VBQ0EsYUFBQTtBTGlCSjs7QUtkQTtFQUNJLHlCQUFBO0VBQ0EsaUJBQUE7QUxpQko7O0FNckpBO0VBQ0ksd0JBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0Esc0JBQUE7RUFDQSxnRkFBQTtBTndKSjtBTXBKQTtFQUNJLHdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZ0ZBQUE7QU5zSko7QU1sSkE7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LG9DQUFBO0VBQ0Esc0NBQUE7RUFDQSw4Q0FBQTtFQUNBLDJDQUFBO0VBQ0EsaUZBQUE7RUFDQSxnQ0FBQTtFQUNBLGtDQUFBO0VBQ0EsMkNBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0VBQ0EsOEJBQUE7RUFDQSxxQ0FBQTtBakVtNkVKOztBaUVoNkVBO0VBQ0ksNEJBQUE7RUFDQSxpQ0FBQTtFQUNBLG9DQUFBO0VBQ0Esc0NBQUE7RUFDQSw4Q0FBQTtFQUNBLDJDQUFBO0VBQ0EsbUZBQUE7RUFDQSxnQ0FBQTtFQUNBLHNCQUFBO0VBQ0EsK0JBQUE7RUFDQSxzQkFBQTtFQUNBLDBCQUFBO0VBQ0EsOEJBQUE7RUFDQSxxQ0FBQTtBakVtNkVKIiwiZmlsZSI6Imd1c3RhdmxpbmRxdmlzdC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG4vKiBNQUlOXG4tLS0tLS0tLS0tLS0tLS1cbkltcG9ydCBhbGwgcmVsZXZhbnQgZmlsZXNcbi0tLS0tLS0tLS0tLS0tLSAqL1xuLyogQnJlYWtwb2ludHNcbi0tLS0tLS0tLS0tLS0tLS0tLS1cbkJyZWFrcG9pbnRzIGZvciB2YXJpb3VzIHNjcmVlbiBzaXplc1xuLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogQ29sb3JzXG4tLS0tLS0tLS0tLS0tLS0tLS0tXG5BbGwgY29sb3JzIHVzZWQgdGhyb3VnaG91dCB0aGUgdGhlbWVcbi0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIEZvbnRzXG4tLS0tLS0tLS0tLS0tLS1cbkZvbnRzXG4tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvXG4gICB2Mi4wIHwgMjAxMTAxMjZcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXG4qL1xuaHRtbCxcbmJvZHksXG5kaXYsXG5zcGFuLFxuYXBwbGV0LFxub2JqZWN0LFxuaWZyYW1lLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxucCxcbmJsb2NrcXVvdGUsXG5wcmUsXG5hLFxuYWJicixcbmFjcm9ueW0sXG5hZGRyZXNzLFxuYmlnLFxuY2l0ZSxcbmNvZGUsXG5kZWwsXG5kZm4sXG5lbSxcbmltZyxcbmlucyxcbmtiZCxcbnEsXG5zLFxuc2FtcCxcbnNtYWxsLFxuc3RyaWtlLFxuc3Ryb25nLFxuc3ViLFxuc3VwLFxudHQsXG52YXIsXG5iLFxudSxcbmksXG5jZW50ZXIsXG5kbCxcbmR0LFxuZGQsXG5vbCxcbnVsLFxubGksXG5maWVsZHNldCxcbmZvcm0sXG5sYWJlbCxcbmxlZ2VuZCxcbnRhYmxlLFxuY2FwdGlvbixcbnRib2R5LFxudGZvb3QsXG50aGVhZCxcbnRyLFxudGgsXG50ZCxcbmFydGljbGUsXG5hc2lkZSxcbmNhbnZhcyxcbmRldGFpbHMsXG5lbWJlZCxcbmZpZ3VyZSxcbmZpZ2NhcHRpb24sXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxub3V0cHV0LFxucnVieSxcbnNlY3Rpb24sXG5zdW1tYXJ5LFxudGltZSxcbm1hcmssXG5hdWRpbyxcbnZpZGVvIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBtYXJnaW46IDA7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5ib2R5IHtcbiAgbGluZS1oZWlnaHQ6IDE7XG59XG5cbm9sLFxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5ibG9ja3F1b3RlLFxucSB7XG4gIHF1b3Rlczogbm9uZTtcbn1cblxuYmxvY2txdW90ZTpiZWZvcmUsXG5ibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsXG5xOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgY29udGVudDogbm9uZTtcbn1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2Fuc1wiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtZGlzcGxheTogZmFsbGJhY2s7XG4gIHNyYzogbG9jYWwoXCJOb3RvIFNhbnNcIiksIHVybChcIi9hc3NldHMvZm9udHMvTm90b1NhbnMtNTAwLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2Fuc1wiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtZGlzcGxheTogZmFsbGJhY2s7XG4gIHNyYzogbG9jYWwoXCJOb3RvIFNhbnNcIiksIHVybChcIi9hc3NldHMvZm9udHMvTm90b1NhbnMtNzAwLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2Fuc1wiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA5MDA7XG4gIGZvbnQtZGlzcGxheTogZmFsbGJhY2s7XG4gIHNyYzogbG9jYWwoXCJOb3RvIFNhbnNcIiksIHVybChcIi9hc3NldHMvZm9udHMvTm90b1NhbnMtOTAwLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2VyaWZcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LWRpc3BsYXk6IGZhbGxiYWNrO1xuICBzcmM6IGxvY2FsKFwiTm90byBTZXJpZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9Ob3RvU2VyaWYtNTAwLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2VyaWZcIjtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LWRpc3BsYXk6IGZhbGxiYWNrO1xuICBzcmM6IGxvY2FsKFwiTm90byBTZXJpZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9Ob3RvU2VyaWYtNTAwLUl0YWxpYy53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJOb3RvIFNlcmlmXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBmYWxsYmFjaztcbiAgc3JjOiBsb2NhbChcIk5vdG8gU2VyaWZcIiksIHVybChcIi9hc3NldHMvZm9udHMvTm90b1NlcmlmLTcwMC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJOb3RvIFNlcmlmXCI7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBmYWxsYmFjaztcbiAgc3JjOiBsb2NhbChcIk5vdG8gU2VyaWZcIiksIHVybChcIi9hc3NldHMvZm9udHMvTm90b1NlcmlmLTcwMC1JdGFsaWMud29mZjJcIikgZm9ybWF0KFwid29mZjJcIik7XG59XG4vKipcbiAqIEdIQ29sb3JzIHRoZW1lIGJ5IEF2aSBBcnlhbiAoaHR0cDovL2F2aWFyeWFuLmluKVxuICogSW5zcGlyZWQgYnkgR2l0aHViIHN5bnRheCBjb2xvcmluZ1xuICovXG5jb2RlW2NsYXNzKj1sYW5ndWFnZS1dLFxucHJlW2NsYXNzKj1sYW5ndWFnZS1dIHtcbiAgY29sb3I6ICMzOTNBMzQ7XG4gIGZvbnQtZmFtaWx5OiBcIkNvbnNvbGFzXCIsIFwiQml0c3RyZWFtIFZlcmEgU2FucyBNb25vXCIsIFwiQ291cmllciBOZXdcIiwgQ291cmllciwgbW9ub3NwYWNlO1xuICBkaXJlY3Rpb246IGx0cjtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgd2hpdGUtc3BhY2U6IHByZTtcbiAgd29yZC1zcGFjaW5nOiBub3JtYWw7XG4gIHdvcmQtYnJlYWs6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAwLjllbTtcbiAgbGluZS1oZWlnaHQ6IDEuMmVtO1xuICAtbW96LXRhYi1zaXplOiA0O1xuICAtby10YWItc2l6ZTogNDtcbiAgdGFiLXNpemU6IDQ7XG4gIC13ZWJraXQtaHlwaGVuczogbm9uZTtcbiAgLW1vei1oeXBoZW5zOiBub25lO1xuICAtbXMtaHlwaGVuczogbm9uZTtcbiAgaHlwaGVuczogbm9uZTtcbn1cblxucHJlID4gY29kZVtjbGFzcyo9bGFuZ3VhZ2UtXSB7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG5wcmVbY2xhc3MqPWxhbmd1YWdlLV06Oi1tb3otc2VsZWN0aW9uLCBwcmVbY2xhc3MqPWxhbmd1YWdlLV0gOjotbW96LXNlbGVjdGlvbixcbmNvZGVbY2xhc3MqPWxhbmd1YWdlLV06Oi1tb3otc2VsZWN0aW9uLCBjb2RlW2NsYXNzKj1sYW5ndWFnZS1dIDo6LW1vei1zZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjYjNkNGZjO1xufVxuXG5wcmVbY2xhc3MqPWxhbmd1YWdlLV06OnNlbGVjdGlvbiwgcHJlW2NsYXNzKj1sYW5ndWFnZS1dIDo6c2VsZWN0aW9uLFxuY29kZVtjbGFzcyo9bGFuZ3VhZ2UtXTo6c2VsZWN0aW9uLCBjb2RlW2NsYXNzKj1sYW5ndWFnZS1dIDo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogI2IzZDRmYztcbn1cblxuLyogQ29kZSBibG9ja3MgKi9cbnByZVtjbGFzcyo9bGFuZ3VhZ2UtXSB7XG4gIHBhZGRpbmc6IDFlbTtcbiAgbWFyZ2luOiAwLjVlbSAwO1xuICBvdmVyZmxvdzogYXV0bztcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZGRkZDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbi8qIElubGluZSBjb2RlICovXG46bm90KHByZSkgPiBjb2RlW2NsYXNzKj1sYW5ndWFnZS1dIHtcbiAgcGFkZGluZzogMC4yZW07XG4gIHBhZGRpbmctdG9wOiAxcHg7XG4gIHBhZGRpbmctYm90dG9tOiAxcHg7XG4gIGJhY2tncm91bmQ6ICNmOGY4Zjg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGRkZGQ7XG59XG5cbi50b2tlbi5jb21tZW50LFxuLnRva2VuLnByb2xvZyxcbi50b2tlbi5kb2N0eXBlLFxuLnRva2VuLmNkYXRhIHtcbiAgY29sb3I6ICM5OTk5ODg7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLnRva2VuLm5hbWVzcGFjZSB7XG4gIG9wYWNpdHk6IDAuNztcbn1cblxuLnRva2VuLnN0cmluZyxcbi50b2tlbi5hdHRyLXZhbHVlIHtcbiAgY29sb3I6ICNlMzExNmM7XG59XG5cbi50b2tlbi5wdW5jdHVhdGlvbixcbi50b2tlbi5vcGVyYXRvciB7XG4gIGNvbG9yOiAjMzkzQTM0OyAvKiBubyBoaWdobGlnaHQgKi9cbn1cblxuLnRva2VuLmVudGl0eSxcbi50b2tlbi51cmwsXG4udG9rZW4uc3ltYm9sLFxuLnRva2VuLm51bWJlcixcbi50b2tlbi5ib29sZWFuLFxuLnRva2VuLnZhcmlhYmxlLFxuLnRva2VuLmNvbnN0YW50LFxuLnRva2VuLnByb3BlcnR5LFxuLnRva2VuLnJlZ2V4LFxuLnRva2VuLmluc2VydGVkIHtcbiAgY29sb3I6ICMzNmFjYWE7XG59XG5cbi50b2tlbi5hdHJ1bGUsXG4udG9rZW4ua2V5d29yZCxcbi50b2tlbi5hdHRyLW5hbWUsXG4ubGFuZ3VhZ2UtYXV0b2hvdGtleSAudG9rZW4uc2VsZWN0b3Ige1xuICBjb2xvcjogIzAwYTRkYjtcbn1cblxuLnRva2VuLmZ1bmN0aW9uLFxuLnRva2VuLmRlbGV0ZWQsXG4ubGFuZ3VhZ2UtYXV0b2hvdGtleSAudG9rZW4udGFnIHtcbiAgY29sb3I6ICM5YTA1MGY7XG59XG5cbi50b2tlbi50YWcsXG4udG9rZW4uc2VsZWN0b3IsXG4ubGFuZ3VhZ2UtYXV0b2hvdGtleSAudG9rZW4ua2V5d29yZCB7XG4gIGNvbG9yOiAjMDAwMDlmO1xufVxuXG4udG9rZW4uaW1wb3J0YW50LFxuLnRva2VuLmZ1bmN0aW9uLFxuLnRva2VuLmJvbGQge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnRva2VuLml0YWxpYyB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuOnJvb3Qge1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0OiAjZjdmN2Y3O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX193aWRnZXQ6ICNmMWYxZjE7XG4gIC0tY29sb3JfX2JhY2tncm91bmRfX2NvbnRyYXN0OiAjMjYyNjI2O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdF9fd2lkZ2V0OiAjMTQxNDE0O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdF9fYWx0OiAjMDUwNTA1O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19ncmFkaWVudDogbGluZWFyLWdyYWRpZW50KDE4MGRlZyxyZ2JhKDAsMCwwLDApIDAsd2hpdGUgMTAwJSk7XG4gIC0tY29sb3JfX292ZXJsYXk6IHJnYmEoMCwwLDAsLjUpO1xuICAtLWNvbG9yX19saW5rOiBoc2woMjQwLCAxMDAlLCA2MCUpO1xuICAtLWNvbG9yX19saW5rX192aXNpdGVkOiBoc2woMjg1LCAxMDAlLCA0MCUpO1xuICAtLWNvbG9yX190ZXh0OiBibGFjaztcbiAgLS1jb2xvcl9fdGV4dC1hbHQ6ICM0MDQwNDA7XG4gIC0tY29sb3JfX3RleHRfX2NvbnRyYXN0OiB3aGl0ZTtcbiAgLS1jb2xvcl9fdGV4dF9fY29udHJhc3RfX2FsdDogIzY2NjY2NjtcbiAgLS1mb250X19keW5hbWljLXNjYWxpbmc6IDAuM3Z3O1xuICAtLWZvbnRfX3JhdGlvOiAxLjI1O1xuICAtLWZvbnRfX2R5bmFtaWMtcmF0aW86IDEuMztcbiAgLS1mb250X19zaXplOiAxLjZyZW07XG4gIC0tZm9udF9fc2l6ZS1iYXNlOiAxLjRyZW07XG4gIC0tZm9udF9fc2l6ZV9faGVhZGluZy00OiBjYWxjKCAodmFyKC0tZm9udF9fc2l6ZS1iYXNlKSAqIHZhcigtLWZvbnRfX3JhdGlvKSkgKyAodmFyKC0tZm9udF9fZHluYW1pYy1zY2FsaW5nKSAqIHZhcigtLWZvbnRfX2R5bmFtaWMtcmF0aW8pKSk7XG4gIC0tZm9udF9fc2l6ZV9faGVhZGluZy0zOiBjYWxjKCAodmFyKC0tZm9udF9fc2l6ZS1iYXNlKSAqIHZhcigtLWZvbnRfX3JhdGlvKSAqIHZhcigtLWZvbnRfX3JhdGlvKSkgKyAodmFyKC0tZm9udF9fZHluYW1pYy1zY2FsaW5nKSAqIHZhcigtLWZvbnRfX2R5bmFtaWMtcmF0aW8pICogdmFyKC0tZm9udF9fZHluYW1pYy1yYXRpbykpKTtcbiAgLS1mb250X19zaXplX19oZWFkaW5nLTI6IGNhbGMoICh2YXIoLS1mb250X19zaXplLWJhc2UpICogdmFyKC0tZm9udF9fcmF0aW8pICogdmFyKC0tZm9udF9fcmF0aW8pICogdmFyKC0tZm9udF9fcmF0aW8pKSArICh2YXIoLS1mb250X19keW5hbWljLXNjYWxpbmcpICogdmFyKC0tZm9udF9fZHluYW1pYy1yYXRpbykgKiB2YXIoLS1mb250X19keW5hbWljLXJhdGlvKSAqIHZhcigtLWZvbnRfX2R5bmFtaWMtcmF0aW8pKSk7XG4gIC0tZm9udF9fc2l6ZV9faGVhZGluZy0xOiBjYWxjKCAodmFyKC0tZm9udF9fc2l6ZS1iYXNlKSAqIHZhcigtLWZvbnRfX3JhdGlvKSAqIHZhcigtLWZvbnRfX3JhdGlvKSAqIHZhcigtLWZvbnRfX3JhdGlvKSAqIHZhcigtLWZvbnRfX3JhdGlvKSkgKyAodmFyKC0tZm9udF9fZHluYW1pYy1zY2FsaW5nKSAqIHZhcigtLWZvbnRfX2R5bmFtaWMtcmF0aW8pICogdmFyKC0tZm9udF9fZHluYW1pYy1yYXRpbykgKiB2YXIoLS1mb250X19keW5hbWljLXJhdGlvKSAqIHZhcigtLWZvbnRfX2R5bmFtaWMtcmF0aW8pKSk7XG4gIC0tZm9udF9fc2Fucy1zZXJpZjogTm90byBTYW5zLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgLS1mb250X19zZXJpZjogTm90byBTZXJpZiwgVGltZXMgTmV3IFJvbWFuLCBzZXJpZjtcbiAgLS1mb250X19tb25vOiBtb25vc3BhY2U7XG4gIC0tbWF4LXdpZHRoX19iYXNlOiAxMjByZW07XG4gIC0tbWF4LXdpZHRoX19jb250ZW50OiA4MHJlbTtcbiAgLS1tYXJnaW5fX3Rpbnk6IDAuNXJlbTtcbiAgLS1tYXJnaW5fX3NtYWxsOiAxcmVtO1xuICAtLW1hcmdpbl9fbWVkaXVtOiAycmVtO1xuICAtLW1hcmdpbl9fbGFyZ2U6IDRyZW07XG4gIC0tcGFkZGluZ19fc21hbGw6IDFyZW07XG4gIC0tcGFkZGluZ19fbWVkaXVtOiAycmVtO1xuICAtLXBhZGRpbmdfX2xhcmdlOiA0cmVtO1xuICAtLWhlYWRlcl9faGVpZ2h0OiA2cmVtO1xuICAtLWhlYWRlcl9fZm9udC1zY2FsZTogOTAlO1xufVxuXG5odG1sIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgaGVpZ2h0OiAxMDAlO1xuICBmb250LXNpemU6IDYyLjUlO1xufVxuXG5ib2R5IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleDogMTtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kKTtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NhbnMtc2VyaWYpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMS44O1xufVxuYm9keSBtYWluIHtcbiAgZmxleDogMTtcbn1cblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbnAsXG51bCxcbm9sLFxuYmxvY2txdW90ZSxcbmJyLFxuYnV0dG9uLFxuY2FudmFzLFxuY2FwdGlvbixcbmNvbCxcbmNvbGdyb3VwLFxuZGQsXG5kbCxcbmR0LFxuZW1iZWQsXG5maWVsZHNldCxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5pbWcsXG5mb3JtLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbn1cblxuY29kZSB7XG4gIHBhZGRpbmc6IDAuMmVtIDAuNGVtO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0KTtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX21vbm8pO1xuICBmb250LXNpemU6IDkwJTtcbn1cblxuZmlndXJlIGZpZ2NhcHRpb24ge1xuICBtYXJnaW4tdG9wOiAwO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2VyaWYpO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTVlbSkge1xuICBmaWd1cmUge1xuICAgIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gIH1cbn1cbmZpZ3VyZS4tZnVsbCA+IHBpY3R1cmUgaW1nLCBmaWd1cmUuLWZ1bGwgPiBpbWcsIGZpZ3VyZS4tZnVsbCBpZnJhbWUsIGZpZ3VyZS4tZnVsbCA+IGRpdiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMHZ3OyAvKiBPciB3aGF0ZXZlciBtYXggd2lkdGggaXMgKi9cbiAgbWFyZ2luLWxlZnQ6IGNhbGMoNTAlIC0gNTB2dyk7IC8qIDUwdncgZXF1YWxzIGhhbGYgdGhlIHdpZHRoICovXG4gIG1hcmdpbi1yaWdodDogY2FsYyg1MCUgLSA1MHZ3KTtcbiAgbWF4LXdpZHRoOiBub25lO1xufVxuZmlndXJlLi1waXhlbHMge1xuICBpbWFnZS1yZW5kZXJpbmc6IGNyaXNwLWVkZ2VzO1xufVxuZmlndXJlLi13aWRlIHtcbiAgLS1jYXJkX19leHRyYS13aWR0aDogMHJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NWVtKSB7XG4gIGZpZ3VyZS4td2lkZSB7XG4gICAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICAgIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDY1ZW0pIHtcbiAgZmlndXJlLi13aWRlIHtcbiAgICAtLWNhcmRfX2V4dHJhLXdpZHRoOiAxMHJlbTtcbiAgfVxuICBmaWd1cmUuLXdpZGUgPiBwaWN0dXJlIGltZywgZmlndXJlLi13aWRlID4gaW1nLCBmaWd1cmUuLXdpZGUgaWZyYW1lLCBmaWd1cmUuLXdpZGUgPiBkaXYsIGZpZ3VyZS4td2lkZSA+IGZpZ3VyZS5nYWxsZXJ5LXJvdyB7XG4gICAgbWF4LXdpZHRoOiBub25lO1xuICAgIHdpZHRoOiBjYWxjKHZhcigtLW1heC13aWR0aF9fY29udGVudCkgKyB2YXIoLS1jYXJkX19leHRyYS13aWR0aCkpO1xuICAgIG1hcmdpbi1sZWZ0OiBjYWxjKDUwJSAtICh2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpICsgdmFyKC0tY2FyZF9fZXh0cmEtd2lkdGgpKSAvIDIpO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTBlbSkge1xuICBmaWd1cmUuLXdpZGUge1xuICAgIC0tY2FyZF9fZXh0cmEtd2lkdGg6IDM1cmVtO1xuICB9XG59XG5maWd1cmUuZW1iZWQge1xuICB3aWR0aDogMTAwJTtcbn1cbmZpZ3VyZS5lbWJlZCBpZnJhbWUge1xuICBhc3BlY3QtcmF0aW86IDE2Lzk7XG4gIGhlaWdodDogYXV0bztcbiAgbWluLXdpZHRoOiAxMDAlO1xufVxuZmlndXJlLm1hcCBpZnJhbWUge1xuICBoZWlnaHQ6IDUwdmg7XG4gIG1pbi13aWR0aDogMTAwJTtcbn1cbmZpZ3VyZSAuaW5zdGFncmFtLW1lZGlhIHtcbiAgbWFyZ2luOiAwIGF1dG8gIWltcG9ydGFudDtcbn1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NhbnMtc2VyaWYpO1xuICBsaW5lLWhlaWdodDogMS4yNTtcbn1cbmgxIGEsXG5oMiBhLFxuaDMgYSxcbmg0IGEsXG5oNSBhLFxuaDYgYSB7XG4gIGJvcmRlcjogMDtcbn1cblxuaDEge1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctMSk7XG4gIGxldHRlci1zcGFjaW5nOiAtMC4ycmVtO1xuICBmb250LXdlaWdodDogOTAwO1xufVxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy0yKTtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbn1cblxuaDMge1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctMyk7XG59XG5cbmg0IHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTQpO1xufVxuXG5oNSB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbmg2IHtcbiAgZm9udC1zaXplOiA4MCU7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG5zdmcge1xuICBmaWxsOiBjdXJyZW50Q29sb3I7XG59XG5cbmEge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX2xpbmspO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzO1xufVxuYTpob3ZlciwgYTpmb2N1cyB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuYTp2aXNpdGVkIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX19saW5rX192aXNpdGVkKTtcbn1cblxudWwge1xuICBwYWRkaW5nLWlubGluZS1zdGFydDogMS41ZW07XG4gIGxpc3Qtc3R5bGU6IGRpc2M7XG59XG51bCB1bCB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAxZW07XG59XG5cbm9sIHtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDEuNWVtO1xuICBsaXN0LXN0eWxlOiBkZWNpbWFsO1xufVxub2wgb2wge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBwYWRkaW5nLWlubGluZS1zdGFydDogMWVtO1xufVxub2wgbGk6bGFzdC1vZi10eXBlIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLmNvbnRhaW5zLXRhc2stbGlzdCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbi5uby1zdHlsZSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwO1xufVxuXG4udGFzay1saXN0LWl0ZW0tY2hlY2tib3gge1xuICBtYXJnaW4tbGVmdDogLTEuNmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbltpZF0ge1xuICBzY3JvbGwtbWFyZ2luLXRvcDogMWV4O1xufVxuXG5zZWxlY3Qge1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUpO1xuICBwYWRkaW5nOiAwLjRyZW0gMC40cmVtO1xuICBsaW5lLWhlaWdodDogMjtcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX3dpZGdldCk7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kKTtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NhbnMtc2VyaWYpO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG5cbmVtIHtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NlcmlmKTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4ubm90ZSB7XG4gIHBhZGRpbmc6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0KTtcbn1cblxuLmxlYWQge1xuICBmb250LXNpemU6IDExNSU7XG59XG5cbnN1cCB7XG4gIGZvbnQtc2l6ZTogODUlO1xuICB2ZXJ0aWNhbC1hbGlnbjogc3VwZXI7XG59XG5cbmJsb2NrcXVvdGUge1xuICBwYWRkaW5nLWxlZnQ6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0KTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NlcmlmKTtcbn1cbmJsb2NrcXVvdGUgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMnJlbSAwO1xufVxuYmxvY2txdW90ZSA+IDpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG5ibG9ja3F1b3RlID4gOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG5xIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250X19zZXJpZik7XG4gIGZvbnQtc2l6ZTogMTI1JTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDBlbSkge1xuICBxIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICsgdmFyKC0tbWFyZ2luX19sYXJnZSkpO1xuICAgIG1heC13aWR0aDogY2FsYygxMDAlICsgdmFyKC0tbWFyZ2luX19sYXJnZSkpO1xuICAgIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbGFyZ2UpO1xuICAgIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgICBtYXJnaW4tbGVmdDogY2FsYygwJSAtIHZhcigtLW1hcmdpbl9fbWVkaXVtKSk7XG4gIH1cbn1cbnE6YmVmb3JlLCBxOmFmdGVyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuY2l0ZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2VyaWYpO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5jaXRlIGEge1xuICBib3JkZXI6IG5vbmU7XG4gIGNvbG9yOiBpbmhlcml0O1xufVxuY2l0ZTpiZWZvcmUge1xuICBjb250ZW50OiBcIuKAlOKAiVwiO1xufVxuXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG5ociB7XG4gIGhlaWdodDogMC40cmVtO1xuICBib3JkZXI6IDA7XG4gIG1hcmdpbjogdmFyKC0tbWFyZ2luX19tZWRpdW0pIDAgMDtcbiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX2FsdCk7XG59XG5cbmFiYnIge1xuICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7XG4gIGJvcmRlci1ib3R0b20tc3R5bGU6IGRvdHRlZDtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xuICBmb250LXZhcmlhbnQ6IGFsbC1zbWFsbC1jYXBzO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5jZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbmtiZCB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kX19hbHQpO1xuICBwYWRkaW5nOiAwLjJlbSAwLjRlbTtcbiAgYm9yZGVyLXJhZGl1czogMC4zZW07XG59XG5cbi5CcmVhZGNydW1icyBhIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XG59XG5cbi5CcmVhZGNydW1icyBhOmhvdmVyLFxuLkJyZWFkY3J1bWJzIGE6Zm9jdXMge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX2xpbmspO1xufVxuXG4uQnJlYWRjcnVtYnMgb2wge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtc2l6ZTogODAlO1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nLWlubGluZS1zdGFydDogMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLkJyZWFkY3J1bWJzIG9sIGxpIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4uQnJlYWRjcnVtYnMgb2wgbGk6YmVmb3JlIHtcbiAgY29udGVudDogbm9uZSAhaW1wb3J0YW50O1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi5CcmVhZGNydW1icyBvbCBsaTphZnRlciB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xuICBjb250ZW50OiBcIi9cIjtcbn1cblxuLkJyZWFkY3J1bWJzIG9sIGxpOmxhc3QtY2hpbGQ6YWZ0ZXIge1xuICBjb250ZW50OiBub25lO1xufVxuXG4uQnV0dG9uIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fbGluayk7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG4gIHBhZGRpbmc6IDAuNWVtIDAuOGVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBib3JkZXI6IDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gIG1hcmdpbjogMDtcbn1cbi5CdXR0b246dmlzaXRlZCB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG59XG4uQnV0dG9uOmhvdmVyLCAuQnV0dG9uOmZvY3VzIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi5DYXJkcyB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICBncmlkLWF1dG8tZmxvdzogZGVuc2U7XG4gIGdyaWQtZ2FwOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDQwZW0pIHtcbiAgLkNhcmRzIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NWVtKSB7XG4gIC5DYXJkcyB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDU1ZW0pIHtcbiAgLkNhcmRzLi1tYXgtMi1jb2x1bW5zIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gIH1cbn1cblxuLkNhcmQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1pbi1oZWlnaHQ6IDI1dmg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHBhZGRpbmc6IGNhbGModmFyKC0tcGFkZGluZ19fc21hbGwpICogMS41KTtcbiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX2NvbnRyYXN0X193aWRnZXQpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xufVxuLkNhcmQuLWFsaWduLWJvdHRvbSB7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIHBhZGRpbmctdG9wOiA4cmVtO1xufVxuLkNhcmQuLWFsaWduLXRvcCB7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NWVtKSB7XG4gIC5DYXJkLnBvc3Q6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgYXNwZWN0LXJhdGlvOiAyMS85O1xuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiBzcGFuIDM7XG4gIH1cbiAgLkNhcmQucG9zdDpmaXJzdC1vZi10eXBlIC5DYXJkX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICB9XG59XG4uQ2FyZC4tZmVhdHVyZWQtaW1hZ2U6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX292ZXJsYXkpO1xuICBjb250ZW50OiBcIlwiO1xufVxuXG4uQ2FyZF9fY29udGVudCB7XG4gIHotaW5kZXg6IDEwO1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XG59XG4uQ2FyZF9fY29udGVudCA+ICoge1xuICBtYXJnaW46IDA7XG59XG4uQ2FyZF9fY29udGVudCB1bCxcbi5DYXJkX19jb250ZW50IG9sIHtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDIuNXJlbTtcbn1cbi5DYXJkX19jb250ZW50IGEge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHRfX2NvbnRyYXN0KTtcbn1cbi5DYXJkX19jb250ZW50IG9sLm1ldGFkYXRhLWxpc3Qge1xuICBtYXJnaW4tYmxvY2stc3RhcnQ6IDFlbTtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XG59XG4uQ2FyZF9fY29udGVudCAubWV0YWRhdGEtbGlzdF9faXRlbSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fc21hbGwpO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbn1cbi5DYXJkX19jb250ZW50IC5tZXRhZGF0YS1saXN0X19pdGVtOmJlZm9yZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGNvbnRlbnQ6IG5vbmU7XG59XG4uQ2FyZF9fY29udGVudCAubWV0YWRhdGEtbGlzdF9faXRlbTpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi5DYXJkX19jb250ZW50IC5tZXRhZGF0YS1saXN0X19pdGVtIC5tZXRhZGF0YS10aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTQpO1xufVxuLkNhcmRfX2NvbnRlbnQgLm1ldGFkYXRhLWxpc3RfX2l0ZW0gcCB7XG4gIG1hcmdpbjogMDtcbn1cbi5DYXJkX19jb250ZW50IC5tZXRhZGF0YS1saXN0X19pdGVtIC5tZXRhZGF0YS1jb250ZW50IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG4uQ2FyZF9fY29udGVudCAubWV0YWRhdGEtbGlzdF9faXRlbSAubWV0YWRhdGEtbGlzdF9faXRlbS10aXRsZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHRfX2NvbnRyYXN0KTtcbn1cbi5DYXJkX19jb250ZW50IC5tZXRhZGF0YS1saXN0X19pdGVtIC5tZXRhZGF0YS12YWx1ZXMge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHRfX2NvbnRyYXN0X19hbHQpO1xufVxuXG4uQ2FyZF9faW1hZ2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgbWFyZ2luOiAwO1xuICB6LWluZGV4OiAxO1xufVxuLkNhcmRfX2ltYWdlIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIG9iamVjdC1wb3NpdGlvbjogY2VudGVyO1xufVxuXG4uQ2FyZF9fY29udGVudF9fZXh0cmEge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDEwO1xuICBmb250LXNpemU6IDkwJTtcbiAgbGluZS1oZWlnaHQ6IDE7XG59XG4uQ2FyZF9fY29udGVudF9fZXh0cmEuLXRvcC1sZWZ0IHtcbiAgbGVmdDogY2FsYyh2YXIoLS1wYWRkaW5nX19zbWFsbCkgKiAxLjUpO1xuICB0b3A6IGNhbGModmFyKC0tcGFkZGluZ19fc21hbGwpICogMS41KTtcbiAgbWFyZ2luLXJpZ2h0OiA4cmVtO1xufVxuLkNhcmRfX2NvbnRlbnRfX2V4dHJhLi10b3AtcmlnaHQge1xuICByaWdodDogY2FsYyh2YXIoLS1wYWRkaW5nX19zbWFsbCkgKiAxLjUpO1xuICB0b3A6IGNhbGModmFyKC0tcGFkZGluZ19fc21hbGwpICogMS41KTtcbiAgbWFyZ2luLWxlZnQ6IDhyZW07XG59XG4uQ2FyZF9fY29udGVudF9fZXh0cmEuLXN5bWJvbCB7XG4gIGZvbnQtc2l6ZTogMi41cmVtO1xufVxuLkNhcmRfX2NvbnRlbnRfX2V4dHJhID4gOm50aC1jaGlsZCgyKSB7XG4gIG1hcmdpbi1sZWZ0OiAwLjVlbTtcbn1cbi5DYXJkX19jb250ZW50X19leHRyYSAudGFncyAudGFnIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHRfX2NvbnRyYXN0KTtcbiAgd2lkdGg6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogMC40ZW07XG4gIG1hcmdpbi1ib3R0b206IDAuNGVtO1xufVxuLkNhcmRfX2NvbnRlbnRfX2V4dHJhIC50YWdzIC50YWc6YmVmb3JlIHtcbiAgY29udGVudDogXCIjXCI7XG59XG4uQ2FyZF9fY29udGVudF9fZXh0cmEgLndlYm1lbnRpb25zX19jb3VudCB7XG4gIG1hcmdpbi1yaWdodDogMC41ZW07XG59XG5cbi5DYXJkX19wb3N0LWxpc3Qge1xuICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbiAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG4gIGxpc3Qtc3R5bGU6IGRlY2ltYWwtbGVhZGluZy16ZXJvO1xufVxuXG4uQ2FyZF9fdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xuICBmb250LXNpemU6IDIuNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbn1cbi5DYXJkX190aXRsZSBhIHtcbiAgY29sb3I6IGluaGVyaXQ7XG59XG5cbi5DYXJkX190aXRsZS1saW5rOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uQ29tbWVudHNfX2xpc3Qge1xuICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwO1xufVxuXG4uQ29tbWVudHNfcmVmZXJlbmNlIHtcbiAgZm9udC1zaXplOiBjYWxjKHZhcigtLWZvbnRfX3NpemUpICogMC44NSk7XG59XG5cbi5Db21tZW50c19fcGFuZWwge1xuICBmb250LXdlaWdodDogNTAwO1xufVxuLkNvbW1lbnRzX19wYW5lbCAuQ29tbWVudHNfX2xpa2VzLFxuLkNvbW1lbnRzX19wYW5lbCAuQ29tbWVudHNfX3JlcG9zdHMsXG4uQ29tbWVudHNfX3BhbmVsIC5Db21tZW50c19fY29tbWVudHMge1xuICBtYXJnaW4tcmlnaHQ6IDAuNWVtO1xufVxuLkNvbW1lbnRzX19wYW5lbCAuQ29tbWVudHNfX3N0YXR1cyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX2FsdCk7XG4gIHBhZGRpbmc6IHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG59XG4uQ29tbWVudHNfX3BhbmVsIHN2ZyB7XG4gIGhlaWdodDogMS4yZW07XG4gIHZlcnRpY2FsLWFsaWduOiBzdWI7XG59XG5cbi5Db21tZW50c19fbWV0YWRhdGEge1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xuICBsaW5lLWhlaWdodDogMS40O1xufVxuLkNvbW1lbnRzX19tZXRhZGF0YSBzcGFuLkNvbW1lbnRzX19hdXRob3Ige1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xufVxuXG4uQ29tbWVudHNfX2F1dGhvciAuQ29tbWVudHNfX2F2YXRhciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxLjJyZW07XG4gIGxlZnQ6IDFyZW07XG4gIHdpZHRoOiA0LjVyZW07XG4gIG1hcmdpbi1yaWdodDogMC41ZW07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbn1cblxuLkNvbW1lbnRzX19saXN0LWl0ZW0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHBhZGRpbmc6IDFyZW0gMXJlbSAxcmVtIDdyZW07XG4gIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbn1cbi5Db21tZW50c19fbGlzdC1pdGVtOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IG5vbmUgIWltcG9ydGFudDtcbn1cbi5Db21tZW50c19fbGlzdC1pdGVtLi1pcy1tZSB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kX19hbHQpO1xufVxuLkNvbW1lbnRzX19saXN0LWl0ZW0uLXJlcG9zdC1vZiB7XG4gIHBhZGRpbmctbGVmdDogNHJlbTtcbn1cbi5Db21tZW50c19fbGlzdC1pdGVtLi1yZXBvc3Qtb2YgLkNvbW1lbnRzX19hdXRob3IgLkNvbW1lbnRzX19hdmF0YXIge1xuICB0b3A6IDAuOHJlbTtcbiAgbGVmdDogMC41cmVtO1xuICB3aWR0aDogMi41cmVtO1xufVxuLkNvbW1lbnRzX19saXN0LWl0ZW06aG92ZXIge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0KTtcbn1cbi5Db21tZW50c19fbGlzdC1pdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuLkNvbW1lbnRzX19saXN0LWl0ZW0gcCB7XG4gIG1hcmdpbjogMC4zZW0gMCAwIDA7XG59XG5cbi5Gb3JtIHtcbiAgbWFyZ2luLXRvcDogMmVtO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2Fucy1zZXJpZik7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZSk7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG59XG4uRm9ybS4taW5hY3RpdmUgbGFiZWwge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG4uRm9ybS4taW5hY3RpdmUgLi1jb2xsYXBzZWQge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG4uRm9ybS4taW5hY3RpdmUgdGV4dGFyZWEge1xuICByZXNpemU6IG5vbmUgIWltcG9ydGFudDtcbiAgbWluLWhlaWdodDogMCAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDIuN2VtO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLkZvcm1fX2dyb3VwIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW46IDAgMCAxZW0gMDtcbn1cbi5Gb3JtX19ncm91cCBpbnB1dCwgLkZvcm1fX2dyb3VwIHRleHRhcmVhIHtcbiAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX3dpZGdldCk7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kKTtcbiAgcGFkZGluZzogMC41ZW07XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICB3aWR0aDogMTAwJTtcbn1cbi5Gb3JtX19ncm91cCBpbnB1dDpmb2N1cywgLkZvcm1fX2dyb3VwIHRleHRhcmVhOmZvY3VzIHtcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG59XG4uRm9ybV9fZ3JvdXAgaW5wdXQ6Zm9jdXMgKyBsYWJlbCwgLkZvcm1fX2dyb3VwIHRleHRhcmVhOmZvY3VzICsgbGFiZWwge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xufVxuLkZvcm1fX2dyb3VwIHRleHRhcmVhIHtcbiAgcmVzaXplOiB2ZXJ0aWNhbDtcbiAgbWluLWhlaWdodDogMTVyZW07XG59XG4uRm9ybV9fZ3JvdXAgbGFiZWwge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDRweDtcbiAgdG9wOiAtN3B4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kKTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplLWJhc2UpO1xuICBsaW5lLWhlaWdodDogMTtcbiAgcGFkZGluZzogMCAwLjVlbTtcbn1cblxuLnBvc3QtaGVhZGVyIC5wb3N0LXRpdGxlIC5iZWVyLWxhYmVsIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICB3aWR0aDogNDByZW07XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xufVxuXG4uYmVlci10aXRsZSBhIC5iZWVyLWxhYmVsIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbn1cbi5iZWVyLXRpdGxlIGE6aG92ZXIgLmJlZXItbGFiZWwsIC5iZWVyLXRpdGxlIGE6dmlzaXRlZCAuYmVlci1sYWJlbCB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG59XG5cbi5iZWVyLXN0YXRpc3RpY3NfX2xpc3Qge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtYXV0by1mbG93OiBkZW5zZTtcbiAgZ3JpZC1nYXA6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gIG1heC13aWR0aDogMzBlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAyNWVtKSB7XG4gIC5iZWVyLXN0YXRpc3RpY3NfX2xpc3Qge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnI7XG4gIH1cbn1cbi5iZWVyLXN0YXRpc3RpY3NfX2xpc3QtaXRlbSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG4uYmVlci1zdGF0aXN0aWNzX19saXN0LWl0ZW1fX2xhYmVsIHtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplLWJhc2UpO1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbn1cbi5iZWVyLXN0YXRpc3RpY3NfX2xpc3QtaXRlbV9fdmFsdWUge1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XG59XG5cbi5iZWVyLWluZ3JlZGllbnRzX19sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYmxvY2stc3RhcnQ6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgbWFyZ2luLWJsb2NrLWVuZDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG59XG4uYmVlci1pbmdyZWRpZW50c19fbGFiZWwgLmljb24ge1xuICBtYXJnaW4tbGVmdDogLTAuMmVtO1xufVxuLmJlZXItaW5ncmVkaWVudHNfX2xpc3Qge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXgtd2lkdGg6IDI1ZW07XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cbi5iZWVyLWluZ3JlZGllbnRzX19saXN0LWl0ZW0ge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDMuOGVtIDFmciBhdXRvO1xuICBncmlkLWdhcDogMCAwLjVyZW07XG4gIGdyaWQtdGVtcGxhdGUtcm93czogYXV0bztcbiAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJsZWZ0IG1pZGRsZSByaWdodFwiIFwibGVmdCBib3R0b20gYm90dG9tLXJpZ2h0XCI7XG4gIG1hcmdpbi1ib3R0b206IDAuNWVtO1xufVxuLmJlZXItaW5ncmVkaWVudHNfX2xpc3QtaXRlbV9fbGVmdCB7XG4gIGdyaWQtYXJlYTogbGVmdDtcbn1cbi5iZWVyLWluZ3JlZGllbnRzX19saXN0LWl0ZW1fX21pZGRsZSB7XG4gIGdyaWQtYXJlYTogbWlkZGxlO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5iZWVyLWluZ3JlZGllbnRzX19saXN0LWl0ZW1fX3JpZ2h0IHtcbiAgZ3JpZC1hcmVhOiByaWdodDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG4uYmVlci1pbmdyZWRpZW50c19fbGlzdC1pdGVtX19ib3R0b20tbGVmdCB7XG4gIGdyaWQtYXJlYTogYm90dG9tLWxlZnQ7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZS1iYXNlKTtcbn1cbi5iZWVyLWluZ3JlZGllbnRzX19saXN0LWl0ZW1fX2JvdHRvbSB7XG4gIGdyaWQtYXJlYTogYm90dG9tO1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XG59XG4uYmVlci1pbmdyZWRpZW50c19fbGlzdC1pdGVtX19ib3R0b20tcmlnaHQge1xuICBncmlkLWFyZWE6IGJvdHRvbS1yaWdodDtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplLWJhc2UpO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLmJhdGNoZXNfX3N0YXR1cyB7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZSk7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX3dpZGdldCk7XG4gIGJvdHRvbTogMC4xZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMC4zZW07XG59XG5cbi5iZWVycyB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICBncmlkLWF1dG8tZmxvdzogZGVuc2U7XG4gIGdyaWQtZ2FwOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDQwZW0pIHtcbiAgLmJlZXJzIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gIH1cbn1cblxuLmJlZXIge1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG59XG4uYmVlciBhOmhvdmVyIC5iZWVyLWxhYmVsLCAuYmVlciBhOmZvY3VzIC5iZWVyLWxhYmVsIHtcbiAgZmlsdGVyOiBkcm9wLXNoYWRvdygwIDAgMXJlbSB2YXIoLS1jb2xvcl9fbGluaykpO1xufVxuLmJlZXIgLmJlZXItdGl0bGUge1xuICBtYXJnaW46IDA7XG59XG4uYmVlciAuYmVlci1sYWJlbCB7XG4gIHdpZHRoOiAxMDAlO1xuICB0cmFuc2l0aW9uOiAwLjI1cyBhbGwgZWFzZTtcbn1cblxuLmNvbHVtbnMge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgZ3JpZC1nYXA6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0MGVtKSB7XG4gIC5jb2x1bW5zIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCBtaW5tYXgoMCwgMWZyKSk7XG4gIH1cbn1cblxuLmNvbnRlbnQgcHJlIHtcbiAgd2lkdGg6IDEwMHZ3O1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IHZhcigtLXBhZGRpbmdfX3NtYWxsKTtcbiAgYm9yZGVyOiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0KTtcbiAgbGluZS1oZWlnaHQ6IDEyNSU7XG4gIG92ZXJmbG93LXk6IGhpZGRlbjtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gIG1hcmdpbi1yaWdodDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG4uY29udGVudCBwcmUgY29kZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAwO1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xuICBmb250LXNpemU6IDEuNnJlbTtcbn1cblxuLmhlYWRlci1hbmNob3Ige1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG59XG4uaGVhZGVyLWFuY2hvcjp2aXNpdGVkIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbn1cbi5oZWFkZXItYW5jaG9yOmJlZm9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTAuOGVtO1xuICBkaXNwbGF5OiBub25lO1xuICBjb250ZW50OiBcIiNcIjtcbn1cbi5oZWFkZXItYW5jaG9yOmZvY3VzLCAuaGVhZGVyLWFuY2hvcjpob3ZlciB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fbGluayk7XG59XG4uaGVhZGVyLWFuY2hvcjpmb2N1czpiZWZvcmUsIC5oZWFkZXItYW5jaG9yOmhvdmVyOmJlZm9yZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5vbC5hY3Rpdml0eS1saXN0IHtcbiAgbWFyZ2luLWJsb2NrLXN0YXJ0OiAxZW07XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwO1xufVxuXG4uYWN0aXZpdHktbGlzdF9faXRlbSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fc21hbGwpO1xufVxuLmFjdGl2aXR5LWxpc3RfX2l0ZW06bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG4uYWN0aXZpdHktbGlzdF9faXRlbSAuaWNvbiB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIG1hcmdpbi10b3A6IDAuNGVtO1xuICBtYXJnaW4tcmlnaHQ6IDAuNWVtO1xufVxuLmFjdGl2aXR5LWxpc3RfX2l0ZW0gLmFjdGl2aXR5LXRpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XG59XG4uYWN0aXZpdHktbGlzdF9faXRlbSBwIHtcbiAgbWFyZ2luOiAwO1xufVxuLmFjdGl2aXR5LWxpc3RfX2l0ZW0gLmFjdGl2aXR5LWNvbnRlbnQge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cbi5hY3Rpdml0eS1saXN0X19pdGVtIC5hY3Rpdml0eS1tZXRhZGF0YSB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xufVxuXG5vbC5ib29rLWxpc3Qge1xuICBtYXJnaW4tYmxvY2stc3RhcnQ6IDFlbTtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDAuNmVtO1xufVxuXG4uYm9vay1saXN0X19pdGVtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG59XG4uYm9vay1saXN0X19pdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuLmJvb2stbGlzdF9faXRlbSAuYm9vay1saXN0X19jb3ZlciB7XG4gIHdpZHRoOiA1cmVtO1xuICBoZWlnaHQ6IGZpdC1jb250ZW50O1xuICBtYXJnaW4tbGVmdDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgbWFyZ2luLXJpZ2h0OiAwLjVlbTtcbn1cbi5ib29rLWxpc3RfX2l0ZW0gLmJvb2stdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy00KTtcbn1cbi5ib29rLWxpc3RfX2l0ZW0gcCB7XG4gIG1hcmdpbjogMDtcbn1cbi5ib29rLWxpc3RfX2l0ZW0gLmdhbWUtbWV0YWRhdGEge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbn1cblxub2wuZ2FtZS1saXN0IHtcbiAgbWFyZ2luLWJsb2NrLXN0YXJ0OiAxZW07XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwLjZlbTtcbn1cblxuLmdhbWUtbGlzdF9faXRlbSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fc21hbGwpO1xufVxuLmdhbWUtbGlzdF9faXRlbTpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi5nYW1lLWxpc3RfX2l0ZW0gLmljb24ge1xuICB3aWR0aDogMWVtO1xuICBoZWlnaHQ6IDFlbTtcbiAgbWFyZ2luLWxlZnQ6IDA7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIG1hcmdpbi10b3A6IDAuNGVtO1xuICBtYXJnaW4tcmlnaHQ6IDAuNWVtO1xufVxuLmdhbWUtbGlzdF9faXRlbSAuZ2FtZS10aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTQpO1xufVxuLmdhbWUtbGlzdF9faXRlbSBwIHtcbiAgbWFyZ2luOiAwO1xufVxuLmdhbWUtbGlzdF9faXRlbSAuZ2FtZS1tZXRhZGF0YSB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xufVxuXG5vbC5saXN0IHtcbiAgbGlzdC1zdHlsZTogZGlzYztcbn1cblxuLmxpc3RfX2l0ZW0ge1xuICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbn1cbi5saXN0X19pdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuLmxpc3RfX2l0ZW0gLnRpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XG59XG4ubGlzdF9faXRlbSBwIHtcbiAgbWFyZ2luOiAwO1xufVxuLmxpc3RfX2l0ZW0gLm1ldGFkYXRhIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XG59XG5cbi5jb250ZW50IGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5jb250ZW50IHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogdmFyKC0tbWF4LXdpZHRoX19jb250ZW50KTtcbiAgcGFkZGluZzogdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0MGVtKSB7XG4gIC5jb250ZW50IHtcbiAgICBwYWRkaW5nLWJvdHRvbTogdmFyKC0tcGFkZGluZ19fbGFyZ2UpO1xuICB9XG59XG4uY29udGVudCA+ICoge1xuICB3aWR0aDogMTAwJTtcbn1cbi5jb250ZW50ID4gOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi5jb250ZW50ID4gOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uaWNvbiB7XG4gIHdpZHRoOiAxZW07XG4gIGhlaWdodDogMWVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogc3ViO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJvdHRvbTogMC4xcmVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uaWNvbi4tbGFyZ2Uge1xuICB3aWR0aDogMS41ZW07XG4gIGhlaWdodDogMS41ZW07XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG4uaWNvbi4tc3RyYXZhIHtcbiAgY29sb3I6ICNlMzRhMDA7XG59XG4uaWNvbi4tZ2FtaW5nIHtcbiAgY29sb3I6ICNCMTcyRkQ7XG59XG4uaWNvbi4tZmVybWVudGFibGVzIHtcbiAgY29sb3I6ICNmZmNhNWE7XG59XG4uaWNvbi4taG9wcyB7XG4gIGNvbG9yOiAjNmY5YTRiO1xufVxuLmljb24uLXllYXN0IHtcbiAgY29sb3I6ICNlMmI2OTM7XG59XG5cbi5rZy1jYXJkIHtcbiAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTVlbSkge1xuICAua2ctY2FyZCB7XG4gICAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19sYXJnZSk7XG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19sYXJnZSk7XG4gIH1cbn1cblxuLmtnLWNhcmQua2ctZW1iZWQtY2FyZCB7XG4gIGFzcGVjdC1yYXRpbzogMTYvOTtcbn1cbi5rZy1jYXJkLmtnLWVtYmVkLWNhcmQgaWZyYW1lIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgYXNwZWN0LXJhdGlvOiBpbmhlcml0O1xufVxuLmtnLWNhcmQua2ctZW1iZWQtY2FyZC5yZXNwb25zaXZlLXZpZGVvIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmtnLWNhcmQua2ctZW1iZWQtY2FyZC5yZXNwb25zaXZlLXZpZGVvIGlmcmFtZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4ua2ctY2FyZC5rZy13aWR0aC1mdWxsIGltZyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMHZ3OyAvKiBPciB3aGF0ZXZlciBtYXggd2lkdGggaXMgKi9cbiAgbWFyZ2luLWxlZnQ6IGNhbGMoNTAlIC0gNTB2dyk7IC8qIDUwdncgZXF1YWxzIGhhbGYgdGhlIHdpZHRoICovXG4gIG1hcmdpbi1yaWdodDogY2FsYyg1MCUgLSA1MHZ3KTtcbiAgbWF4LXdpZHRoOiBub25lO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTVlbSkge1xuICAua2ctY2FyZC5rZy1nYWxsZXJ5LWNhcmQge1xuICAgIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbGFyZ2UpO1xuICAgIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fbGFyZ2UpO1xuICB9XG59XG4ua2ctY2FyZC5rZy1nYWxsZXJ5LWNhcmQgLmtnLWdhbGxlcnktY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbi5rZy1jYXJkLmtnLWdhbGxlcnktY2FyZCAua2ctZ2FsbGVyeS1jb250YWluZXIgLmtnLWdhbGxlcnktcm93IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG4ua2ctY2FyZC5rZy1nYWxsZXJ5LWNhcmQgLmtnLWdhbGxlcnktY29udGFpbmVyIC5rZy1nYWxsZXJ5LXJvdzpub3QoOmZpcnN0LW9mLXR5cGUpIHtcbiAgbWFyZ2luOiAxcmVtIDAgMCAwO1xufVxuLmtnLWNhcmQua2ctZ2FsbGVyeS1jYXJkIC5rZy1nYWxsZXJ5LWNvbnRhaW5lciAua2ctZ2FsbGVyeS1yb3cgLmtnLWdhbGxlcnktaW1hZ2U6bm90KDpmaXJzdC1vZi10eXBlKSB7XG4gIG1hcmdpbjogMCAwIDAgdmFyKC0tbWFyZ2luX19zbWFsbCk7XG59XG4ua2ctY2FyZC5rZy1nYWxsZXJ5LWNhcmQgLmtnLWdhbGxlcnktY29udGFpbmVyIC5rZy1nYWxsZXJ5LXJvdyAua2ctZ2FsbGVyeS1pbWFnZSBpbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4ua2ctY2FyZC5rZy13aWR0aC13aWRlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIC0tY2FyZF9fZXh0cmEtd2lkdGg6IDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTVlbSkge1xuICAua2ctY2FyZC5rZy13aWR0aC13aWRlIHtcbiAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX2xhcmdlKTtcbiAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX2xhcmdlKTtcbiAgfVxuICAua2ctY2FyZC5rZy13aWR0aC13aWRlID4gKiB7XG4gICAgbWF4LXdpZHRoOiBub25lO1xuICAgIHdpZHRoOiBjYWxjKHZhcigtLW1heC13aWR0aF9fY29udGVudCkgKyB2YXIoLS1jYXJkX19leHRyYS13aWR0aCkpO1xuICAgIG1hcmdpbi1sZWZ0OiBjYWxjKDUwJSAtICh2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpICsgdmFyKC0tY2FyZF9fZXh0cmEtd2lkdGgpKSAvIDIpO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNjVlbSkge1xuICAua2ctY2FyZC5rZy13aWR0aC13aWRlIHtcbiAgICAtLWNhcmRfX2V4dHJhLXdpZHRoOiAxMnJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDkwZW0pIHtcbiAgLmtnLWNhcmQua2ctd2lkdGgtd2lkZSB7XG4gICAgLS1jYXJkX19leHRyYS13aWR0aDogMzVyZW07XG4gIH1cbn1cblxuZmlndXJlLmV4aWYge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5maWd1cmUuZXhpZjpob3ZlciAuZXhpZl9fY29udGFpbmVyLCBmaWd1cmUuZXhpZjpmb2N1cyAuZXhpZl9fY29udGFpbmVyIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuZmlndXJlLmV4aWY6aG92ZXIgLmV4aWZfX2NvbnRhaW5lciwgZmlndXJlLmV4aWY6Zm9jdXMgLmV4aWZfX2NvbnRhaW5lciB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5leGlmX19jb250YWluZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoY2FsYygtMTAwJSAtIHZhcigtLW1hcmdpbl9fc21hbGwpKSk7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIG9wYWNpdHk6IDA7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xuICB0ZXh0LXNoYWRvdzogMCAwIDJweCAjMDAwLCAwIDAgMnB4ICMwMDAsIDAgMCA0cHggIzAwMCwgMCAwIDNweCAjMDAwO1xufVxuLmV4aWZfX2RhdGEge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5leGlmX19kYXRhOmJlZm9yZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY29udGVudDogYXR0cihkYXRhLXR5cGUpO1xuICB3aWR0aDogNS41ZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0MGVtKSB7XG4gIC5nYWxsZXJ5IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgLmdhbGxlcnkgLmdhbGxlcnktcm93IHtcbiAgICBtYXJnaW46IHZhcigtLW1hcmdpbl9fc21hbGwpIDAgMCAwO1xuICB9XG4gIC5nYWxsZXJ5IC5nYWxsZXJ5LXJvdzpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxuICAuZ2FsbGVyeSAuZ2FsbGVyeS1yb3c6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxufVxuXG4uZ2FsbGVyeS1yb3cge1xuICBtYXJnaW46IDA7XG59XG4uZ2FsbGVyeS1yb3cuLW5vLXdyYXAge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG59XG4uZ2FsbGVyeS1yb3cuLW5vLXdyYXAgPiBmaWd1cmUge1xuICBtYXJnaW46IDA7XG59XG4uZ2FsbGVyeS1yb3cuLW5vLXdyYXAgPiBmaWd1cmU6bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG59XG4uZ2FsbGVyeS1yb3cuLW5vLXdyYXAgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDBlbSkge1xuICAuZ2FsbGVyeS1yb3cge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICB9XG4gIC5nYWxsZXJ5LXJvdyA+IGZpZ3VyZSB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG4gIC5nYWxsZXJ5LXJvdyA+IGZpZ3VyZTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xuICB9XG4gIC5nYWxsZXJ5LXJvdyBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5wYWNrX19sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYmxvY2stc3RhcnQ6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgbWFyZ2luLWJsb2NrLWVuZDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG59XG4ucGFja19fbGFiZWwgLmljb24ge1xuICBtYXJnaW4tcmlnaHQ6IGNhbGMoMC4yZW0gKyAwLjVyZW0pO1xufVxuLnBhY2tfX2l0ZW1fX2NhdGVnb3J5LWhlYWRpbmcge1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuLnBhY2tfX2xpc3Qge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXgtd2lkdGg6IDM1ZW07XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ibG9jay1zdGFydDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICBtYXJnaW4tYmxvY2stZW5kOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbn1cbi5wYWNrX19saXN0X19iYXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAxMDAlO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxICFpbXBvcnRhbnQ7XG4gIG9wYWNpdHk6IDAuNTtcbn1cbi5wYWNrX19saXN0LWl0ZW0ge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDJlbSAxZnIgYXV0bztcbiAgZ3JpZC1nYXA6IDAgMC41cmVtO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwibGVmdCBtaWRkbGUgcmlnaHRcIiBcImJvdHRvbS1sZWZ0IGJvdHRvbSBib3R0b20tcmlnaHRcIjtcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG59XG4ucGFja19fbGlzdC1pdGVtLi1vdmVydmlldyB7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmVtIDFmciBhdXRvO1xuICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcImxlZnQgbWlkZGxlIHJpZ2h0XCIgXCJib3R0b20tbGVmdCBib3R0b20gYm90dG9tLXJpZ2h0XCI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZDogaHNsYSgwLCAwJSwgNzAlLCAwLjEpO1xuICBtYXJnaW4tYm90dG9tOiAwLjFyZW07XG59XG4ucGFja19fbGlzdC1pdGVtLi1vdmVydmlldyAuaWNvbiB7XG4gIG1hcmdpbi1sZWZ0OiAwLjNyZW07XG59XG4ucGFja19fbGlzdC1pdGVtLi1vdmVydmlldyA+IHNwYW4ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDI7XG59XG4ucGFja19fbGlzdC1pdGVtX19sZWZ0IHtcbiAgZ3JpZC1hcmVhOiBsZWZ0O1xufVxuLnBhY2tfX2xpc3QtaXRlbV9fbWlkZGxlIHtcbiAgZ3JpZC1hcmVhOiBtaWRkbGU7XG59XG4ucGFja19fbGlzdC1pdGVtX19yaWdodCB7XG4gIGdyaWQtYXJlYTogcmlnaHQ7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuLnBhY2tfX2xpc3QtaXRlbV9fYm90dG9tLWxlZnQge1xuICBncmlkLWFyZWE6IGJvdHRvbS1sZWZ0O1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XG59XG4ucGFja19fbGlzdC1pdGVtX19ib3R0b20ge1xuICBncmlkLWFyZWE6IGJvdHRvbTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplLWJhc2UpO1xufVxuLnBhY2tfX2xpc3QtaXRlbV9fYm90dG9tLXJpZ2h0IHtcbiAgZ3JpZC1hcmVhOiBib3R0b20tcmlnaHQ7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZS1iYXNlKTtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG4ucGFja19fbGlzdC1idXR0b24ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIGJvdHRvbTogMDtcbn1cblxuLmpzIC5wYWNrX19saXN0LWNvbnRhaW5lciB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4uanMgLnBhY2tfX2xpc3QtY29udGFpbmVyLi1jb2xsYXBzZWQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1heC1oZWlnaHQ6IDIwcmVtO1xufVxuLmpzIC5wYWNrX19saXN0LWNvbnRhaW5lci4tY29sbGFwc2VkOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fZ3JhZGllbnQpO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG59XG4uanMgLnBhY2tfX2xpc3QtY29udGFpbmVyID4gOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLnBhZ2UtaGVhZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBwYWRkaW5nLXRvcDogdmFyKC0tcGFkZGluZ19fbGFyZ2UpO1xuICBwYWRkaW5nLWJvdHRvbTogdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xufVxuLnBhZ2UtaGVhZGVyIGEge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xufVxuLnBhZ2UtaGVhZGVyIC5wYWdlLXRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG4gIGZvbnQtd2VpZ2h0OiA5MDA7XG59XG4ucGFnZS1oZWFkZXIgLnBhZ2UtZGF0ZSB7XG4gIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xufVxuLnBhZ2UtaGVhZGVyIC50YWdzIHtcbiAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG59XG4ucGFnZS1oZWFkZXIgLnRhZ3MgLnRhZyB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xuICBtYXJnaW4tcmlnaHQ6IDAuNGVtO1xufVxuLnBhZ2UtaGVhZGVyIC50YWdzIC50YWc6YmVmb3JlIHtcbiAgY29udGVudDogXCIjXCI7XG59XG4ucGFnZS1oZWFkZXIgLnBhZ2UtbWV0YWRhdGEge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDEwO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiB2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpO1xuICBwYWRkaW5nOiAwIHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG59XG4ucGFnZS1oZWFkZXIgLnBhZ2UtbWV0YWRhdGEgOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi5wYWdlLWhlYWRlciAucGFnZS1tZXRhZGF0YSA6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5Ac3VwcG9ydHMgKGJhY2tncm91bmQtY2xpcDogdGV4dCkgYW5kIChiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTIwZGVnLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMCUsIHZhcigtLWNvbG9yX19saW5rKSAzNy41JSwgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDEwMCUpKSB7XG4gIC5wYWdlLWhlYWRlcjpub3QoLi1mZWF0dXJlLWltYWdlKSAucGFnZS10aXRsZSB7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEyMGRlZywgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDAlLCB2YXIoLS1jb2xvcl9fbGluaykgMzcuNSUsIHZhcigtLWNvbG9yX19saW5rX192aXNpdGVkKSAxMDAlKTtcbiAgICBiYWNrZ3JvdW5kLWNsaXA6IHRleHQ7XG4gICAgY29sb3I6IHRyYW5zcGFyZW50O1xuICB9XG59XG4ucGFnZS1oZWFkZXIuLWZlYXR1cmUtaW1hZ2Uge1xuICBtaW4taGVpZ2h0OiA1MHZtaW47XG4gIG1heC1oZWlnaHQ6IDgwdmg7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xufVxuLnBhZ2UtaGVhZGVyLi1mZWF0dXJlLWltYWdlIGEge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHRfX2NvbnRyYXN0KTtcbn1cbi5wYWdlLWhlYWRlci4tZmVhdHVyZS1pbWFnZSAucGFnZS1oZWFkZXJfX2ltYWdlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICB0b3A6IDA7XG4gIG1hcmdpbjogMDtcbiAgb3BhY2l0eTogMC41O1xufVxuLnBhZ2UtaGVhZGVyLi1mZWF0dXJlLWltYWdlIC5wYWdlLWhlYWRlcl9faW1hZ2UgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XG59XG5cbi5wb3N0IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5jYW5vbmljYWwge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbn1cbi5jYW5vbmljYWw6YmVmb3JlIHtcbiAgY29udGVudDogXCJMw6RuazogXCI7XG59XG5cbi5wb3N0LWhlYWRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgcGFkZGluZy10b3A6IHZhcigtLXBhZGRpbmdfX2xhcmdlKTtcbiAgcGFkZGluZy1ib3R0b206IHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbn1cbi5wb3N0LWhlYWRlciBhIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbn1cbi5wb3N0LWhlYWRlciAucG9zdC10aXRsZSB7XG4gIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fc21hbGwpO1xuICBmb250LXdlaWdodDogOTAwO1xufVxuLnBvc3QtaGVhZGVyIC5wb3N0LXRpdGxlIHN2ZyB7XG4gIHdpZHRoOiA5MCU7XG4gIG1heC13aWR0aDogNjByZW07XG4gIHBhZGRpbmctYm90dG9tOiB2YXIoLS1wYWRkaW5nX19zbWFsbCk7XG59XG4ucG9zdC1oZWFkZXIgLnBvc3QtZGF0ZSB7XG4gIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xufVxuLnBvc3QtaGVhZGVyIC50YWdzIHtcbiAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG59XG4ucG9zdC1oZWFkZXIgLnRhZ3MgLnRhZyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG1hcmdpbi1yaWdodDogMC40ZW07XG59XG4ucG9zdC1oZWFkZXIgLnRhZ3MgLnRhZzpiZWZvcmUge1xuICBjb250ZW50OiBcIiNcIjtcbn1cbi5wb3N0LWhlYWRlciAucG9zdC1tZXRhZGF0YSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTA7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IHZhcigtLW1heC13aWR0aF9fY29udGVudCk7XG4gIHBhZGRpbmc6IDAgdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcbn1cbi5wb3N0LWhlYWRlciAucG9zdC1tZXRhZGF0YSA6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuLnBvc3QtaGVhZGVyIC5wb3N0LW1ldGFkYXRhIDpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbkBzdXBwb3J0cyAoYmFja2dyb3VuZC1jbGlwOiB0ZXh0KSBhbmQgKGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMjBkZWcsIHZhcigtLWNvbG9yX19saW5rX192aXNpdGVkKSAwJSwgdmFyKC0tY29sb3JfX2xpbmspIDM3LjUlLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMTAwJSkpIHtcbiAgLnBvc3QtaGVhZGVyOm5vdCguLWZlYXR1cmUtaW1hZ2UpIC5wb3N0LXRpdGxlIHtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTIwZGVnLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMCUsIHZhcigtLWNvbG9yX19saW5rKSAzNy41JSwgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDEwMCUpO1xuICAgIGJhY2tncm91bmQtY2xpcDogdGV4dDtcbiAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cbn1cbi5wb3N0LWhlYWRlci4tZmVhdHVyZS1pbWFnZSB7XG4gIG1pbi1oZWlnaHQ6IDUwdm1pbjtcbiAgbWF4LWhlaWdodDogODB2aDtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0X19jb250cmFzdCk7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG59XG4ucG9zdC1oZWFkZXIuLWZlYXR1cmUtaW1hZ2UgYSB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xufVxuLnBvc3QtaGVhZGVyLi1mZWF0dXJlLWltYWdlIC5wb3N0LWhlYWRlcl9faW1hZ2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMDtcbiAgbWFyZ2luOiAwO1xuICBvcGFjaXR5OiAwLjU7XG59XG4ucG9zdC1oZWFkZXIuLWZlYXR1cmUtaW1hZ2UgLnBvc3QtaGVhZGVyX19pbWFnZSBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcbn1cblxuLm5leHQtcG9zdCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogY2FsYyh2YXIoLS1wYWRkaW5nX19tZWRpdW0pICogNCkgMDtcbiAgbWFyZ2luOiBhdXRvO1xuICBiYWNrZ3JvdW5kOiBibGFjaztcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBjb2xvcjogd2hpdGU7XG59XG4ubmV4dC1wb3N0IC5yZWFkLW1vcmUtdGV4dCB7XG4gIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NhbnMtc2VyaWYpO1xuICBmb250LXNpemU6IDkwJTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuLm5leHQtcG9zdCAubmV4dC1wb3N0X190aXRsZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy0xKTtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjJyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG59XG4ubmV4dC1wb3N0IC5uZXh0LXBvc3RfX3RpdGxlOnZpc2l0ZWQge1xuICBjb2xvcjogd2hpdGU7XG59XG4ubmV4dC1wb3N0IC5uZXh0LXBvc3RfX3RpdGxlOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG4ubmV4dC1wb3N0IC5uZXh0LXBvc3RfX21ldGFkYXRhIHtcbiAgei1pbmRleDogMTA7XG4gIHdpZHRoOiAxMDB2dztcbiAgbWF4LXdpZHRoOiB2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpO1xuICBwYWRkaW5nOiAwIHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG59XG4ubmV4dC1wb3N0IC5uZXh0LXBvc3RfX2RhdGUge1xuICBtYXJnaW4tdG9wOiB2YXIoLS1wYWRkaW5nX19zbWFsbCk7XG59XG4ubmV4dC1wb3N0IC5uZXh0LXBvc3RfX2RhdGUge1xuICBtYXJnaW4tdG9wOiB2YXIoLS1wYWRkaW5nX19zbWFsbCk7XG59XG4ubmV4dC1wb3N0IC5uZXh0LXBvc3RfX2ltYWdlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICB0b3A6IDA7XG4gIG1hcmdpbjogMDtcbiAgb3BhY2l0eTogMC41O1xufVxuLm5leHQtcG9zdCAubmV4dC1wb3N0X19pbWFnZSBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcbn1cbi5uZXh0LXBvc3Q6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX292ZXJsYXkpO1xuICBjb250ZW50OiBcIlwiO1xufVxuXG4uc2VwYXJhdG9yLWhlYWRpbmcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbGFyZ2UpO1xuICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNSk7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbi5zZXBhcmF0b3ItaGVhZGluZzphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMDtcbiAgdG9wOiAxMHB4O1xuICBsZWZ0OiAwO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMnB4O1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0KTtcbiAgY29udGVudDogXCJcIjtcbn1cbi5zZXBhcmF0b3ItaGVhZGluZyBzcGFuIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxMDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwYWRkaW5nOiAwIDFlbTtcbiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmQpO1xufVxuXG4ucG9zdC1saXN0IHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XG59XG5cbi5wb3N0LWxpc3RfX2l0ZW0ge1xuICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG59XG4ucG9zdC1saXN0X19pdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuLnBvc3QtbGlzdF9faXRlbSAucG9zdC10aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTQpO1xuICBmb250LXdlaWdodDogNTAwO1xufVxuLnBvc3QtbGlzdF9faXRlbSBwIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4ucG9zdCB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uY2Fub25pY2FsIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XG59XG4uY2Fub25pY2FsOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiTMOkbms6IFwiO1xufVxuXG4uc2l0ZS1mb290ZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICBwYWRkaW5nOiB2YXIoLS1wYWRkaW5nX19tZWRpdW0pIDA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0KTtcbn1cbi5zaXRlLWZvb3RlciAuY29sdW1uIHtcbiAgbWFyZ2luOiB2YXIoLS1tYXJnaW5fX21lZGl1bSkgMDtcbn1cblxuLnNpdGUtZm9vdGVyX19jb250ZW50IHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogdmFyKC0tbWF4LXdpZHRoX19iYXNlKTtcbiAgcGFkZGluZzogMCB2YXIoLS1wYWRkaW5nX19tZWRpdW0pO1xuICBmb250LXNpemU6IDkwJTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gIGdyaWQtZ2FwOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDBlbSkge1xuICAuc2l0ZS1mb290ZXJfX2NvbnRlbnQge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDJmciAxZnI7XG4gIH1cbn1cbi5zaXRlLWZvb3Rlcl9fY29udGVudCBsYWJlbCB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG59XG5cbi5zaXRlLWZvb3Rlcl9fbmF2aWdhdGlvbiB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG59XG4uc2l0ZS1mb290ZXJfX25hdmlnYXRpb24gdWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nLWlubGluZS1zdGFydDogMDtcbiAgbWFyZ2luOiAwO1xufVxuLnNpdGUtZm9vdGVyX19uYXZpZ2F0aW9uIGEge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xufVxuLnNpdGUtZm9vdGVyX19uYXZpZ2F0aW9uIGE6dmlzaXRlZCB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG59XG5cbi5zaXRlLWZvb3Rlcl9faGVhZGluZyB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy00KTtcbn1cblxuLnNpdGUtaGVhZGVyX19uYXZpZ2F0aW9uIHtcbiAgZmxleDogMTtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG4uc2l0ZS1oZWFkZXJfX25hdmlnYXRpb24gdWwge1xuICBtYXJnaW46IDA7XG59XG4uc2l0ZS1oZWFkZXJfX25hdmlnYXRpb24gdWwgbGkge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1sZWZ0OiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbn1cbi5zaXRlLWhlYWRlcl9fbmF2aWdhdGlvbiB1bCBsaTpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuXG4uc2l0ZS1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG59XG5cbi5zaXRlLWhlYWRlcl9fY29udGVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1heC13aWR0aDogdmFyKC0tbWF4LXdpZHRoX19iYXNlKTtcbiAgaGVpZ2h0OiB2YXIoLS1oZWFkZXJfX2hlaWdodCk7XG4gIG1heC1oZWlnaHQ6IHZhcigtLWhlYWRlcl9faGVpZ2h0KTtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgcGFkZGluZy1yaWdodDogdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcbiAgcGFkZGluZy1sZWZ0OiB2YXIoLS1wYWRkaW5nX19tZWRpdW0pO1xuICBtYXJnaW46IGF1dG87XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xuICBmb250LXNpemU6IHZhcigtLWhlYWRlcl9fZm9udC1zY2FsZSk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1oZWFkZXJfX2hlaWdodCk7XG59XG4uc2l0ZS1oZWFkZXJfX2NvbnRlbnQgLnNpdGVfX3RpdGxlIHtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBsaW5lLWhlaWdodDogaW5oZXJpdDtcbiAgbGV0dGVyLXNwYWNpbmc6IGluaGVyaXQ7XG4gIG1hcmdpbjogMDtcbn1cbi5zaXRlLWhlYWRlcl9fY29udGVudCAuc2l0ZV9faW1hZ2Uge1xuICB3aWR0aDogY2FsYyh2YXIoLS1oZWFkZXJfX2hlaWdodCkgKiAwLjUpO1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1yaWdodDogMC43NWVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG59XG4uc2l0ZS1oZWFkZXJfX2NvbnRlbnQgYSB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG4uc2l0ZS1oZWFkZXJfX2NvbnRlbnQgYTp2aXNpdGVkIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbn1cbi5zaXRlLWhlYWRlcl9fY29udGVudCAuc2l0ZV9fZGVzY3JpcHRpb24ge1xuICBkaXNwbGF5OiBub25lO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2VyaWYpO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDBlbSkge1xuICAuc2l0ZS1oZWFkZXJfX2NvbnRlbnQgLnNpdGVfX2Rlc2NyaXB0aW9uIHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG4gIH1cbn1cblxuLnN0YXRpc3RpY3NfX2xpc3Qge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtYXV0by1mbG93OiBkZW5zZTtcbiAgZ3JpZC1nYXA6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gIG1heC13aWR0aDogMzVlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAyNWVtKSB7XG4gIC5zdGF0aXN0aWNzX19saXN0IHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xuICB9XG59XG4uc3RhdGlzdGljc19fbGlzdC4tY29sdW1uLWNvdW50LTQge1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDBlbSkge1xuICAuc3RhdGlzdGljc19fbGlzdC4tY29sdW1uLWNvdW50LTQge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnIgMWZyO1xuICB9XG59XG4uc3RhdGlzdGljc19fbGlzdC1pdGVtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cbi5zdGF0aXN0aWNzX19saXN0LWl0ZW1fX2xhYmVsIHtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplLWJhc2UpO1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbn1cbi5zdGF0aXN0aWNzX19saXN0LWl0ZW1fX3ZhbHVlIHtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTQpO1xufVxuXG4udGFnLWhlYWRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgcGFkZGluZy10b3A6IHZhcigtLXBhZGRpbmdfX2xhcmdlKTtcbiAgcGFkZGluZy1ib3R0b206IHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbn1cbi50YWctaGVhZGVyIC50YWctbWV0YWRhdGEge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDEwO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiB2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpO1xuICBwYWRkaW5nOiAwIHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG59XG4udGFnLWhlYWRlciAudGFnLW1ldGFkYXRhIDpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG4udGFnLWhlYWRlciAudGFnLW1ldGFkYXRhIDpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi50YWctaGVhZGVyIC50YWctdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbn1cbi50YWctaGVhZGVyIC50YWctZGF0ZSB7XG4gIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xufVxuQHN1cHBvcnRzIChiYWNrZ3JvdW5kLWNsaXA6IHRleHQpIGFuZCAoYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEyMGRlZywgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDAlLCB2YXIoLS1jb2xvcl9fbGluaykgMzcuNSUsIHZhcigtLWNvbG9yX19saW5rX192aXNpdGVkKSAxMDAlKSkge1xuICAudGFnLWhlYWRlcjpub3QoLi1mZWF0dXJlLWltYWdlKSAudGFnLXRpdGxlIHtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTIwZGVnLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMCUsIHZhcigtLWNvbG9yX19saW5rKSAzNy41JSwgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDEwMCUpO1xuICAgIGJhY2tncm91bmQtY2xpcDogdGV4dDtcbiAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cbn1cbi50YWctaGVhZGVyLi1mZWF0dXJlLWltYWdlIHtcbiAgaGVpZ2h0OiA1MHZoO1xuICBtaW4taGVpZ2h0OiAyNXJlbTtcbiAgbWF4LWhlaWdodDogNTB2dztcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0X19jb250cmFzdCk7XG59XG4udGFnLWhlYWRlci4tZmVhdHVyZS1pbWFnZTphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fb3ZlcmxheSk7XG4gIGNvbnRlbnQ6IFwiXCI7XG59XG5cbmFydGljbGUudGFnIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi50YWdzIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XG59XG4udGFncyAudGFnOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI1wiO1xufVxuXG4ucG9zdC10ZW1wbGF0ZSBtYWluIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmQpO1xufVxuXG4udGFnLXRlbXBsYXRlIG1haW4ge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG59XG5cbi5wYWdlLXRlbXBsYXRlIG1haW4ge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG59XG5cbi5ob21lLXRlbXBsYXRlIG1haW4ge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG59XG5cbi8qIERlcHJlY2F0ZWQgZml4IGZvciB0aGUgb2xkIHdheSBvZiBoYW5kbGluZyBpbWFnZXMsIGp1c3Qgc28gdGhleSBkb24ndCBsb29rIHRlcnJpYmxlICovXG4uY29udGVudCBpbWdbc3JjJD1cIiNsYXJnZVwiXSwgLmNvbnRlbnQgaW1nW3NyYyQ9XCIjZnVsbFwiXSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vKiBGaXggZm9yIDEwMHZ3IGFuZCBob3Jpem9udGFsIHNjcm9sbGJhciAqL1xuYm9keSB7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuLmhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLndyYXBwZXIge1xuICBtYXgtd2lkdGg6IHZhcigtLW1heC13aWR0aF9fYmFzZSk7XG4gIHBhZGRpbmc6IDAgdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbi5zZWNvbmRhcnkge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbn1cblxuLi1jb2x1bW4tY291bnQtMiB7XG4gIGNvbHVtbi1jb3VudDogMjtcbn1cblxuLnNyLW9ubHkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IC0xIHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBib3JkZXItd2lkdGg6IDA7XG59XG5cbi51cHBlcmNhc2Uge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4ubG93ZXJjYXNlIHtcbiAgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZTtcbn1cblxuLnNtYWxsY2FwcyB7XG4gIGZvbnQtdmFyaWFudDogc21hbGwtY2Fwcztcbn1cblxuLmxpZ2h0IHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cblxuLnNlbWlib2xkIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLmJvbGQge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG5zbWFsbCwgLnNtYWxsIHtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplLWJhc2UpO1xufVxuXG4ubm9ybWFsIHtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplKTtcbn1cblxuLmxhcmdlIHtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTQpO1xufVxuXG4ubm8tanMgLmhpZGRlblxcQG5vLWpzIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuQG1lZGlhIHByaW50IHtcbiAgLmhpZGRlblxcQHByaW50IHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmtnLWJvb2ttYXJrLXRodW1ibmFpbCB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG4gIGEsIHAsIHNwYW4sIHVsLCBvbCwgbGksIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICAgIGNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xuICB9XG4gIG1haW4ubWFpbiB7XG4gICAgYmFja2dyb3VuZDogd2hpdGUgIWltcG9ydGFudDtcbiAgfVxuICAuaGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZSAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xuICB9XG4gIC5oZWFkZXI6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICAuaGVhZGVyIC5oZWFkZXJfX3RvcCB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG4gIC5oZWFkZXIgLmhlcm8ge1xuICAgIGhlaWdodDogYXV0byAhaW1wb3J0YW50O1xuICB9XG4gIC5oZWFkZXIgLmhlcm8tY29udGVudCB7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuICAuaGVhZGVyIC5wb3N0X19yZWFkLXRpbWUsIC5oZWFkZXIgLnBvc3RfX3RhZ3Mge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICAuY29udGVudCB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZy10b3A6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgfVxuICAuY29udGVudCA+ICoge1xuICAgIGNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xuICAgIGJhY2tncm91bmQ6IHdoaXRlICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICAgIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fc21hbGwpO1xuICB9XG4gIC5jb250ZW50IHByZSB7XG4gICAgYmFja2dyb3VuZDogd2hpdGUgIWltcG9ydGFudDtcbiAgICBjb2xvcjogYmxhY2sgIWltcG9ydGFudDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgfVxuICAuY29udGVudCBwcmUgY29kZSB7XG4gICAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnBvc3QtaGVhZGVyIHtcbiAgICBtaW4taGVpZ2h0OiAwICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZDogd2hpdGUgIWltcG9ydGFudDtcbiAgICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnBvc3QtaGVhZGVyLi1mZWF0dXJlLWltYWdlOmFmdGVyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5wb3N0LWhlYWRlciAucG9zdC1tZXRhZGF0YSB7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXgtd2lkdGg6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICAuc2VwYXJhdG9yLWhlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy0yKTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIHRleHQtdHJhbnNmb3JtOiBpbml0aWFsO1xuICB9XG4gIC5zZXBhcmF0b3ItaGVhZGluZyBzcGFuIHtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG4gIC5zZXBhcmF0b3ItaGVhZGluZzphZnRlciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAudGFncyAudGFnOmJlZm9yZSB7XG4gICAgY29udGVudDogXCIsXCI7XG4gICAgbWFyZ2luLXJpZ2h0OiAwLjJlbTtcbiAgICBtYXJnaW4tbGVmdDogLTAuMmVtO1xuICB9XG4gIC50YWdzIC50YWc6Zmlyc3Qtb2YtdHlwZTpiZWZvcmUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLi1jb2xsYXBzZWQge1xuICAgIG1heC1oZWlnaHQ6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICAuLWNvbGxhcHNlZDphZnRlciB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG4gIGEuQnV0dG9uIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjayAhaW1wb3J0YW50O1xuICAgIGJhY2tncm91bmQ6IG5vbmUgIWltcG9ydGFudDtcbiAgICBwb3NpdGlvbjogaW5pdGlhbCAhaW1wb3J0YW50O1xuICB9XG4gIC5CdXR0b246bm90KGEpIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbiAgYVtocmVmXj1odHRwXSwgYVtocmVmXj1cIi9cIl0ge1xuICAgIGNvbG9yOiAjMDA2YmYxICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgIWltcG9ydGFudDtcbiAgfVxuICBhW2hyZWZePWh0dHBdOmFmdGVyLCBhW2hyZWZePVwiL1wiXTphZnRlciB7XG4gICAgY29udGVudDogXCIgW1wiIGF0dHIoaHJlZikgXCJdXCI7XG4gICAgZm9udC1zaXplOiA4NSU7XG4gICAgdmVydGljYWwtYWxpZ246IHN1cGVyO1xuICB9XG59XG5AbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKSB7XG4gIDpyb290IHtcbiAgICAtLWNvbG9yX19iYWNrZ3JvdW5kOiAjMTQxNDE0O1xuICAgIC0tY29sb3JfX2JhY2tncm91bmRfX2FsdDogIzFlMWUxZTtcbiAgICAtLWNvbG9yX19iYWNrZ3JvdW5kX193aWRnZXQ6ICMzMzMzMzM7XG4gICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3Q6ICMxNDE0MTQ7XG4gICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3RfX3dpZGdldDogIzI2MjYyNjtcbiAgICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdF9fYWx0OiAjMzMzMzMzO1xuICAgIC0tY29sb3JfX2JhY2tncm91bmRfX2dyYWRpZW50OiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLHJnYmEoMCwwLDAsMCkgMCwjMTQxNDE0IDEwMCUpO1xuICAgIC0tY29sb3JfX292ZXJsYXk6IHJnYmEoMCwwLDAsLjUpO1xuICAgIC0tY29sb3JfX2xpbms6ICM2MTgzZmQ7XG4gICAgLS1jb2xvcl9fbGlua19fdmlzaXRlZDogI0IxNzJGRDtcbiAgICAtLWNvbG9yX190ZXh0OiAjZjFmMWYxO1xuICAgIC0tY29sb3JfX3RleHQtYWx0OiAjYTZhNmE2O1xuICAgIC0tY29sb3JfX3RleHRfX2NvbnRyYXN0OiB3aGl0ZTtcbiAgfVxufVxuW2RhdGEtdGhlbWU9bGlnaHRdIHtcbiAgLS1jb2xvcl9fYmFja2dyb3VuZDogd2hpdGU7XG4gIC0tY29sb3JfX2JhY2tncm91bmRfX2FsdDogI2Y3ZjdmNztcbiAgLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0OiAjZjFmMWYxO1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdDogIzI2MjYyNjtcbiAgLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3RfX3dpZGdldDogIzE0MTQxNDtcbiAgLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3RfX2FsdDogIzA1MDUwNTtcbiAgLS1jb2xvcl9fYmFja2dyb3VuZF9fZ3JhZGllbnQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcscmdiYSgwLDAsMCwwKSAwLHdoaXRlIDEwMCUpO1xuICAtLWNvbG9yX19vdmVybGF5OiByZ2JhKDAsMCwwLC41KTtcbiAgLS1jb2xvcl9fbGluazogaHNsKDI0MCwgMTAwJSwgNjAlKTtcbiAgLS1jb2xvcl9fbGlua19fdmlzaXRlZDogaHNsKDI4NSwgMTAwJSwgNDAlKTtcbiAgLS1jb2xvcl9fdGV4dDogYmxhY2s7XG4gIC0tY29sb3JfX3RleHQtYWx0OiAjNDA0MDQwO1xuICAtLWNvbG9yX190ZXh0X19jb250cmFzdDogd2hpdGU7XG4gIC0tY29sb3JfX3RleHRfX2NvbnRyYXN0X19hbHQ6ICNhOWE5YTk7XG59XG5cbltkYXRhLXRoZW1lPWRhcmtdIHtcbiAgLS1jb2xvcl9fYmFja2dyb3VuZDogIzE0MTQxNDtcbiAgLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0OiAjMWUxZTFlO1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX193aWRnZXQ6ICMzMzMzMzM7XG4gIC0tY29sb3JfX2JhY2tncm91bmRfX2NvbnRyYXN0OiAjMTQxNDE0O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdF9fd2lkZ2V0OiAjMjYyNjI2O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdF9fYWx0OiAjMzMzMzMzO1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19ncmFkaWVudDogbGluZWFyLWdyYWRpZW50KDE4MGRlZyxyZ2JhKDAsMCwwLDApIDAsIzE0MTQxNCAxMDAlKTtcbiAgLS1jb2xvcl9fb3ZlcmxheTogcmdiYSgwLDAsMCwuNSk7XG4gIC0tY29sb3JfX2xpbms6ICM2MTgzZmQ7XG4gIC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQ6ICNCMTcyRkQ7XG4gIC0tY29sb3JfX3RleHQ6ICNmMWYxZjE7XG4gIC0tY29sb3JfX3RleHQtYWx0OiAjYTZhNmE2O1xuICAtLWNvbG9yX190ZXh0X19jb250cmFzdDogd2hpdGU7XG4gIC0tY29sb3JfX3RleHRfX2NvbnRyYXN0X19hbHQ6ICNhOWE5YTk7XG59IiwiLyogTUFJTlxyXG4tLS0tLS0tLS0tLS0tLS1cclxuSW1wb3J0IGFsbCByZWxldmFudCBmaWxlc1xyXG4tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcbkBpbXBvcnQgXCIwMS5zZXR0aW5ncy9icmVha3BvaW50cy5zY3NzXCI7XG5AaW1wb3J0IFwiMDEuc2V0dGluZ3MvY29sb3JzLnNjc3NcIjtcbkBpbXBvcnQgXCIwMS5zZXR0aW5ncy9mb250cy5zY3NzXCI7XG5AaW1wb3J0IFwiMDEuc2V0dGluZ3Mvc2l6ZXMuc2Nzc1wiO1xyXG5AaW1wb3J0IFwiMDIudG9vbHMvbWl4aW5zLnNjc3NcIjtcclxuQGltcG9ydCBcIjAzLmdlbmVyaWMvX2Nzcy1yZXNldC5zY3NzXCI7XG5AaW1wb3J0IFwiMDMuZ2VuZXJpYy9fZm9udHMtLW5vdG8uc2Nzc1wiO1xuQGltcG9ydCBcIjAzLmdlbmVyaWMvX3ByaXNtLS1jb2RlLWhpZ2hsaWdodGluZy5zY3NzXCI7XG5AaW1wb3J0IFwiMDMuZ2VuZXJpYy9fcm9vdC12YXJpYWJsZXMuc2Nzc1wiO1xuQGltcG9ydCBcIjAzLmdlbmVyaWMvZ2VuZXJpYy5zY3NzXCI7XHJcbkBpbXBvcnQgXCIwNC5lbGVtZW50cy9jb2RlLnNjc3NcIjtcbkBpbXBvcnQgXCIwNC5lbGVtZW50cy9maWd1cmUuc2Nzc1wiO1xuQGltcG9ydCBcIjA0LmVsZW1lbnRzL2hlYWRpbmdzLnNjc3NcIjtcbkBpbXBvcnQgXCIwNC5lbGVtZW50cy9pbWFnZXMuc2Nzc1wiO1xuQGltcG9ydCBcIjA0LmVsZW1lbnRzL2xpbmtzLnNjc3NcIjtcbkBpbXBvcnQgXCIwNC5lbGVtZW50cy9saXN0cy5zY3NzXCI7XG5AaW1wb3J0IFwiMDQuZWxlbWVudHMvcHNldWRvLnNjc3NcIjtcbkBpbXBvcnQgXCIwNC5lbGVtZW50cy9zZWxlY3Quc2Nzc1wiO1xuQGltcG9ydCBcIjA0LmVsZW1lbnRzL3R5cG9ncmFwaHkuc2Nzc1wiO1xyXG5AaW1wb3J0IFwiMDUub2JqZWN0cy9CcmVhZGNydW1icy5zY3NzXCI7XG5AaW1wb3J0IFwiMDUub2JqZWN0cy9CdXR0b24uc2Nzc1wiO1xuQGltcG9ydCBcIjA1Lm9iamVjdHMvQ2FyZC5zY3NzXCI7XG5AaW1wb3J0IFwiMDUub2JqZWN0cy9Db21tZW50cy5zY3NzXCI7XG5AaW1wb3J0IFwiMDUub2JqZWN0cy9Gb3JtLnNjc3NcIjtcclxuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvYnJld2VyeV9fYmVlcl9fbGFiZWwuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvYnJld2VyeV9fYmVlci5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9icmV3ZXJ5X19iZWVycy5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9jb2x1bW5zLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL2NvbnRlbnRfX2NvZGUtYmxvY2suc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvY29udGVudF9faGVhZGluZy1hbmNob3JzLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL2NvbnRlbnRfX2xpc3RfX2FjdGl2aXR5LnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL2NvbnRlbnRfX2xpc3RfX2Jvb2suc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvY29udGVudF9fbGlzdF9fZ2FtZS5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9jb250ZW50X19saXN0LnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL2NvbnRlbnRfX21lZGlhX19saWdodGJveC5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9jb250ZW50X19tZWRpYS5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9jb250ZW50LnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL2ljb24uc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMva29lbmlnLWNhcmQtLWNhcmQuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMva29lbmlnLWNhcmQtLWVtYmVkLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL2tvZW5pZy1jYXJkLS1mdWxsLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL2tvZW5pZy1jYXJkLS1nYWxsZXJ5LnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL2tvZW5pZy1jYXJkLS13aWRlLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL21lZGlhX19maWd1cmVfX2V4aWYuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvbWVkaWFfX2dhbGxlcnkuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvcGFjay5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9wYWdlX19oZWFkZXIuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvcGFnZS5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9wb3N0X19oZWFkZXIuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvcG9zdF9fbmV4dC1wb3N0LnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL3Bvc3RfX3NlcGFyYXRvci1oZWFkaW5nLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL3Bvc3QtbGlzdC5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9wb3N0LnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL3NpdGUtZm9vdGVyLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL3NpdGUtaGVhZGVyX19uYXZpZ2F0aW9uLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL3NpdGUtaGVhZGVyLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL3N0YXRpc3RpY3Muc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvdGFnX19oZWFkZXIuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvdGFnLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL3RhZ3Muc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvdGVtcGxhdGVzLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL3RoZW1lLWNob29zZXIuc2Nzc1wiO1xyXG5AaW1wb3J0IFwiMDcub3ZlcnJpZGVzL2ZpeC5vbGQtaW1hZ2Utc3R5bGVzLnNjc3NcIjtcbkBpbXBvcnQgXCIwNy5vdmVycmlkZXMvZml4LnNjcm9sbGJhcnMuc2Nzc1wiO1xuQGltcG9ydCBcIjA3Lm92ZXJyaWRlcy9oZWxwZXJzLnNjc3NcIjtcbkBpbXBvcnQgXCIwNy5vdmVycmlkZXMvcHJpbnQuc2Nzc1wiO1xuQGltcG9ydCBcIjA3Lm92ZXJyaWRlcy90aGVtZXMuc2Nzc1wiO1xyXG4iLCIvKiBCcmVha3BvaW50c1xyXG4tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbkJyZWFrcG9pbnRzIGZvciB2YXJpb3VzIHNjcmVlbiBzaXplc1xyXG4tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcblxyXG4kaHVnZTogOTBlbTtcclxuJGxhcmdlOiA2NWVtO1xyXG4kbWVkaXVtOiA1NWVtO1xyXG4kc21hbGw6IDQwZW07XHJcbiR0aW55OiAyNWVtO1xyXG5cclxuJGJyZWFrcG9pbnRzOiAoXHJcbiAgICAgICAgXCJodWdlXCI6IChtaW4td2lkdGg6ICRodWdlKSxcclxuICAgICAgICBcImxhcmdlXCI6IChtaW4td2lkdGg6ICRsYXJnZSksXHJcbiAgICAgICAgXCJtZWRpdW1cIjogKG1pbi13aWR0aDogJG1lZGl1bSksXHJcbiAgICAgICAgXCJzbWFsbFwiOiAobWluLXdpZHRoOiAkc21hbGwpLFxyXG4gICAgICAgIFwidGlueVwiOiAobWluLXdpZHRoOiAkdGlueSksXHJcbik7XHJcbiIsIi8qIENvbG9yc1xyXG4tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbkFsbCBjb2xvcnMgdXNlZCB0aHJvdWdob3V0IHRoZSB0aGVtZVxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbiRjb2xvcl9fOTctYnJpZ2h0bmVzczogI2Y3ZjdmNztcclxuJGNvbG9yX185NS1icmlnaHRuZXNzOiAjZjFmMWYxO1xyXG4kY29sb3JfXzc5LWJyaWdodG5lc3M6ICNjOWM5Yzk7XHJcbiRjb2xvcl9fNjUtYnJpZ2h0bmVzczogI2E2YTZhNjtcclxuJGNvbG9yX181Mi1icmlnaHRuZXNzOiAjODU4NTg1O1xyXG4kY29sb3JfXzQ1LWJyaWdodG5lc3M6ICM3MzczNzM7XHJcbiRjb2xvcl9fMzUtYnJpZ2h0bmVzczogIzU5NTk1OTtcclxuJGNvbG9yX18yNS1icmlnaHRuZXNzOiAjNDA0MDQwO1xyXG4kY29sb3JfXzE1LWJyaWdodG5lc3M6ICMyNjI2MjY7XHJcbiRjb2xvcl9fMTEtYnJpZ2h0bmVzczogIzFjMWMxYztcclxuJGNvbG9yX184LWJyaWdodG5lc3M6ICMxNDE0MTQ7XHJcbiRjb2xvcl9fMi1icmlnaHRuZXNzOiAjMDUwNTA1O1xyXG5cclxuJGNvbG9yX19ibHVlOiBoc2woMjQwLCAxMDAlLCA2MCUpO1xyXG4kY29sb3JfX3B1cnBsZTogaHNsKDI4NSwgMTAwJSwgNDAlKTtcclxuJGNvbG9yX19ncmVlbjogaHNsKDEyMCwgMTAwJSwgMTclKTtcclxuJGNvbG9yX19yZWQ6IGhzbCgwLCA4OCUsIDM1JSk7XHJcblxyXG4kY29sb3JfX3RyYW5zcGFyZW50LWJsYWNrOiBoc2xhKDAsIDAlLCAwJSwgMC44KTtcclxuIiwiLyogRm9udHNcclxuLS0tLS0tLS0tLS0tLS0tXHJcbkZvbnRzXHJcbi0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuJGZvbnRfX3NhbnMtc2VyaWY6IFwiTm90byBTYW5zXCIsIEFyaWFsLCBzYW5zLXNlcmlmO1xyXG4kZm9udF9fc2VyaWY6IFwiTm90byBTZXJpZlwiLCBcIlRpbWVzIE5ldyBSb21hblwiLCBzZXJpZjtcclxuJGZvbnRfX21vbm9zcGFjZTogbW9ub3NwYWNlO1xyXG5cclxuJGZvbnRfX3NpemU6IDEuNnJlbTtcclxuJGZvbnRfX3NpemVfX2Jhc2U6IDEuNHJlbTtcclxuXHJcbiRmb250X19keW5hbWljLXNjYWxpbmc6IDAuM3Z3O1xyXG4kZm9udF9fcmF0aW86IDEuMjU7XHJcbiRmb250X19keW5hbWljLXJhdGlvOiAxLjM7XHJcbiIsIi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvXHJcbiAgIHYyLjAgfCAyMDExMDEyNlxyXG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxyXG4qL1xyXG5cclxuaHRtbCxcclxuYm9keSxcclxuZGl2LFxyXG5zcGFuLFxyXG5hcHBsZXQsXHJcbm9iamVjdCxcclxuaWZyYW1lLFxyXG5oMSxcclxuaDIsXHJcbmgzLFxyXG5oNCxcclxuaDUsXHJcbmg2LFxyXG5wLFxyXG5ibG9ja3F1b3RlLFxyXG5wcmUsXHJcbmEsXHJcbmFiYnIsXHJcbmFjcm9ueW0sXHJcbmFkZHJlc3MsXHJcbmJpZyxcclxuY2l0ZSxcclxuY29kZSxcclxuZGVsLFxyXG5kZm4sXHJcbmVtLFxyXG5pbWcsXHJcbmlucyxcclxua2JkLFxyXG5xLFxyXG5zLFxyXG5zYW1wLFxyXG5zbWFsbCxcclxuc3RyaWtlLFxyXG5zdHJvbmcsXHJcbnN1Yixcclxuc3VwLFxyXG50dCxcclxudmFyLFxyXG5iLFxyXG51LFxyXG5pLFxyXG5jZW50ZXIsXHJcbmRsLFxyXG5kdCxcclxuZGQsXHJcbm9sLFxyXG51bCxcclxubGksXHJcbmZpZWxkc2V0LFxyXG5mb3JtLFxyXG5sYWJlbCxcclxubGVnZW5kLFxyXG50YWJsZSxcclxuY2FwdGlvbixcclxudGJvZHksXHJcbnRmb290LFxyXG50aGVhZCxcclxudHIsXHJcbnRoLFxyXG50ZCxcclxuYXJ0aWNsZSxcclxuYXNpZGUsXHJcbmNhbnZhcyxcclxuZGV0YWlscyxcclxuZW1iZWQsXHJcbmZpZ3VyZSxcclxuZmlnY2FwdGlvbixcclxuZm9vdGVyLFxyXG5oZWFkZXIsXHJcbmhncm91cCxcclxubWVudSxcclxubmF2LFxyXG5vdXRwdXQsXHJcbnJ1YnksXHJcbnNlY3Rpb24sXHJcbnN1bW1hcnksXHJcbnRpbWUsXHJcbm1hcmssXHJcbmF1ZGlvLFxyXG52aWRlbyB7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgYm9yZGVyOiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgZm9udDogaW5oZXJpdDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xyXG5hcnRpY2xlLFxyXG5hc2lkZSxcclxuZGV0YWlscyxcclxuZmlnY2FwdGlvbixcclxuZmlndXJlLFxyXG5mb290ZXIsXHJcbmhlYWRlcixcclxuaGdyb3VwLFxyXG5tZW51LFxyXG5uYXYsXHJcbnNlY3Rpb24ge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gICAgbGluZS1oZWlnaHQ6IDE7XHJcbn1cclxuXHJcbm9sLFxyXG51bCB7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcblxyXG5ibG9ja3F1b3RlLFxyXG5xIHtcclxuICAgIHF1b3Rlczogbm9uZTtcclxufVxyXG5cclxuYmxvY2txdW90ZTpiZWZvcmUsXHJcbmJsb2NrcXVvdGU6YWZ0ZXIsXHJcbnE6YmVmb3JlLFxyXG5xOmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBjb250ZW50OiBub25lO1xyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgYm9yZGVyLXNwYWNpbmc6IDA7XHJcbn1cclxuIiwiQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ05vdG8gU2Fucyc7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgZm9udC1kaXNwbGF5OiBmYWxsYmFjaztcclxuICAgIHNyYzogbG9jYWwoJ05vdG8gU2FucycpLFxyXG4gICAgdXJsKCcvYXNzZXRzL2ZvbnRzL05vdG9TYW5zLTUwMC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSAvKiBDaHJvbWUgMjYrLCBPcGVyYSAyMyssIEZpcmVmb3ggMzkrICovXHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdOb3RvIFNhbnMnO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGZvbnQtZGlzcGxheTogZmFsbGJhY2s7XHJcbiAgICBzcmM6IGxvY2FsKCdOb3RvIFNhbnMnKSxcclxuICAgIHVybCgnL2Fzc2V0cy9mb250cy9Ob3RvU2Fucy03MDAud29mZjInKSBmb3JtYXQoJ3dvZmYyJykgLyogQ2hyb21lIDI2KywgT3BlcmEgMjMrLCBGaXJlZm94IDM5KyAqL1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnTm90byBTYW5zJztcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgICBmb250LWRpc3BsYXk6IGZhbGxiYWNrO1xyXG4gICAgc3JjOiBsb2NhbCgnTm90byBTYW5zJyksXHJcbiAgICB1cmwoJy9hc3NldHMvZm9udHMvTm90b1NhbnMtOTAwLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpIC8qIENocm9tZSAyNissIE9wZXJhIDIzKywgRmlyZWZveCAzOSsgKi9cclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ05vdG8gU2VyaWYnO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGZvbnQtZGlzcGxheTogZmFsbGJhY2s7XHJcbiAgICBzcmM6IGxvY2FsKCdOb3RvIFNlcmlmJyksXHJcbiAgICB1cmwoJy9hc3NldHMvZm9udHMvTm90b1NlcmlmLTUwMC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSAvKiBDaHJvbWUgMjYrLCBPcGVyYSAyMyssIEZpcmVmb3ggMzkrICovXHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdOb3RvIFNlcmlmJztcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICBmb250LWRpc3BsYXk6IGZhbGxiYWNrO1xyXG4gICAgc3JjOiBsb2NhbCgnTm90byBTZXJpZicpLFxyXG4gICAgdXJsKCcvYXNzZXRzL2ZvbnRzL05vdG9TZXJpZi01MDAtSXRhbGljLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpIC8qIENocm9tZSAyNissIE9wZXJhIDIzKywgRmlyZWZveCAzOSsgKi9cclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ05vdG8gU2VyaWYnO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGZvbnQtZGlzcGxheTogZmFsbGJhY2s7XHJcbiAgICBzcmM6IGxvY2FsKCdOb3RvIFNlcmlmJyksXHJcbiAgICB1cmwoJy9hc3NldHMvZm9udHMvTm90b1NlcmlmLTcwMC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSAvKiBDaHJvbWUgMjYrLCBPcGVyYSAyMyssIEZpcmVmb3ggMzkrICovXHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdOb3RvIFNlcmlmJztcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBmb250LWRpc3BsYXk6IGZhbGxiYWNrO1xyXG4gICAgc3JjOiBsb2NhbCgnTm90byBTZXJpZicpLFxyXG4gICAgdXJsKCcvYXNzZXRzL2ZvbnRzL05vdG9TZXJpZi03MDAtSXRhbGljLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpIC8qIENocm9tZSAyNissIE9wZXJhIDIzKywgRmlyZWZveCAzOSsgKi9cclxufVxyXG4iLCIvKipcclxuICogR0hDb2xvcnMgdGhlbWUgYnkgQXZpIEFyeWFuIChodHRwOi8vYXZpYXJ5YW4uaW4pXHJcbiAqIEluc3BpcmVkIGJ5IEdpdGh1YiBzeW50YXggY29sb3JpbmdcclxuICovXHJcblxyXG5jb2RlW2NsYXNzKj1cImxhbmd1YWdlLVwiXSxcclxucHJlW2NsYXNzKj1cImxhbmd1YWdlLVwiXSB7XHJcbiAgICBjb2xvcjogIzM5M0EzNDtcclxuICAgIGZvbnQtZmFtaWx5OiBcIkNvbnNvbGFzXCIsIFwiQml0c3RyZWFtIFZlcmEgU2FucyBNb25vXCIsIFwiQ291cmllciBOZXdcIiwgQ291cmllciwgbW9ub3NwYWNlO1xyXG4gICAgZGlyZWN0aW9uOiBsdHI7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgd2hpdGUtc3BhY2U6IHByZTtcclxuICAgIHdvcmQtc3BhY2luZzogbm9ybWFsO1xyXG4gICAgd29yZC1icmVhazogbm9ybWFsO1xyXG4gICAgZm9udC1zaXplOiAuOWVtO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMmVtO1xyXG5cclxuICAgIC1tb3otdGFiLXNpemU6IDQ7XHJcbiAgICAtby10YWItc2l6ZTogNDtcclxuICAgIHRhYi1zaXplOiA0O1xyXG5cclxuICAgIC13ZWJraXQtaHlwaGVuczogbm9uZTtcclxuICAgIC1tb3otaHlwaGVuczogbm9uZTtcclxuICAgIC1tcy1oeXBoZW5zOiBub25lO1xyXG4gICAgaHlwaGVuczogbm9uZTtcclxufVxyXG5cclxucHJlID4gY29kZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0ge1xyXG4gICAgZm9udC1zaXplOiAxZW07XHJcbn1cclxuXHJcbnByZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl06Oi1tb3otc2VsZWN0aW9uLCBwcmVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdIDo6LW1vei1zZWxlY3Rpb24sXHJcbmNvZGVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdOjotbW96LXNlbGVjdGlvbiwgY29kZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0gOjotbW96LXNlbGVjdGlvbiB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjYjNkNGZjO1xyXG59XHJcblxyXG5wcmVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdOjpzZWxlY3Rpb24sIHByZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0gOjpzZWxlY3Rpb24sXHJcbmNvZGVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdOjpzZWxlY3Rpb24sIGNvZGVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdIDo6c2VsZWN0aW9uIHtcclxuICAgIGJhY2tncm91bmQ6ICNiM2Q0ZmM7XHJcbn1cclxuXHJcbi8qIENvZGUgYmxvY2tzICovXHJcbnByZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0ge1xyXG4gICAgcGFkZGluZzogMWVtO1xyXG4gICAgbWFyZ2luOiAuNWVtIDA7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGRkZGQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLyogSW5saW5lIGNvZGUgKi9cclxuOm5vdChwcmUpID4gY29kZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0ge1xyXG4gICAgcGFkZGluZzogLjJlbTtcclxuICAgIHBhZGRpbmctdG9wOiAxcHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMXB4O1xyXG4gICAgYmFja2dyb3VuZDogI2Y4ZjhmODtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGRkZGQ7XHJcbn1cclxuXHJcbi50b2tlbi5jb21tZW50LFxyXG4udG9rZW4ucHJvbG9nLFxyXG4udG9rZW4uZG9jdHlwZSxcclxuLnRva2VuLmNkYXRhIHtcclxuICAgIGNvbG9yOiAjOTk5OTg4O1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG59XHJcblxyXG4udG9rZW4ubmFtZXNwYWNlIHtcclxuICAgIG9wYWNpdHk6IC43O1xyXG59XHJcblxyXG4udG9rZW4uc3RyaW5nLFxyXG4udG9rZW4uYXR0ci12YWx1ZSB7XHJcbiAgICBjb2xvcjogI2UzMTE2YztcclxufVxyXG5cclxuLnRva2VuLnB1bmN0dWF0aW9uLFxyXG4udG9rZW4ub3BlcmF0b3Ige1xyXG4gICAgY29sb3I6ICMzOTNBMzQ7IC8qIG5vIGhpZ2hsaWdodCAqL1xyXG59XHJcblxyXG4udG9rZW4uZW50aXR5LFxyXG4udG9rZW4udXJsLFxyXG4udG9rZW4uc3ltYm9sLFxyXG4udG9rZW4ubnVtYmVyLFxyXG4udG9rZW4uYm9vbGVhbixcclxuLnRva2VuLnZhcmlhYmxlLFxyXG4udG9rZW4uY29uc3RhbnQsXHJcbi50b2tlbi5wcm9wZXJ0eSxcclxuLnRva2VuLnJlZ2V4LFxyXG4udG9rZW4uaW5zZXJ0ZWQge1xyXG4gICAgY29sb3I6ICMzNmFjYWE7XHJcbn1cclxuXHJcbi50b2tlbi5hdHJ1bGUsXHJcbi50b2tlbi5rZXl3b3JkLFxyXG4udG9rZW4uYXR0ci1uYW1lLFxyXG4ubGFuZ3VhZ2UtYXV0b2hvdGtleSAudG9rZW4uc2VsZWN0b3Ige1xyXG4gICAgY29sb3I6ICMwMGE0ZGI7XHJcbn1cclxuXHJcbi50b2tlbi5mdW5jdGlvbixcclxuLnRva2VuLmRlbGV0ZWQsXHJcbi5sYW5ndWFnZS1hdXRvaG90a2V5IC50b2tlbi50YWcge1xyXG4gICAgY29sb3I6ICM5YTA1MGY7XHJcbn1cclxuXHJcbi50b2tlbi50YWcsXHJcbi50b2tlbi5zZWxlY3RvcixcclxuLmxhbmd1YWdlLWF1dG9ob3RrZXkgLnRva2VuLmtleXdvcmQge1xyXG4gICAgY29sb3I6ICMwMDAwOWY7XHJcbn1cclxuXHJcbi50b2tlbi5pbXBvcnRhbnQsXHJcbi50b2tlbi5mdW5jdGlvbixcclxuLnRva2VuLmJvbGQge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi50b2tlbi5pdGFsaWMge1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG59XHJcbiIsIjpyb290IHtcclxuICAvLyBDb2xvcnNcclxuICAtLWNvbG9yX19iYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19hbHQ6ICN7JGNvbG9yX185Ny1icmlnaHRuZXNzfTtcclxuICAtLWNvbG9yX19iYWNrZ3JvdW5kX193aWRnZXQ6ICN7JGNvbG9yX185NS1icmlnaHRuZXNzfTtcclxuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdDogI3skY29sb3JfXzE1LWJyaWdodG5lc3N9O1xyXG4gIC0tY29sb3JfX2JhY2tncm91bmRfX2NvbnRyYXN0X193aWRnZXQ6ICN7JGNvbG9yX184LWJyaWdodG5lc3N9O1xyXG4gIC0tY29sb3JfX2JhY2tncm91bmRfX2NvbnRyYXN0X19hbHQ6ICN7JGNvbG9yX18yLWJyaWdodG5lc3N9O1xyXG4gIC0tY29sb3JfX2JhY2tncm91bmRfX2dyYWRpZW50OiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLHJnYmEoMCwwLDAsMCkgMCx3aGl0ZSAxMDAlKTtcclxuICAtLWNvbG9yX19vdmVybGF5OiByZ2JhKDAsMCwwLC41KTtcclxuICAtLWNvbG9yX19saW5rOiAjeyRjb2xvcl9fYmx1ZX07XHJcbiAgLS1jb2xvcl9fbGlua19fdmlzaXRlZDogI3skY29sb3JfX3B1cnBsZX07XHJcbiAgLS1jb2xvcl9fdGV4dDogYmxhY2s7XHJcbiAgLS1jb2xvcl9fdGV4dC1hbHQ6ICN7JGNvbG9yX18yNS1icmlnaHRuZXNzfTtcclxuICAtLWNvbG9yX190ZXh0X19jb250cmFzdDogd2hpdGU7XHJcbiAgLS1jb2xvcl9fdGV4dF9fY29udHJhc3RfX2FsdDogIzY2NjY2NjtcclxuXHJcblxyXG4gIC8vIEZvbnQgc2l6aW5nXHJcbiAgLS1mb250X19keW5hbWljLXNjYWxpbmc6ICN7JGZvbnRfX2R5bmFtaWMtc2NhbGluZ307XHJcbiAgLS1mb250X19yYXRpbzogI3skZm9udF9fcmF0aW99O1xyXG4gIC0tZm9udF9fZHluYW1pYy1yYXRpbzogI3skZm9udF9fZHluYW1pYy1yYXRpb307XHJcblxyXG4gIC0tZm9udF9fc2l6ZTogI3skZm9udF9fc2l6ZX07XHJcbiAgLS1mb250X19zaXplLWJhc2U6ICN7JGZvbnRfX3NpemVfX2Jhc2V9O1xyXG4gIC0tZm9udF9fc2l6ZV9faGVhZGluZy00OiBjYWxjKCAodmFyKC0tZm9udF9fc2l6ZS1iYXNlKSAqIHZhcigtLWZvbnRfX3JhdGlvKSkgKyAodmFyKC0tZm9udF9fZHluYW1pYy1zY2FsaW5nKSAqIHZhcigtLWZvbnRfX2R5bmFtaWMtcmF0aW8pKSk7XHJcbiAgLS1mb250X19zaXplX19oZWFkaW5nLTM6IGNhbGMoICh2YXIoLS1mb250X19zaXplLWJhc2UpICogdmFyKC0tZm9udF9fcmF0aW8pICogdmFyKC0tZm9udF9fcmF0aW8pKSArICh2YXIoLS1mb250X19keW5hbWljLXNjYWxpbmcpICogdmFyKC0tZm9udF9fZHluYW1pYy1yYXRpbykgKiB2YXIoLS1mb250X19keW5hbWljLXJhdGlvKSkpO1xyXG4gIC0tZm9udF9fc2l6ZV9faGVhZGluZy0yOiBjYWxjKCAodmFyKC0tZm9udF9fc2l6ZS1iYXNlKSAqIHZhcigtLWZvbnRfX3JhdGlvKSAqIHZhcigtLWZvbnRfX3JhdGlvKSAqIHZhcigtLWZvbnRfX3JhdGlvKSkgKyAodmFyKC0tZm9udF9fZHluYW1pYy1zY2FsaW5nKSAqIHZhcigtLWZvbnRfX2R5bmFtaWMtcmF0aW8pICogdmFyKC0tZm9udF9fZHluYW1pYy1yYXRpbykgKiB2YXIoLS1mb250X19keW5hbWljLXJhdGlvKSkpO1xyXG4gIC0tZm9udF9fc2l6ZV9faGVhZGluZy0xOiBjYWxjKCAodmFyKC0tZm9udF9fc2l6ZS1iYXNlKSAqIHZhcigtLWZvbnRfX3JhdGlvKSAqIHZhcigtLWZvbnRfX3JhdGlvKSAqIHZhcigtLWZvbnRfX3JhdGlvKSAqIHZhcigtLWZvbnRfX3JhdGlvKSkgKyAodmFyKC0tZm9udF9fZHluYW1pYy1zY2FsaW5nKSAqIHZhcigtLWZvbnRfX2R5bmFtaWMtcmF0aW8pICogdmFyKC0tZm9udF9fZHluYW1pYy1yYXRpbykgKiB2YXIoLS1mb250X19keW5hbWljLXJhdGlvKSAqIHZhcigtLWZvbnRfX2R5bmFtaWMtcmF0aW8pKSk7XHJcblxyXG4gIC8vIEZvbnQgZmFtaWx5XHJcbiAgLS1mb250X19zYW5zLXNlcmlmOiAjeyRmb250X19zYW5zLXNlcmlmfTtcclxuICAtLWZvbnRfX3NlcmlmOiAjeyRmb250X19zZXJpZn07XHJcbiAgLS1mb250X19tb25vOiAjeyRmb250X19tb25vc3BhY2V9O1xyXG5cclxuICAvLyBTaXppbmdcclxuICAtLW1heC13aWR0aF9fYmFzZTogI3skbWF4LXdpZHRoX19iYXNlfTtcclxuICAtLW1heC13aWR0aF9fY29udGVudDogI3skbWF4LXdpZHRoX19jb250ZW50fTtcclxuXHJcbiAgLS1tYXJnaW5fX3Rpbnk6ICN7JG1hcmdpbl9fdGlueX07XHJcbiAgLS1tYXJnaW5fX3NtYWxsOiAjeyRtYXJnaW5fX3NtYWxsfTtcclxuICAtLW1hcmdpbl9fbWVkaXVtOiAjeyRtYXJnaW5fX21lZGl1bX07XHJcbiAgLS1tYXJnaW5fX2xhcmdlOiAjeyRtYXJnaW5fX2xhcmdlfTtcclxuICAtLXBhZGRpbmdfX3NtYWxsOiAjeyRwYWRkaW5nX19zbWFsbH07XHJcbiAgLS1wYWRkaW5nX19tZWRpdW06ICN7JHBhZGRpbmdfX21lZGl1bX07XHJcbiAgLS1wYWRkaW5nX19sYXJnZTogI3skcGFkZGluZ19fbGFyZ2V9O1xyXG5cclxuICAtLWhlYWRlcl9faGVpZ2h0OiAjeyRoZWFkZXJfX2hlaWdodH07XHJcbiAgLS1oZWFkZXJfX2ZvbnQtc2NhbGU6ICN7JGhlYWRlcl9fZm9udC1zY2FsZX07XHJcbn1cclxuXHJcblxyXG4iLCJodG1sIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgZm9udC1zaXplOiA2Mi41JSAvLyBTZXQgMSByZW0gPSAxMCBweCBhcyBkZWZhdWx0XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXg6IDE7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgbWluLWhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kKTtcclxuICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XHJcbiAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUpO1xyXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NhbnMtc2VyaWYpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjg7XHJcblxyXG4gICAgbWFpbiB7XHJcbiAgICAgICAgZmxleDogMTtcclxuICAgIH1cclxufVxyXG5cclxuKiB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5cclxucCxcclxudWwsXHJcbm9sLFxyXG5ibG9ja3F1b3RlLFxyXG5icixcclxuYnV0dG9uLFxyXG5jYW52YXMsXHJcbmNhcHRpb24sXHJcbmNvbCxcclxuY29sZ3JvdXAsXHJcbmRkLFxyXG5kbCxcclxuZHQsXHJcbmVtYmVkLFxyXG5maWVsZHNldCxcclxuZmlnY2FwdGlvbixcclxuZmlndXJlLFxyXG5pbWcsXHJcbmZvcm0sXHJcbmgxLFxyXG5oMixcclxuaDMsXHJcbmg0LFxyXG5oNSxcclxuaDYge1xyXG4gICAgbWFyZ2luLXRvcDogMWVtO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLjVlbTtcclxufVxyXG5cclxuXHJcbiIsImNvZGUge1xyXG4gICAgcGFkZGluZzogLjJlbSAuNGVtO1xyXG4gICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX3dpZGdldCk7XHJcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xyXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX21vbm8pO1xyXG4gICAgZm9udC1zaXplOiA5MCU7XHJcbn1cclxuIiwiZmlndXJlIHtcclxuICAgIGZpZ2NhcHRpb24ge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NlcmlmKTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhtZWRpdW0pIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xyXG4gICAgfVxyXG5cclxuICAgICYuLWZ1bGwge1xyXG4gICAgICAgID4gcGljdHVyZSBpbWcsID4gaW1nLCBpZnJhbWUsID4gZGl2IHtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwdnc7IC8qIE9yIHdoYXRldmVyIG1heCB3aWR0aCBpcyAqL1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogY2FsYyg1MCUgLSA1MHZ3KTsgLyogNTB2dyBlcXVhbHMgaGFsZiB0aGUgd2lkdGggKi9cclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiBjYWxjKDUwJSAtIDUwdncpO1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYuLXBpeGVscyB7XHJcbiAgICAgICAgaW1hZ2UtcmVuZGVyaW5nOiBjcmlzcC1lZGdlcztcclxuICAgIH1cclxuXHJcbiAgICAmLi13aWRlIHtcclxuICAgICAgICAtLWNhcmRfX2V4dHJhLXdpZHRoOiAwcmVtO1xyXG4gICAgICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8obWVkaXVtKSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgQGluY2x1ZGUgcmVzcG9uZC10byhsYXJnZSkge1xyXG4gICAgICAgICAgICAtLWNhcmRfX2V4dHJhLXdpZHRoOiAxMHJlbTtcclxuXHJcbiAgICAgICAgICAgID4gcGljdHVyZSBpbWcsID4gaW1nLCBpZnJhbWUsID4gZGl2LCA+IGZpZ3VyZS5nYWxsZXJ5LXJvdyB7XHJcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogY2FsYyh2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpICsgdmFyKC0tY2FyZF9fZXh0cmEtd2lkdGgpKTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiBjYWxjKDUwJSAtICgodmFyKC0tbWF4LXdpZHRoX19jb250ZW50KSArIHZhcigtLWNhcmRfX2V4dHJhLXdpZHRoKSkgLyAyKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8oaHVnZSkge1xyXG4gICAgICAgICAgICAtLWNhcmRfX2V4dHJhLXdpZHRoOiAzNXJlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi5lbWJlZCB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaWZyYW1lIHtcclxuICAgICAgICAgICAgYXNwZWN0LXJhdGlvOiAxNi85O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgIG1pbi13aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi5tYXAge1xyXG4gICAgICAgIGlmcmFtZSB7XHJcbiAgICAgICAgICAgIGhlaWdodDogNTB2aDtcclxuICAgICAgICAgICAgbWluLXdpZHRoOiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuaW5zdGFncmFtLW1lZGlhIHtcclxuICAgICAgICBtYXJnaW46IDAgYXV0byAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG59XHJcbiIsIi8vLyBSZXNwb25zaXZlIG1hbmFnZXIuXHJcbi8vLyBAYWNjZXNzIHB1YmxpY1xyXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRicmVha3BvaW50IC0gQnJlYWtwb2ludFxyXG4vLy8gQHJlcXVpcmVzICRicmVha3BvaW50c1xyXG5AbWl4aW4gcmVzcG9uZC10bygkYnJlYWtwb2ludCkge1xyXG4gICAgQGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJGJyZWFrcG9pbnQpIHtcclxuICAgICAgICBAbWVkaWEgI3tpbnNwZWN0KG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludCkpfSB7XHJcbiAgICAgICAgICAgIEBjb250ZW50O1xyXG4gICAgICAgIH1cclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICAgIEBlcnJvciAnTm8gdmFsdWUgZm91bmQgZm9yIGAjeyRicmVha3BvaW50fWAuICdcclxuICAgICAgICAgICAgICsgJ1BsZWFzZSBtYWtlIHN1cmUgaXQgaXMgZGVmaW5lZCBpbiBgJGJyZWFrcG9pbnRzYCBtYXAuJztcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIGNhbGMoJHByb3BlcnR5LCAkZXhwcmVzc2lvbil7XHJcbiAgICAjeyRwcm9wZXJ0eX06IGNhbGMoI3skZXhwcmVzc2lvbn0pO1xyXG59IiwiaDEsXHJcbmgyLFxyXG5oMyxcclxuaDQsXHJcbmg1LFxyXG5oNiB7XHJcbiAgICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2Fucy1zZXJpZik7XHJcbiAgICBsaW5lLWhlaWdodDogMS4yNTtcclxuICAgIGEge1xyXG4gICAgICAgIGJvcmRlcjogMDtcclxuICAgIH1cclxufVxyXG5cclxuaDEge1xyXG4gICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTEpO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IC0uMnJlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbn1cclxuXHJcbmgyIHtcclxuICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy0yKTtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbn1cclxuXHJcbmgzIHtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctMyk7XHJcbn1cclxuXHJcbmg0IHtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XHJcbn1cclxuXHJcbmg1IHtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbn1cclxuXHJcbmg2IHtcclxuICAgIGZvbnQtc2l6ZTogODAlO1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbn1cclxuIiwiaW1nIHtcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogYXV0bzsgLy8gS2VlcCBhc3BlY3QgcmF0aW8gY29ycmVjdCBmb3IgaW1hZ2VzXHJcbn1cclxuXHJcbnN2ZyB7XHJcbiAgICBmaWxsOiBjdXJyZW50Q29sb3I7XHJcbn1cclxuIiwiYSB7XHJcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX2xpbmspO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIC4ycztcclxuICAgICY6aG92ZXIsXHJcbiAgICAmOmZvY3VzIHtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgIH1cclxuXHJcbiAgICAmOnZpc2l0ZWQge1xyXG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCk7XHJcbiAgICB9XHJcbn1cclxuIiwidWwge1xyXG4gICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDEuNWVtO1xyXG4gICAgbGlzdC1zdHlsZTogZGlzYztcclxuICAgIHVsIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDFlbTtcclxuICAgIH1cclxufVxyXG5cclxub2wge1xyXG4gICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDEuNWVtO1xyXG4gICAgbGlzdC1zdHlsZTogZGVjaW1hbDtcclxuICAgIG9sIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDFlbTtcclxuICAgIH1cclxuXHJcbiAgICBsaSB7XHJcbiAgICAgICAgJjpsYXN0LW9mLXR5cGUge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLmNvbnRhaW5zLXRhc2stbGlzdCB7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcblxyXG4ubm8tc3R5bGUge1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwO1xyXG59XHJcblxyXG4udGFzay1saXN0LWl0ZW0tY2hlY2tib3gge1xyXG4gICAgbWFyZ2luLWxlZnQ6IC0xLjZlbTsgLy8gTW92ZSB0aGUgY2hlY2tib3ggdG8gdGhlIGxlZnQgdG8gbWF0Y2ggb3RoZXIgbGlzdHMgaW5kZW50YXRpb24uXHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuIiwiW2lkXSB7XHJcbiAgICBzY3JvbGwtbWFyZ2luLXRvcDogMWV4O1xyXG59XHJcbiIsInNlbGVjdCB7XHJcbiAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUpO1xyXG4gICAgcGFkZGluZzogLjRyZW0gLjRyZW07XHJcbiAgICBsaW5lLWhlaWdodDogMjtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kX193aWRnZXQpO1xyXG4gICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmQpO1xyXG4gICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2Fucy1zZXJpZik7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbn1cclxuIiwiZW0ge1xyXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NlcmlmKTtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufVxyXG5cclxuLm5vdGUge1xyXG4gICAgcGFkZGluZzogdmFyKC0tbWFyZ2luX19zbWFsbCk7XHJcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0KTtcclxufVxyXG5cclxuLmxlYWQge1xyXG4gICAgZm9udC1zaXplOiAxMTUlO1xyXG59XHJcblxyXG5zdXAge1xyXG4gICAgZm9udC1zaXplOiA4NSU7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogc3VwZXI7XHJcbn1cclxuXHJcbmJsb2NrcXVvdGUge1xyXG4gICAgcGFkZGluZy1sZWZ0OiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XHJcbiAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkIHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kX19hbHQpO1xyXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NlcmlmKTtcclxuICAgIGltZyB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgbWFyZ2luOiAkbWFyZ2luX19tZWRpdW0gMDtcclxuICAgIH1cclxuXHJcbiAgICA+IDpmaXJzdC1jaGlsZCB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgIH1cclxuICAgID4gOmxhc3QtY2hpbGQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcbn1cclxuXHJcbnEge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2VyaWYpO1xyXG4gICAgZm9udC1zaXplOiAxMjUlO1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8oc21hbGwpIHtcclxuICAgICAgICB3aWR0aDogY2FsYygxMDAlICsgdmFyKC0tbWFyZ2luX19sYXJnZSkpO1xyXG4gICAgICAgIG1heC13aWR0aDogY2FsYygxMDAlICsgdmFyKC0tbWFyZ2luX19sYXJnZSkpO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbGFyZ2UpO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcclxuICAgICAgICBtYXJnaW4tbGVmdDogY2FsYygwJSAtIHZhcigtLW1hcmdpbl9fbWVkaXVtKSk7XHJcbiAgICB9XHJcbiAgICAmOmJlZm9yZSxcclxuICAgICY6YWZ0ZXIge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbn1cclxuXHJcbmNpdGUge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2VyaWYpO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgYSB7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIGNvbG9yOiBpbmhlcml0O1xyXG4gICAgfVxyXG4gICAgJjpiZWZvcmUge1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXFwyMDE0IFxcMjAwOVwiO1xyXG4gICAgfVxyXG59XHJcblxyXG5zdHJvbmcge1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxufVxyXG5cclxuaHIge1xyXG4gICAgaGVpZ2h0OiAuNHJlbTtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIG1hcmdpbjogdmFyKC0tbWFyZ2luX19tZWRpdW0pIDAgMDtcclxuICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kX19hbHQpO1xyXG59XHJcblxyXG5hYmJyIHtcclxuICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDFweDtcclxuICAgIGJvcmRlci1ib3R0b20tc3R5bGU6IGRvdHRlZDtcclxuICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcclxuICAgIGZvbnQtdmFyaWFudDogYWxsLXNtYWxsLWNhcHM7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbi5jZW50ZXIge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5rYmQge1xyXG4gICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX2FsdCk7XHJcbiAgICBwYWRkaW5nOiAuMmVtIC40ZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAuM2VtO1xyXG59XHJcbiIsIi5CcmVhZGNydW1icyBhIHtcclxuICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xyXG59XHJcblxyXG4uQnJlYWRjcnVtYnMgYTpob3ZlcixcclxuLkJyZWFkY3J1bWJzIGE6Zm9jdXMge1xyXG4gICAgY29sb3I6IHZhcigtLWNvbG9yX19saW5rKTtcclxufVxyXG5cclxuLkJyZWFkY3J1bWJzIG9sIHtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIGZvbnQtc2l6ZTogODAlO1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxufVxyXG5cclxuLkJyZWFkY3J1bWJzIG9sIGxpIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG5cclxuLkJyZWFkY3J1bWJzIG9sIGxpOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5CcmVhZGNydW1icyBvbCBsaTphZnRlciB7XHJcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcclxuICAgIGNvbnRlbnQ6IFwiL1wiO1xyXG59XHJcblxyXG4uQnJlYWRjcnVtYnMgb2wgbGk6bGFzdC1jaGlsZDphZnRlciB7XHJcbiAgICBjb250ZW50OiBub25lO1xyXG59XHJcbiIsIi5CdXR0b24ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2xpbmspO1xyXG4gICAgY29sb3I6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kKTtcclxuICAgIHBhZGRpbmc6IC41ZW0gMC44ZW07XHJcbiAgICBsaW5lLWhlaWdodDogMS41O1xyXG4gICAgYm9yZGVyOiAwO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XHJcbiAgICBmb250LXdlaWdodDogaW5oZXJpdDtcclxuICAgIG1hcmdpbjogMDtcclxuXHJcbiAgICAmOnZpc2l0ZWQge1xyXG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XHJcbiAgICB9XHJcblxyXG4gICAgJjpob3ZlciwgJjpmb2N1cyB7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICB9XHJcbn1cclxuIiwiLkNhcmRzIHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XHJcbiAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XHJcbiAgICBncmlkLWF1dG8tZmxvdzogZGVuc2U7XHJcbiAgICBncmlkLWdhcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcblxyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhzbWFsbCkge1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuICAgIH1cclxuXHJcbiAgICBAaW5jbHVkZSByZXNwb25kLXRvKG1lZGl1bSkge1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnI7XHJcbiAgICB9XHJcblxyXG4gICAgJi4tbWF4LTItY29sdW1ucyB7XHJcbiAgICAgICAgQGluY2x1ZGUgcmVzcG9uZC10byhtZWRpdW0pIHtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLkNhcmQge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBtaW4taGVpZ2h0OiAyNXZoO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIHBhZGRpbmc6IGNhbGModmFyKC0tcGFkZGluZ19fc21hbGwpICogMS41KTtcclxuICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdF9fd2lkZ2V0KTtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHRfX2NvbnRyYXN0KTtcclxuXHJcbiAgICAmLi1hbGlnbi1ib3R0b20ge1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDhyZW07XHJcbiAgICB9XHJcblxyXG4gICAgJi4tYWxpZ24tdG9wIHtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICB9XHJcblxyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhtZWRpdW0pIHtcclxuICAgICAgICAmLnBvc3Q6Zmlyc3Qtb2YtdHlwZSB7XHJcbiAgICAgICAgICAgIGFzcGVjdC1yYXRpbzogMjEvOTtcclxuICAgICAgICAgICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IHNwYW4gMztcclxuXHJcbiAgICAgICAgICAgIC5DYXJkX190aXRsZSB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDNyZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi4tZmVhdHVyZWQtaW1hZ2U6YWZ0ZXIge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fb3ZlcmxheSk7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgIH1cclxufVxyXG5cclxuLkNhcmRfX2NvbnRlbnQge1xyXG4gICAgei1pbmRleDogMTA7XHJcbiAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XHJcblxyXG4gICAgPiAqIHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICB9XHJcblxyXG4gICAgdWwsXHJcbiAgICBvbCB7XHJcbiAgICAgICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDIuNXJlbTtcclxuICAgIH1cclxuICAgIGEge1xyXG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xyXG4gICAgfVxyXG5cclxuICAgIG9sLm1ldGFkYXRhLWxpc3Qge1xyXG4gICAgICAgIG1hcmdpbi1ibG9jay1zdGFydDogMWVtO1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgLm1ldGFkYXRhLWxpc3RfX2l0ZW0ge1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19zbWFsbCk7XHJcblxyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuXHJcbiAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICBjb250ZW50OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLm1ldGFkYXRhLXRpdGxlIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLm1ldGFkYXRhLWNvbnRlbnQge1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgICAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLm1ldGFkYXRhLWxpc3RfX2l0ZW0tdGl0bGUge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0X19jb250cmFzdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5tZXRhZGF0YS12YWx1ZXMge1xyXG4gICAgICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHRfX2NvbnRyYXN0X19hbHQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLkNhcmRfX2ltYWdlIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHotaW5kZXg6IDE7XHJcblxyXG4gICAgaW1nIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICAgICAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5DYXJkX19jb250ZW50X19leHRyYSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB6LWluZGV4OiAxMDtcclxuICAgIGZvbnQtc2l6ZTogOTAlO1xyXG4gICAgbGluZS1oZWlnaHQ6IDE7XHJcblxyXG4gICAgJi4tdG9wLWxlZnQge1xyXG4gICAgICAgIGxlZnQ6IGNhbGModmFyKC0tcGFkZGluZ19fc21hbGwpICogMS41KTtcclxuICAgICAgICB0b3A6IGNhbGModmFyKC0tcGFkZGluZ19fc21hbGwpICogMS41KTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDhyZW07XHJcbiAgICB9XHJcblxyXG4gICAgJi4tdG9wLXJpZ2h0IHtcclxuICAgICAgICByaWdodDogY2FsYyh2YXIoLS1wYWRkaW5nX19zbWFsbCkgKiAxLjUpO1xyXG4gICAgICAgIHRvcDogY2FsYyh2YXIoLS1wYWRkaW5nX19zbWFsbCkgKiAxLjUpO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiA4cmVtO1xyXG4gICAgfVxyXG5cclxuICAgICYuLXN5bWJvbCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyLjVyZW07XHJcbiAgICB9XHJcblxyXG4gICAgPiA6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICBtYXJnaW4tbGVmdDogLjVlbTtcclxuICAgIH1cclxuXHJcbiAgICAudGFncyB7XHJcbiAgICAgICAgLnRhZyB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0X19jb250cmFzdCk7XHJcbiAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IC40ZW07XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC40ZW07XHJcblxyXG4gICAgICAgICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIiNcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAud2VibWVudGlvbnNfX2NvdW50IHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IC41ZW07XHJcbiAgICB9XHJcbn1cclxuXHJcbi5DYXJkX19wb3N0LWxpc3Qge1xyXG4gICAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XHJcbiAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcclxuICAgIGxpc3Qtc3R5bGU6IGRlY2ltYWwtbGVhZGluZy16ZXJvO1xyXG59XHJcblxyXG4uQ2FyZF9fdGl0bGUge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0X19jb250cmFzdCk7XHJcbiAgICBmb250LXNpemU6IDIuNXJlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgICBhIHtcclxuICAgICAgICBjb2xvcjogaW5oZXJpdDtcclxuXHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5cclxuLkNhcmRfX3RpdGxlLWxpbms6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcbiIsIi5Db21tZW50cyB7XHJcbn1cclxuXHJcbi5Db21tZW50c19fbGlzdCB7XHJcbiAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XHJcbn1cclxuXHJcbi5Db21tZW50c19fdGl0bGUge1xyXG59XHJcblxyXG4uQ29tbWVudHNfcmVmZXJlbmNlIHtcclxuICAgIGZvbnQtc2l6ZTogY2FsYyh2YXIoLS1mb250X19zaXplKSAqIC44NSk7XHJcbn1cclxuXHJcbi5Db21tZW50c19fcGFuZWwge1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuXHJcbiAgICAuQ29tbWVudHNfX2xpa2VzLFxyXG4gICAgLkNvbW1lbnRzX19yZXBvc3RzLFxyXG4gICAgLkNvbW1lbnRzX19jb21tZW50cyB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAuNWVtO1xyXG4gICAgfVxyXG5cclxuICAgIC5Db21tZW50c19fc3RhdHVzIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX2FsdCk7XHJcbiAgICAgICAgcGFkZGluZzogdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcclxuICAgIH1cclxuXHJcbiAgICBzdmcge1xyXG4gICAgICAgIGhlaWdodDogMS4yZW07XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHN1YjtcclxuICAgIH1cclxufVxyXG5cclxuLkNvbW1lbnRzX19tZXRhZGF0YSB7XHJcbiAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XHJcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XHJcblxyXG4gICAgc3Bhbi5Db21tZW50c19fYXV0aG9yIHtcclxuICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xyXG4gICAgfVxyXG59XHJcblxyXG4uQ29tbWVudHNfX2F1dGhvciB7XHJcblxyXG4gICAgLkNvbW1lbnRzX19hdmF0YXIge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDEuMnJlbTtcclxuICAgICAgICBsZWZ0OiAxcmVtO1xyXG4gICAgICAgIHdpZHRoOiA0LjVyZW07XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAuNWVtO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgfVxyXG59XHJcblxyXG4uQ29tbWVudHNfX2xpc3QtaXRlbSB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIHBhZGRpbmc6IDFyZW0gMXJlbSAxcmVtIDdyZW07XHJcbiAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XHJcblxyXG4gICAgJjpiZWZvcmUge1xyXG4gICAgICAgIGNvbnRlbnQ6IG5vbmUgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICAmLi1pcy1tZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX2FsdCk7XHJcbiAgICB9XHJcblxyXG4gICAgJi4tcmVwb3N0LW9mIHtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDRyZW07XHJcblxyXG4gICAgICAgIC5Db21tZW50c19fYXV0aG9yIHtcclxuXHJcbiAgICAgICAgICAgIC5Db21tZW50c19fYXZhdGFyIHtcclxuICAgICAgICAgICAgICAgIHRvcDogLjhyZW07XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiAuNXJlbTtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAyLjVyZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX3dpZGdldCk7XHJcbiAgICB9XHJcblxyXG4gICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgfVxyXG5cclxuICAgIHAge1xyXG4gICAgICAgIG1hcmdpbjogLjNlbSAwIDAgMDtcclxuICAgIH1cclxufVxyXG4iLCIuRm9ybSB7XHJcbiAgICBtYXJnaW4tdG9wOiAyZW07XHJcbiAgICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2Fucy1zZXJpZik7XHJcbiAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUpO1xyXG4gICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcclxuXHJcbiAgICAmLi1pbmFjdGl2ZSB7XHJcbiAgICAgICAgbGFiZWwge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC4tY29sbGFwc2VkIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgICAgIH1cclxuICAgICAgICB0ZXh0YXJlYSB7XHJcbiAgICAgICAgICAgIHJlc2l6ZTogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAwICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIGhlaWdodDogMi43ZW07XHJcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9fZ3JvdXAge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBtYXJnaW46IDAgMCAxZW0gMDtcclxuICAgICAgICBpbnB1dCwgdGV4dGFyZWEge1xyXG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0KTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmQpO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwLjVlbTtcclxuICAgICAgICAgICAgY29sb3I6IGluaGVyaXQ7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IGluaGVyaXQ7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG5cclxuICAgICAgICAgICAgJjpmb2N1cyB7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcclxuICAgICAgICAgICAgICAgICsgbGFiZWwge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRleHRhcmVhIHtcclxuICAgICAgICAgICAgcmVzaXplOiB2ZXJ0aWNhbDtcclxuICAgICAgICAgICAgbWluLWhlaWdodDogMTVyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsYWJlbCB7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgbGVmdDogNHB4O1xyXG4gICAgICAgICAgICB0b3A6IC03cHg7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmQpO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwIDAuNWVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCIucG9zdC1oZWFkZXIgLnBvc3QtdGl0bGUge1xyXG4gICAgLmJlZXItbGFiZWwge1xyXG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICB3aWR0aDogNDByZW07XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcclxuICAgIH1cclxuXHJcblxyXG59XHJcbi5iZWVyLXRpdGxlIHtcclxuICAgIGEge1xyXG4gICAgICAgIC5iZWVyLWxhYmVsIHtcclxuICAgICAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJjpob3ZlciwgJjp2aXNpdGVkIHtcclxuICAgICAgICAgICAgLmJlZXItbGFiZWwge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCIuYmVlci1zdGF0aXN0aWNzIHtcclxuICAgICZfX2xpc3Qge1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBncmlkLWF1dG8tZmxvdzogZGVuc2U7XHJcbiAgICAgICAgZ3JpZC1nYXA6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuICAgICAgICBtYXgtd2lkdGg6IDMwZW07XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8odGlueSkge1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19saXN0LWl0ZW0ge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG5cclxuICAgICAgICAmX19sYWJlbCB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZS1iYXNlKTtcclxuICAgICAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICZfX3ZhbHVlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLmJlZXItaW5ncmVkaWVudHMge1xyXG4gICAgJl9fbGFiZWwge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIG1hcmdpbi1ibG9jay1zdGFydDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xyXG4gICAgICAgIG1hcmdpbi1ibG9jay1lbmQ6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xyXG4gICAgICAgIC5pY29uIHtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0wLjJlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fbGlzdCB7XHJcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICBtYXgtd2lkdGg6IDI1ZW07XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcblxyXG4gICAgICAgICYtaXRlbSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMy44ZW0gMWZyIGF1dG87XHJcbiAgICAgICAgICAgIGdyaWQtZ2FwOiAwIDAuNXJlbTtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWFyZWFzOlxyXG4gICAgICAgICAgICAgICAgXCJsZWZ0IG1pZGRsZSByaWdodFwiXHJcbiAgICAgICAgICAgICAgICBcImxlZnQgYm90dG9tIGJvdHRvbS1yaWdodFwiO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcclxuXHJcblxyXG5cclxuICAgICAgICAgICAgJl9fbGVmdCB7XHJcbiAgICAgICAgICAgICAgICBncmlkLWFyZWE6IGxlZnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJl9fbWlkZGxlIHtcclxuICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogbWlkZGxlO1xyXG5cclxuICAgICAgICAgICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgICAgICAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJl9fcmlnaHQge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiByaWdodDtcclxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICZfX2JvdHRvbS1sZWZ0IHtcclxuICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogYm90dG9tLWxlZnQ7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJl9fYm90dG9tIHtcclxuICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogYm90dG9tO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplLWJhc2UpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICZfX2JvdHRvbS1yaWdodCB7XHJcbiAgICAgICAgICAgICAgICBncmlkLWFyZWE6IGJvdHRvbS1yaWdodDtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZS1iYXNlKTtcclxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uaWNvbiB7XHJcbiAgICAmLmZlcm1lbnRhYmxlIHtcclxuXHJcbiAgICB9XHJcbn1cclxuXHJcbi5iYXRjaGVzIHtcclxuICAgICZfX3N0YXR1cyB7XHJcbiAgICAgICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplKTtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0KTtcclxuICAgICAgICBib3R0b206IDAuMWVtO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBwYWRkaW5nOiAwLjNlbTtcclxuICAgIH1cclxuXHJcbn1cclxuIiwiLmJlZXJzIHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XHJcbiAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XHJcbiAgICBncmlkLWF1dG8tZmxvdzogZGVuc2U7XHJcbiAgICBncmlkLWdhcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcblxyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhzbWFsbCkge1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuICAgIH1cclxufVxyXG5cclxuLmJlZXIge1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgcGFkZGluZzogdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcclxuXHJcbiAgICBhIHtcclxuICAgICAgICAmOmhvdmVyLCAmOmZvY3VzIHtcclxuICAgICAgICAgICAgLmJlZXItbGFiZWwge1xyXG4gICAgICAgICAgICAgICAgZmlsdGVyOiBkcm9wLXNoYWRvdygwIDAgMXJlbSB2YXIoLS1jb2xvcl9fbGluaykpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAuYmVlci10aXRsZSB7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgfVxyXG5cclxuICAgIC5iZWVyLWxhYmVsIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB0cmFuc2l0aW9uOiAuMjVzIGFsbCBlYXNlO1xyXG4gICAgfVxyXG59XHJcbiIsIi5jb2x1bW5zIHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuICAgIGdyaWQtZ2FwOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XHJcblxyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhzbWFsbCkge1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsbWlubWF4KDAsMWZyKSk7XHJcbiAgICB9XHJcbn1cclxuIiwiLmNvbnRlbnQge1xyXG4gICAgcHJlIHtcclxuICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHBhZGRpbmc6IHZhcigtLXBhZGRpbmdfX3NtYWxsKTtcclxuICAgICAgICBib3JkZXI6IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX2FsdCk7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEyNSU7XHJcbiAgICAgICAgb3ZlcmZsb3cteTogaGlkZGVuO1xyXG4gICAgICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICAgICAgICBtYXJnaW46IHtcclxuICAgICAgICAgICAgdG9wOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvZGUge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcclxuICAgICAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAkZm9udF9fc2l6ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwiLmhlYWRlci1hbmNob3Ige1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcclxuXHJcbiAgICAmOnZpc2l0ZWQge1xyXG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XHJcbiAgICB9XHJcblxyXG4gICAgJjpiZWZvcmUge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBsZWZ0OiAtLjhlbTtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiI1wiO1xyXG4gICAgfVxyXG5cclxuICAgICY6Zm9jdXMsXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX2xpbmspO1xyXG5cclxuICAgICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCJvbC5hY3Rpdml0eS1saXN0IHtcclxuICAgIG1hcmdpbi1ibG9jay1zdGFydDogMWVtO1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwO1xyXG59XHJcblxyXG4uYWN0aXZpdHktbGlzdF9faXRlbSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19zbWFsbCk7XHJcbiAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcblxyXG4gICAgLmljb24ge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS41ZW07XHJcbiAgICAgICAgbWFyZ2luLXRvcDogLjRlbTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IC41ZW07XHJcbiAgICB9XHJcblxyXG4gICAgLmFjdGl2aXR5LXRpdGxlIHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTQpO1xyXG4gICAgfVxyXG5cclxuICAgIHAge1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgIH1cclxuXHJcbiAgICAuYWN0aXZpdHktY29udGVudCB7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgfVxyXG5cclxuICAgIC5hY3Rpdml0eS1tZXRhZGF0YSB7XHJcbiAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XHJcbiAgICB9XHJcbn1cclxuIiwib2wuYm9vay1saXN0IHtcclxuICBtYXJnaW4tYmxvY2stc3RhcnQ6IDFlbTtcclxuICBsaXN0LXN0eWxlOiBub25lO1xyXG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAuNmVtO1xyXG59XHJcblxyXG4uYm9vay1saXN0X19pdGVtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fc21hbGwpO1xyXG4gICY6bGFzdC1jaGlsZCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gIH1cclxuXHJcbiAgLmJvb2stbGlzdF9fY292ZXIge1xyXG4gICAgd2lkdGg6IDVyZW07XHJcbiAgICBoZWlnaHQ6IGZpdC1jb250ZW50O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDA7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAuNWVtO1xyXG4gIH1cclxuXHJcbiAgLmJvb2stdGl0bGUge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTQpO1xyXG4gIH1cclxuXHJcbiAgJi1jb250ZW50IHtcclxuXHJcbiAgfVxyXG5cclxuICBwIHtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcblxyXG4gIC5nYW1lLW1ldGFkYXRhIHtcclxuICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xyXG4gIH1cclxufVxyXG4iLCJvbC5nYW1lLWxpc3Qge1xyXG4gICAgbWFyZ2luLWJsb2NrLXN0YXJ0OiAxZW07XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IC42ZW07XHJcbn1cclxuXHJcbi5nYW1lLWxpc3RfX2l0ZW0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fc21hbGwpO1xyXG4gICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgfVxyXG5cclxuICAgIC5pY29uIHtcclxuICAgICAgICB3aWR0aDogMWVtO1xyXG4gICAgICAgIGhlaWdodDogMWVtO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogLjRlbTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IC41ZW07XHJcbiAgICB9XHJcblxyXG4gICAgLmdhbWUtdGl0bGUge1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XHJcbiAgICB9XHJcblxyXG4gICAgJi1jb250ZW50IHtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcCB7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgfVxyXG5cclxuICAgIC5nYW1lLW1ldGFkYXRhIHtcclxuICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcclxuICAgIH1cclxufVxyXG4iLCJvbC5saXN0IHtcclxuICAgIGxpc3Qtc3R5bGU6IGRpc2M7XHJcbn1cclxuXHJcbi5saXN0X19pdGVtIHtcclxuICAgIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fc21hbGwpO1xyXG4gICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgfVxyXG5cclxuICAgIC50aXRsZSB7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy00KTtcclxuICAgIH1cclxuXHJcbiAgICBwIHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICB9XHJcblxyXG4gICAgLm1ldGFkYXRhIHtcclxuICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcclxuICAgIH1cclxufVxyXG4iLCIuY29udGVudCB7XHJcbiAgICBpbWcge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB9XHJcbn1cclxuIiwiLmNvbnRlbnQge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IHZhcigtLW1heC13aWR0aF9fY29udGVudCk7XHJcbiAgICBwYWRkaW5nOiB2YXIoLS1wYWRkaW5nX19tZWRpdW0pO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcblxyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhzbWFsbCkge1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiB2YXIoLS1wYWRkaW5nX19sYXJnZSk7XHJcbiAgICB9XHJcblxyXG4gICAgPiAqIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuXHJcbiAgICA+IDpmaXJzdC1jaGlsZCB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgIH1cclxuXHJcbiAgICA+IDpsYXN0LWNoaWxkIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgfVxyXG59XHJcbiIsIi5pY29uIHtcclxuICAgIHdpZHRoOiAxZW07XHJcbiAgICBoZWlnaHQ6IDFlbTtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBzdWI7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBib3R0b206IDAuMXJlbTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAmLi1sYXJnZSB7XHJcbiAgICAgICAgd2lkdGg6IDEuNWVtO1xyXG4gICAgICAgIGhlaWdodDogMS41ZW07XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIH1cclxuXHJcbiAgICAmLi1zdHJhdmEge1xyXG4gICAgICAgIGNvbG9yOiAjZTM0YTAwO1xyXG4gICAgfVxyXG5cclxuICAgICYuLWdhbWluZyB7XHJcbiAgICAgICAgY29sb3I6ICNCMTcyRkQ7XHJcbiAgICB9XHJcblxyXG4gICAgJi4tZmVybWVudGFibGVzIHtcclxuICAgICAgICBjb2xvcjogI2ZmY2E1YTtcclxuICAgIH1cclxuXHJcbiAgICAmLi1ob3BzIHtcclxuICAgICAgICBjb2xvcjogIzZmOWE0YjtcclxuICAgIH1cclxuXHJcbiAgICAmLi15ZWFzdCB7XHJcbiAgICAgICAgY29sb3I6ICNlMmI2OTM7XHJcbiAgICB9XHJcbn1cclxuIiwiLmtnLWNhcmQge1xyXG4gICAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhtZWRpdW0pIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX2xhcmdlKTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX2xhcmdlKTtcclxuICAgIH1cclxufVxyXG4iLCIua2ctY2FyZC5rZy1lbWJlZC1jYXJkIHtcclxuICAgIGFzcGVjdC1yYXRpbzogMTYvOTtcclxuICAgIGlmcmFtZSB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgIGFzcGVjdC1yYXRpbzogaW5oZXJpdDtcclxuICAgIH1cclxuXHJcbiAgICAmLnJlc3BvbnNpdmUtdmlkZW8ge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAgICAgaWZyYW1lIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIi5rZy1jYXJkLmtnLXdpZHRoLWZ1bGwge1xyXG4gICAgaW1nIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgd2lkdGg6IDEwMHZ3OyAvKiBPciB3aGF0ZXZlciBtYXggd2lkdGggaXMgKi9cclxuICAgICAgICBtYXJnaW4tbGVmdDogY2FsYyg1MCUgLSA1MHZ3KTsgLyogNTB2dyBlcXVhbHMgaGFsZiB0aGUgd2lkdGggKi9cclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IGNhbGMoNTAlIC0gNTB2dyk7XHJcbiAgICAgICAgbWF4LXdpZHRoOiBub25lO1xyXG4gICAgfVxyXG5cclxufVxyXG4iLCIua2ctY2FyZC5rZy1nYWxsZXJ5LWNhcmQge1xyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhtZWRpdW0pIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX2xhcmdlKTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX2xhcmdlKTtcclxuICAgIH1cclxuICAgIC5rZy1nYWxsZXJ5LWNvbnRhaW5lciB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cclxuICAgICAgICAua2ctZ2FsbGVyeS1yb3cge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHJcbiAgICAgICAgICAgICY6bm90KDpmaXJzdC1vZi10eXBlKSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46ICRtYXJnaW5fX3NtYWxsIDAgMCAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5rZy1nYWxsZXJ5LWltYWdlIHtcclxuICAgICAgICAgICAgICAgICY6bm90KDpmaXJzdC1vZi10eXBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwIDAgMCB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCIua2ctY2FyZC5rZy13aWR0aC13aWRlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG5cclxuICAgIC0tY2FyZF9fZXh0cmEtd2lkdGg6IDA7XHJcblxyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhtZWRpdW0pIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX2xhcmdlKTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX2xhcmdlKTtcclxuXHJcbiAgICAgICAgPiAqIHtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lO1xyXG4gICAgICAgICAgICB3aWR0aDogY2FsYyh2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpICsgdmFyKC0tY2FyZF9fZXh0cmEtd2lkdGgpKTtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IGNhbGMoNTAlIC0gKCh2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpICsgdmFyKC0tY2FyZF9fZXh0cmEtd2lkdGgpKSAvIDIpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhsYXJnZSkge1xyXG4gICAgICAgIC0tY2FyZF9fZXh0cmEtd2lkdGg6IDEycmVtO1xyXG4gICAgfVxyXG5cclxuICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8oaHVnZSkge1xyXG4gICAgICAgIC0tY2FyZF9fZXh0cmEtd2lkdGg6IDM1cmVtO1xyXG4gICAgfVxyXG5cclxuXHJcbn1cclxuIiwiXHJcbiAgICBmaWd1cmUuZXhpZiB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICAmOmhvdmVyLCAmOmZvY3VzIHtcclxuICAgICAgICAgICAgLmV4aWZfX2NvbnRhaW5lciB7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZpZ3VyZS5leGlmOmhvdmVyIC5leGlmX19jb250YWluZXIsIGZpZ3VyZS5leGlmOmZvY3VzIC5leGlmX19jb250YWluZXIge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICB9XHJcblxyXG4gICAgLmV4aWYge1xyXG4gICAgICAgICZfX2NvbnRhaW5lciB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWShjYWxjKC0xMDAlIC0gdmFyKC0tbWFyZ2luX19zbWFsbCkpKTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiA3NSU7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0X19jb250cmFzdCk7XHJcbiAgICAgICAgICAgIHRleHQtc2hhZG93OiAwIDAgMnB4ICMwMDAsIDAgMCAycHggIzAwMCwgMCAwIDRweCAjMDAwLCAwIDAgM3B4ICMwMDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19kYXRhIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19kYXRhOmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgY29udGVudDogYXR0cihkYXRhLXR5cGUpO1xyXG4gICAgICAgICAgICB3aWR0aDogNS41ZW07XHJcbiAgICAgICAgfVxyXG4gICAgfSIsIiAgICAuZ2FsbGVyeSB7XHJcbiAgICAgICAgQGluY2x1ZGUgcmVzcG9uZC10byhzbWFsbCkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICAuZ2FsbGVyeS1yb3cge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiB2YXIoLS1tYXJnaW5fX3NtYWxsKSAwIDAgMDtcclxuXHJcbiAgICAgICAgICAgICAgICAmOmZpcnN0LWNoaWxkIHtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuZ2FsbGVyeS1yb3cge1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAmLi1uby13cmFwIHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xyXG5cclxuICAgICAgICAgICAgPiBmaWd1cmUge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgID4gZmlndXJlOm5vdCg6bGFzdC1jaGlsZCkge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAaW5jbHVkZSByZXNwb25kLXRvKHNtYWxsKSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcclxuXHJcbiAgICAgICAgICAgID4gZmlndXJlIHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICA+IGZpZ3VyZTpub3QoOmxhc3QtY2hpbGQpIHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuIiwiLnBhY2sge1xyXG4gICAgJl9fbGFiZWwge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIG1hcmdpbi1ibG9jay1zdGFydDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xyXG4gICAgICAgIG1hcmdpbi1ibG9jay1lbmQ6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xyXG5cclxuICAgICAgICAuaWNvbiB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogY2FsYygwLjJlbSArIDAuNXJlbSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2l0ZW1fX2NhdGVnb3J5LWhlYWRpbmcge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIH1cclxuXHJcbiAgICAmX19saXN0IHtcclxuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgIG1heC13aWR0aDogMzVlbTtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBtYXJnaW4tYmxvY2stc3RhcnQ6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcclxuICAgICAgICBtYXJnaW4tYmxvY2stZW5kOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcclxuXHJcbiAgICAgICAgJl9fYmFyIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgei1pbmRleDogMSAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAuNTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtaXRlbSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmVtIDFmciBhdXRvO1xyXG4gICAgICAgICAgICBncmlkLWdhcDogMCAwLjVyZW07XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0bztcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczpcclxuICAgICAgICAgICAgICAgIFwibGVmdCBtaWRkbGUgcmlnaHRcIlxyXG4gICAgICAgICAgICAgICAgXCJib3R0b20tbGVmdCBib3R0b20gYm90dG9tLXJpZ2h0XCI7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xyXG5cclxuICAgICAgICAgICAgJi4tb3ZlcnZpZXcge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyZW0gMWZyIGF1dG87XHJcbiAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWFyZWFzOlxyXG4gICAgICAgICAgICAgICAgICAgIFwibGVmdCBtaWRkbGUgcmlnaHRcIlxyXG4gICAgICAgICAgICAgICAgICAgIFwiYm90dG9tLWxlZnQgYm90dG9tIGJvdHRvbS1yaWdodFwiO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogaHNsKDBkZWcgMCUgNzAlIC8gMTAlKTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuMXJlbTtcclxuXHJcbiAgICAgICAgICAgICAgICAuaWNvbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC4zcmVtO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgID4gc3BhbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgICAgIHotaW5kZXg6IDI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICZfX2xlZnQge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiBsZWZ0O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmX19taWRkbGUge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiBtaWRkbGU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICZfX3JpZ2h0IHtcclxuICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogcmlnaHQ7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJl9fYm90dG9tLWxlZnQge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiBib3R0b20tbGVmdDtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZS1iYXNlKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJl9fYm90dG9tIHtcclxuICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogYm90dG9tO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplLWJhc2UpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmX19ib3R0b20tcmlnaHQge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiBib3R0b20tcmlnaHQ7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19saXN0LWJ1dHRvbiB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyBGZWF0dXJlcyB3aXRoIEphdmFTY3JpcHQgZW5hYmxlZFxyXG4uanMge1xyXG4gICAgLnBhY2sge1xyXG4gICAgICAgICZfX2xpc3QtY29udGFpbmVyIHtcclxuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgICAgICAgICAgICYuLWNvbGxhcHNlZCB7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiAyMHJlbTtcclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYuLWNvbGxhcHNlZDphZnRlciB7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fZ3JhZGllbnQpO1xyXG4gICAgICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgPiA6Zmlyc3QtY2hpbGQge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCIucGFnZS1oZWFkZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICBwYWRkaW5nLXRvcDogdmFyKC0tcGFkZGluZ19fbGFyZ2UpO1xyXG4gICAgcGFkZGluZy1ib3R0b206IHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcclxuXHJcbiAgICBhIHtcclxuICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xyXG4gICAgfVxyXG5cclxuICAgIC5wYWdlLXRpdGxlIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcclxuICAgICAgICBmb250LXdlaWdodDogOTAwO1xyXG4gICAgfVxyXG5cclxuICAgIC5wYWdlLWRhdGUge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xyXG4gICAgfVxyXG5cclxuICAgIC50YWdzIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcclxuICAgICAgICAudGFnIHtcclxuICAgICAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0X19jb250cmFzdCk7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogLjRlbTtcclxuXHJcbiAgICAgICAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiI1wiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5wYWdlLW1ldGFkYXRhIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgei1pbmRleDogMTA7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgbWF4LXdpZHRoOiB2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpO1xyXG4gICAgICAgIHBhZGRpbmc6IDAgdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcclxuXHJcbiAgICAgICAgOmZpcnN0LWNoaWxkIHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIDpsYXN0LWNoaWxkIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJjpub3QoLi1mZWF0dXJlLWltYWdlKXtcclxuICAgICAgICAucGFnZS10aXRsZSB7XHJcbiAgICAgICAgICAgIC8vbm9pbnNwZWN0aW9uIENzc0ludmFsaWRQcm9wZXJ0eVZhbHVlXHJcbiAgICAgICAgICAgIEBzdXBwb3J0cyAoKGJhY2tncm91bmQtY2xpcDogdGV4dCkgYW5kIChiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTIwZGVnLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMCUsIHZhcigtLWNvbG9yX19saW5rKSAzNy41JSwgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDEwMCUpKSkge1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEyMGRlZywgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDAlLCB2YXIoLS1jb2xvcl9fbGluaykgMzcuNSUsIHZhcigtLWNvbG9yX19saW5rX192aXNpdGVkKSAxMDAlKTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY2xpcDogdGV4dDtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLi1mZWF0dXJlLWltYWdlIHtcclxuICAgICAgICBtaW4taGVpZ2h0OiA1MHZtaW47XHJcbiAgICAgICAgbWF4LWhlaWdodDogODB2aDtcclxuICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHRfX2NvbnRyYXN0KTtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcblxyXG4gICAgICAgIGEge1xyXG4gICAgICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHRfX2NvbnRyYXN0KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5wYWdlLWhlYWRlcl9faW1hZ2Uge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAuNTtcclxuXHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgICAgICAgICAgICAgIG9iamVjdC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIi5wb3N0IHtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmNhbm9uaWNhbCB7XHJcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcclxuICAgICY6YmVmb3JlIHtcclxuICAgICAgICBjb250ZW50OiBcIkzDpG5rOiBcIjtcclxuICAgIH1cclxufVxyXG4iLCIucG9zdC1oZWFkZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICBwYWRkaW5nLXRvcDogdmFyKC0tcGFkZGluZ19fbGFyZ2UpO1xyXG4gICAgcGFkZGluZy1ib3R0b206IHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcclxuXHJcbiAgICBhIHtcclxuICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgLnBvc3QtdGl0bGUge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fc21hbGwpO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcblxyXG4gICAgICAgIHN2ZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogNjByZW07XHJcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiB2YXIoLS1wYWRkaW5nX19zbWFsbCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5wb3N0LWRhdGUge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xyXG4gICAgfVxyXG5cclxuICAgIC50YWdzIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcclxuICAgICAgICAudGFnIHtcclxuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICBjb2xvcjogaW5oZXJpdDtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAuNGVtO1xyXG5cclxuICAgICAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgY29udGVudDogXCIjXCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnBvc3QtbWV0YWRhdGEge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB6LWluZGV4OiAxMDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBtYXgtd2lkdGg6IHZhcigtLW1heC13aWR0aF9fY29udGVudCk7XHJcbiAgICAgICAgcGFkZGluZzogMCB2YXIoLS1wYWRkaW5nX19tZWRpdW0pO1xyXG5cclxuICAgICAgICA6Zmlyc3QtY2hpbGQge1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgOmxhc3QtY2hpbGQge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmOm5vdCguLWZlYXR1cmUtaW1hZ2Upe1xyXG4gICAgICAgIC5wb3N0LXRpdGxlIHtcclxuICAgICAgICAgICAgLy9ub2luc3BlY3Rpb24gQ3NzSW52YWxpZFByb3BlcnR5VmFsdWVcclxuICAgICAgICAgICAgQHN1cHBvcnRzICgoYmFja2dyb3VuZC1jbGlwOiB0ZXh0KSBhbmQgKGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMjBkZWcsIHZhcigtLWNvbG9yX19saW5rX192aXNpdGVkKSAwJSwgdmFyKC0tY29sb3JfX2xpbmspIDM3LjUlLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMTAwJSkpKSB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTIwZGVnLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMCUsIHZhcigtLWNvbG9yX19saW5rKSAzNy41JSwgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDEwMCUpO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jbGlwOiB0ZXh0O1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYuLWZlYXR1cmUtaW1hZ2Uge1xyXG4gICAgICAgIG1pbi1oZWlnaHQ6IDUwdm1pbjtcclxuICAgICAgICBtYXgtaGVpZ2h0OiA4MHZoO1xyXG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcclxuXHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnBvc3QtaGVhZGVyX19pbWFnZSB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IC41O1xyXG5cclxuICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gICAgICAgICAgICAgICAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcbiIsIi5uZXh0LXBvc3Qge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IGNhbGModmFyKC0tcGFkZGluZ19fbWVkaXVtKSAqIDQpIDA7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBiYWNrZ3JvdW5kOiBibGFjaztcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcblxyXG4gICAgLnJlYWQtbW9yZS10ZXh0IHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NhbnMtc2VyaWYpO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogOTAlO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICB9XHJcblxyXG4gICAgLm5leHQtcG9zdF9fdGl0bGUge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctMSk7IC8vIEgxXHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDkwMDtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogLS4ycmVtO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XHJcbiAgICAgICAgJjp2aXNpdGVkIHtcclxuICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAubmV4dC1wb3N0X19tZXRhZGF0YSB7XHJcbiAgICAgICAgei1pbmRleDogMTA7XHJcbiAgICAgICAgd2lkdGg6IDEwMHZ3O1xyXG4gICAgICAgIG1heC13aWR0aDogdmFyKC0tbWF4LXdpZHRoX19jb250ZW50KTtcclxuICAgICAgICBwYWRkaW5nOiAwIHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XHJcbiAgICB9XHJcblxyXG4gICAgLm5leHQtcG9zdF9fZGF0ZSB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogdmFyKC0tcGFkZGluZ19fc21hbGwpO1xyXG4gICAgfVxyXG5cclxuICAgIC5uZXh0LXBvc3RfX2RhdGUge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IHZhcigtLXBhZGRpbmdfX3NtYWxsKTtcclxuICAgIH1cclxuXHJcbiAgICAubmV4dC1wb3N0X19pbWFnZSB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIG9wYWNpdHk6IC41O1xyXG5cclxuICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gICAgICAgICAgICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJjphZnRlciB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fb3ZlcmxheSk7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgIH1cclxufVxyXG4iLCIuc2VwYXJhdG9yLWhlYWRpbmcge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19sYXJnZSk7XHJcbiAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XHJcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcclxuICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy01KTtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cclxuICAgICY6YWZ0ZXIge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB6LWluZGV4OiAwO1xyXG4gICAgICAgIHRvcDogMTBweDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMnB4O1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kX193aWRnZXQpO1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICB9XHJcblxyXG4gICAgc3BhbiB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHotaW5kZXg6IDEwO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBwYWRkaW5nOiAwIDFlbTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XHJcbiAgICB9XHJcbn1cclxuIiwiLnBvc3QtbGlzdCB7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XHJcbn1cclxuXHJcbi5wb3N0LWxpc3RfX2l0ZW0ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xyXG4gICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgfVxyXG5cclxuICAgIC5wb3N0LXRpdGxlIHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTQpO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICB9XHJcblxyXG4gICAgcCB7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgfVxyXG59XHJcbiIsIi5wb3N0IHtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmNhbm9uaWNhbCB7XHJcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcclxuICAgICY6YmVmb3JlIHtcclxuICAgICAgICBjb250ZW50OiBcIkzDpG5rOiBcIjtcclxuICAgIH1cclxufVxyXG4iLCIuc2l0ZS1mb290ZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICBwYWRkaW5nOiB2YXIoLS1wYWRkaW5nX19tZWRpdW0pIDA7XHJcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX3dpZGdldCk7XHJcbiAgICAuY29sdW1uIHtcclxuICAgICAgICBtYXJnaW46IHZhcigtLW1hcmdpbl9fbWVkaXVtKSAwO1xyXG4gICAgfVxyXG59XHJcblxyXG4uc2l0ZS1mb290ZXJfX2NvbnRlbnQge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IHZhcigtLW1heC13aWR0aF9fYmFzZSk7XHJcbiAgICBwYWRkaW5nOiAwIHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XHJcbiAgICBmb250LXNpemU6IDkwJTtcclxuXHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuICAgIGdyaWQtZ2FwOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XHJcblxyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhzbWFsbCkge1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDJmciAxZnI7XHJcbiAgICB9XHJcblxyXG4gICAgbGFiZWwge1xyXG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5zaXRlLWZvb3Rlcl9fbmF2aWdhdGlvbiB7XHJcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xyXG5cclxuICAgIHVsIHtcclxuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwO1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgIH1cclxuXHJcbiAgICBhIHtcclxuICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xyXG4gICAgICAgICY6dmlzaXRlZCB7XHJcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uc2l0ZS1mb290ZXJfX2hlYWRpbmcge1xyXG4gICAgbWFyZ2luLXRvcDogMDtcclxuICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy00KTtcclxufVxyXG4iLCIuc2l0ZS1oZWFkZXJfX25hdmlnYXRpb24ge1xyXG4gICAgZmxleDogMTtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgdWwge1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICBsaSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xyXG4gICAgICAgICAgICAmOmZpcnN0LWNoaWxkIHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIi5zaXRlLWhlYWRlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XHJcbn1cclxuXHJcbi5zaXRlLWhlYWRlcl9fY29udGVudCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB6LWluZGV4OiAxMDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBtYXgtd2lkdGg6IHZhcigtLW1heC13aWR0aF9fYmFzZSk7XHJcbiAgICBoZWlnaHQ6IHZhcigtLWhlYWRlcl9faGVpZ2h0KTtcclxuICAgIG1heC1oZWlnaHQ6IHZhcigtLWhlYWRlcl9faGVpZ2h0KTtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiB2YXIoLS1wYWRkaW5nX19tZWRpdW0pO1xyXG4gICAgcGFkZGluZy1sZWZ0OiB2YXIoLS1wYWRkaW5nX19tZWRpdW0pO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XHJcbiAgICBmb250LXNpemU6IHZhcigtLWhlYWRlcl9fZm9udC1zY2FsZSk7XHJcbiAgICBsaW5lLWhlaWdodDogdmFyKC0taGVhZGVyX19oZWlnaHQpO1xyXG5cclxuICAgIC5zaXRlX190aXRsZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiBpbmhlcml0O1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgIH1cclxuXHJcbiAgICAuc2l0ZV9faW1hZ2Uge1xyXG4gICAgICAgIHdpZHRoOiBjYWxjKHZhcigtLWhlYWRlcl9faGVpZ2h0KSAqIC41KTtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwLjc1ZW07XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB9XHJcblxyXG4gICAgYSB7XHJcbiAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgICY6dmlzaXRlZCB7XHJcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5zaXRlX19kZXNjcmlwdGlvbiB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2VyaWYpO1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgcmVzcG9uZC10byhzbWFsbCkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIi5zdGF0aXN0aWNzIHtcclxuICAgICZfX2xpc3Qge1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBncmlkLWF1dG8tZmxvdzogZGVuc2U7XHJcbiAgICAgICAgZ3JpZC1nYXA6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuICAgICAgICBtYXgtd2lkdGg6IDM1ZW07XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8odGlueSkge1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi4tY29sdW1uLWNvdW50LTQge1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8oc21hbGwpIHtcclxuICAgICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnIgMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2xpc3QtaXRlbSB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcblxyXG4gICAgICAgICZfX2xhYmVsIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplLWJhc2UpO1xyXG4gICAgICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJl9fdmFsdWUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIi50YWctaGVhZGVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gICAgcGFkZGluZy10b3A6IHZhcigtLXBhZGRpbmdfX2xhcmdlKTtcclxuICAgIHBhZGRpbmctYm90dG9tOiB2YXIoLS1wYWRkaW5nX19tZWRpdW0pO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XHJcblxyXG4gICAgLnRhZy1tZXRhZGF0YSB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHotaW5kZXg6IDEwO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIG1heC13aWR0aDogdmFyKC0tbWF4LXdpZHRoX19jb250ZW50KTtcclxuICAgICAgICBwYWRkaW5nOiAwIHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XHJcblxyXG4gICAgICAgIDpmaXJzdC1jaGlsZCB7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICA6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC50YWctdGl0bGUge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fc21hbGwpO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgICB9XHJcblxyXG4gICAgLnRhZy1kYXRlIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcclxuICAgIH1cclxuXHJcbiAgICAmOm5vdCguLWZlYXR1cmUtaW1hZ2Upe1xyXG4gICAgICAgIC50YWctdGl0bGUge1xyXG4gICAgICAgICAgICAvL25vaW5zcGVjdGlvbiBDc3NJbnZhbGlkUHJvcGVydHlWYWx1ZVxyXG4gICAgICAgICAgICBAc3VwcG9ydHMgKChiYWNrZ3JvdW5kLWNsaXA6IHRleHQpIGFuZCAoYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEyMGRlZywgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDAlLCB2YXIoLS1jb2xvcl9fbGluaykgMzcuNSUsIHZhcigtLWNvbG9yX19saW5rX192aXNpdGVkKSAxMDAlKSkpIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMjBkZWcsIHZhcigtLWNvbG9yX19saW5rX192aXNpdGVkKSAwJSwgdmFyKC0tY29sb3JfX2xpbmspIDM3LjUlLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMTAwJSk7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNsaXA6IHRleHQ7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi4tZmVhdHVyZS1pbWFnZSB7XHJcbiAgICAgICAgaGVpZ2h0OiA1MHZoO1xyXG4gICAgICAgIG1pbi1oZWlnaHQ6IDI1cmVtO1xyXG4gICAgICAgIG1heC1oZWlnaHQ6IDUwdnc7XHJcbiAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0X19jb250cmFzdCk7XHJcblxyXG4gICAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX292ZXJsYXkpO1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCJhcnRpY2xlLnRhZyB7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIiwiLnRhZ3Mge1xyXG4gICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XHJcbiAgICAudGFnIHtcclxuICAgICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiI1wiO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCIucG9zdC10ZW1wbGF0ZSB7XHJcbiAgICBtYWluIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi50YWctdGVtcGxhdGUge1xyXG4gICAgbWFpbiB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmQpO1xyXG4gICAgfVxyXG59XHJcblxyXG4ucGFnZS10ZW1wbGF0ZSB7XHJcbiAgICBtYWluIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5ob21lLXRlbXBsYXRlIHtcclxuICAgIG1haW4ge1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kKTtcclxuXHJcbiAgICB9XHJcbn1cclxuIiwiLyogRGVwcmVjYXRlZCBmaXggZm9yIHRoZSBvbGQgd2F5IG9mIGhhbmRsaW5nIGltYWdlcywganVzdCBzbyB0aGV5IGRvbid0IGxvb2sgdGVycmlibGUgKi9cclxuXHJcbi5jb250ZW50IHtcclxuICAgIGltZ1tzcmMkPVwiI2xhcmdlXCJdLCBpbWdbc3JjJD1cIiNmdWxsXCJdIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxufVxyXG4iLCIvKiBGaXggZm9yIDEwMHZ3IGFuZCBob3Jpem9udGFsIHNjcm9sbGJhciAqL1xyXG5cclxuYm9keSB7XHJcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XHJcbn0iLCIuaGlkZGVuIHtcclxuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxufVxyXG5cclxuLndyYXBwZXIge1xyXG4gICAgbWF4LXdpZHRoOiB2YXIoLS1tYXgtd2lkdGhfX2Jhc2UpO1xyXG4gICAgcGFkZGluZzogMCB2YXIoLS1wYWRkaW5nX19tZWRpdW0pO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxufVxyXG5cclxuLnNlY29uZGFyeSB7XHJcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcclxufVxyXG5cclxuLi1jb2x1bW4tY291bnQtMiB7XHJcbiAgICBjb2x1bW4tY291bnQ6IDI7XHJcbn1cclxuXHJcbi5zci1vbmx5IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxcHg7XHJcbiAgICBoZWlnaHQ6IDFweDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBtYXJnaW46IC0xIHB4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGNsaXA6IHJlY3QoMCwwLDAsMCk7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgYm9yZGVyLXdpZHRoOiAwO1xyXG59XHJcblxyXG4udXBwZXJjYXNlIHtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbn1cclxuXHJcbi5sb3dlcmNhc2Uge1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZTtcclxufVxyXG5cclxuLnNtYWxsY2FwcyB7XHJcbiAgICBmb250LXZhcmlhbnQ6IHNtYWxsLWNhcHM7XHJcbn1cclxuXHJcbi5saWdodCB7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG59XHJcblxyXG4uc2VtaWJvbGQge1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG5cclxuLmJvbGQge1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxufVxyXG5cclxuc21hbGwsIC5zbWFsbCB7XHJcbiAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XHJcbn1cclxuXHJcbi5ub3JtYWwge1xyXG4gICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplKTtcclxufVxyXG5cclxuLmxhcmdlIHtcclxuICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy00KTtcclxufVxyXG5cclxuLm5vLWpzIC5oaWRkZW5cXEBuby1qcyB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcbiIsIkBtZWRpYSBwcmludCB7XHJcblxyXG4gICAgLmhpZGRlblxcQHByaW50IHtcclxuICAgICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgLmtnLWJvb2ttYXJrLXRodW1ibmFpbCB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuICAgIGEsIHAsIHNwYW4sIHVsLCBvbCwgbGksIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xyXG4gICAgICAgIGNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuICAgIG1haW4ubWFpbiB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogd2hpdGUgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcblxyXG5cclxuICAgIC5oZWFkZXIge1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XHJcblxyXG4gICAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuaGVhZGVyX190b3Age1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuaGVybyB7XHJcbiAgICAgICAgICAgIGhlaWdodDogYXV0byAhaW1wb3J0YW50O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmhlcm8tY29udGVudCB7XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnBvc3RfX3JlYWQtdGltZSwgLnBvc3RfX3RhZ3Mge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5jb250ZW50IHtcclxuICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG4gICAgICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG4gICAgICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcclxuICAgICAgICBwYWRkaW5nLXRvcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xyXG4gICAgfVxyXG5cclxuICAgIC5jb250ZW50ID4gKiB7XHJcbiAgICAgICAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgYmFja2dyb3VuZDogd2hpdGUgIWltcG9ydGFudDtcclxuICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19zbWFsbCk7XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbnRlbnQgcHJlIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZSAhaW1wb3J0YW50O1xyXG4gICAgICAgIGNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG5cclxuICAgICAgICBjb2RlIHtcclxuICAgICAgICAgICAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5wb3N0LWhlYWRlciB7XHJcbiAgICAgICAgbWluLWhlaWdodDogMCAhaW1wb3J0YW50O1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFlbSAhaW1wb3J0YW50O1xyXG5cclxuICAgICAgICAmLi1mZWF0dXJlLWltYWdlOmFmdGVyIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5wb3N0LW1ldGFkYXRhIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5zZXBhcmF0b3ItaGVhZGluZyB7XHJcbiAgICAgICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTIpO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IGluaXRpYWw7XHJcbiAgICAgICAgc3BhbiB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAudGFncyB7XHJcbiAgICAgICAgLnRhZyB7XHJcbiAgICAgICAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcsJztcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMC4yZW07XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogLTAuMmVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICY6Zmlyc3Qtb2YtdHlwZTpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuLWNvbGxhcHNlZCB7XHJcbiAgICAgICAgbWF4LWhlaWdodDogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIFN0eWxlIGJ1dHRvbnMgd2l0aCBvdXRsaW5lIGluc3RlYWQgb2YgYmFja2dyb3VuZCAodG8gc2F2ZSBpbmspXHJcbiAgICBhLkJ1dHRvbiB7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2sgIWltcG9ydGFudDtcclxuICAgICAgICBiYWNrZ3JvdW5kOiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgcG9zaXRpb246IGluaXRpYWwgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICAvLyBIaWRlIGJ1dHRvbnMgdGhhdCBkb24ndCBsaW5rIGFueXdoZXJlXHJcbiAgICAuQnV0dG9uOm5vdChhKSB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFN1ZmZpeCB0aGUgVVJMIG9mIGxpbmtzIGFmdGVyIHRoZSBsaW5rIHRleHRcclxuICAgIGFbaHJlZl49J2h0dHAnXSwgYVtocmVmXj0nLyddIHtcclxuICAgICAgICBjb2xvcjogIzAwNmJmMSAhaW1wb3J0YW50O1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcgWydhdHRyKGhyZWYpJ10nO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDg1JTtcclxuICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IHN1cGVyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuXHJcbiIsIkBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspIHtcclxuICAgIDpyb290IHtcclxuICAgICAgICAtLWNvbG9yX19iYWNrZ3JvdW5kOiAjMTQxNDE0O1xyXG4gICAgICAgIC0tY29sb3JfX2JhY2tncm91bmRfX2FsdDogIzFlMWUxZTtcclxuICAgICAgICAtLWNvbG9yX19iYWNrZ3JvdW5kX193aWRnZXQ6ICMzMzMzMzM7XHJcbiAgICAgICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3Q6ICMxNDE0MTQ7XHJcbiAgICAgICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3RfX3dpZGdldDogIzI2MjYyNjtcclxuICAgICAgICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdF9fYWx0OiAjMzMzMzMzO1xyXG4gICAgICAgIC0tY29sb3JfX2JhY2tncm91bmRfX2dyYWRpZW50OiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLHJnYmEoMCwwLDAsMCkgMCwjMTQxNDE0IDEwMCUpO1xyXG4gICAgICAgIC0tY29sb3JfX292ZXJsYXk6IHJnYmEoMCwwLDAsLjUpO1xyXG4gICAgICAgIC0tY29sb3JfX2xpbms6ICM2MTgzZmQ7XHJcbiAgICAgICAgLS1jb2xvcl9fbGlua19fdmlzaXRlZDogI0IxNzJGRDtcclxuICAgICAgICAtLWNvbG9yX190ZXh0OiAjeyRjb2xvcl9fOTUtYnJpZ2h0bmVzc307XHJcbiAgICAgICAgLS1jb2xvcl9fdGV4dC1hbHQ6ICN7JGNvbG9yX182NS1icmlnaHRuZXNzfTtcclxuICAgICAgICAtLWNvbG9yX190ZXh0X19jb250cmFzdDogd2hpdGU7XHJcbiAgICB9XHJcbn1cclxuXHJcbltkYXRhLXRoZW1lPWxpZ2h0XSB7XHJcbiAgICAtLWNvbG9yX19iYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIC0tY29sb3JfX2JhY2tncm91bmRfX2FsdDogI3skY29sb3JfXzk3LWJyaWdodG5lc3N9O1xyXG4gICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0OiAjeyRjb2xvcl9fOTUtYnJpZ2h0bmVzc307XHJcbiAgICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdDogI3skY29sb3JfXzE1LWJyaWdodG5lc3N9O1xyXG4gICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3RfX3dpZGdldDogI3skY29sb3JfXzgtYnJpZ2h0bmVzc307XHJcbiAgICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdF9fYWx0OiAjeyRjb2xvcl9fMi1icmlnaHRuZXNzfTtcclxuICAgIC0tY29sb3JfX2JhY2tncm91bmRfX2dyYWRpZW50OiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLHJnYmEoMCwwLDAsMCkgMCx3aGl0ZSAxMDAlKTtcclxuICAgIC0tY29sb3JfX292ZXJsYXk6IHJnYmEoMCwwLDAsLjUpO1xyXG4gICAgLS1jb2xvcl9fbGluazogI3skY29sb3JfX2JsdWV9O1xyXG4gICAgLS1jb2xvcl9fbGlua19fdmlzaXRlZDogI3skY29sb3JfX3B1cnBsZX07XHJcbiAgICAtLWNvbG9yX190ZXh0OiBibGFjaztcclxuICAgIC0tY29sb3JfX3RleHQtYWx0OiAjeyRjb2xvcl9fMjUtYnJpZ2h0bmVzc307XHJcbiAgICAtLWNvbG9yX190ZXh0X19jb250cmFzdDogd2hpdGU7XHJcbiAgICAtLWNvbG9yX190ZXh0X19jb250cmFzdF9fYWx0OiAjYTlhOWE5O1xyXG59XHJcblxyXG5bZGF0YS10aGVtZT1kYXJrXSB7XHJcbiAgICAtLWNvbG9yX19iYWNrZ3JvdW5kOiAjMTQxNDE0O1xyXG4gICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0OiAjMWUxZTFlO1xyXG4gICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0OiAjMzMzMzMzO1xyXG4gICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3Q6ICMxNDE0MTQ7XHJcbiAgICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdF9fd2lkZ2V0OiAjMjYyNjI2O1xyXG4gICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3RfX2FsdDogIzMzMzMzMztcclxuICAgIC0tY29sb3JfX2JhY2tncm91bmRfX2dyYWRpZW50OiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLHJnYmEoMCwwLDAsMCkgMCwjMTQxNDE0IDEwMCUpO1xyXG4gICAgLS1jb2xvcl9fb3ZlcmxheTogcmdiYSgwLDAsMCwuNSk7XHJcbiAgICAtLWNvbG9yX19saW5rOiAjNjE4M2ZkO1xyXG4gICAgLS1jb2xvcl9fbGlua19fdmlzaXRlZDogI0IxNzJGRDtcclxuICAgIC0tY29sb3JfX3RleHQ6ICN7JGNvbG9yX185NS1icmlnaHRuZXNzfTtcclxuICAgIC0tY29sb3JfX3RleHQtYWx0OiAjeyRjb2xvcl9fNjUtYnJpZ2h0bmVzc307XHJcbiAgICAtLWNvbG9yX190ZXh0X19jb250cmFzdDogd2hpdGU7XHJcbiAgICAtLWNvbG9yX190ZXh0X19jb250cmFzdF9fYWx0OiAjYTlhOWE5O1xyXG59XHJcbiJdfQ== */
