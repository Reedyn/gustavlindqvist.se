@charset 'UTF-8';
/* MAIN
---------------
Import all relevant files
--------------- */
/* Breakpoints
-------------------
Breakpoints for various screen sizes
------------------- */
/* Colors
-------------------
All colors used throughout the theme
------------------- */
/* Fonts
---------------
Fonts
--------------- */
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video
{
    font: inherit;

    margin: 0;
    padding: 0;

    vertical-align: baseline;

    border: 0;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section
{
    display: block;
}

body
{
    line-height: 1;
}

ol,
ul
{
    list-style: none;
}

blockquote,
q
{
    quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after
{
    content: '';
    content: none;
}

table
{
    border-spacing: 0;
    border-collapse: collapse;
}

@font-face
{
    font-family: 'Noto Sans';
    font-weight: 500;
    font-style: normal;

    font-display: fallback;
    src: local('Noto Sans'), url('/assets/fonts/NotoSans-500.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Sans';
    font-weight: 700;
    font-style: normal;

    font-display: fallback;
    src: local('Noto Sans'), url('/assets/fonts/NotoSans-700.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Sans';
    font-weight: 900;
    font-style: normal;

    font-display: fallback;
    src: local('Noto Sans'), url('/assets/fonts/NotoSans-900.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Serif';
    font-weight: 500;
    font-style: normal;

    font-display: fallback;
    src: local('Noto Serif'), url('/assets/fonts/NotoSerif-500.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Serif';
    font-weight: 500;
    font-style: italic;

    font-display: fallback;
    src: local('Noto Serif'), url('/assets/fonts/NotoSerif-500-Italic.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Serif';
    font-weight: 700;
    font-style: normal;

    font-display: fallback;
    src: local('Noto Serif'), url('/assets/fonts/NotoSerif-700.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Serif';
    font-weight: 700;
    font-style: italic;

    font-display: fallback;
    src: local('Noto Serif'), url('/assets/fonts/NotoSerif-700-Italic.woff2') format('woff2');
}
/**
 * GHColors theme by Avi Aryan (http://aviaryan.in)
 * Inspired by Github syntax coloring
 */
code[class*=language-],
pre[class*=language-]
{
    font-family: 'Consolas', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;
    font-size: .9em;
    line-height: 1.2em;

    text-align: left;
    white-space: pre;
    word-spacing: normal;
    word-break: normal;
    -moz-tab-size: 4;
      -o-tab-size: 4;
         tab-size: 4;
    -webkit-hyphens: none;
            hyphens: none;

    color: #393a34;

    direction: ltr;
}

pre > code[class*=language-]
{
    font-size: 1em;
}

pre[class*=language-]::-moz-selection,
pre[class*=language-] ::-moz-selection,
code[class*=language-]::-moz-selection,
code[class*=language-] ::-moz-selection
{
    background: #b3d4fc;
}

pre[class*=language-]::-moz-selection,
pre[class*=language-] ::-moz-selection,
code[class*=language-]::-moz-selection,
code[class*=language-] ::-moz-selection
{
    background: #b3d4fc;
}

pre[class*=language-]::selection,
pre[class*=language-] ::selection,
code[class*=language-]::selection,
code[class*=language-] ::selection
{
    background: #b3d4fc;
}

/* Code blocks */
pre[class*=language-]
{
    overflow: auto;

    margin: .5em 0;
    padding: 1em;

    border: 1px solid #ddd;
    background-color: white;
}

/* Inline code */
:not(pre) > code[class*=language-]
{
    padding: .2em;
    padding-top: 1px;
    padding-bottom: 1px;

    border: 1px solid #ddd;
    background: #f8f8f8;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata
{
    font-style: italic;

    color: #998;
}

.token.namespace
{
    opacity: .7;
}

.token.string,
.token.attr-value
{
    color: #e3116c;
}

.token.punctuation,
.token.operator
{
    color: #393a34; /* no highlight */
}

.token.entity,
.token.url,
.token.symbol,
.token.number,
.token.boolean,
.token.variable,
.token.constant,
.token.property,
.token.regex,
.token.inserted
{
    color: #36acaa;
}

.token.atrule,
.token.keyword,
.token.attr-name,
.language-autohotkey .token.selector
{
    color: #00a4db;
}

.token.function,
.token.deleted,
.language-autohotkey .token.tag
{
    color: #9a050f;
}

.token.tag,
.token.selector,
.language-autohotkey .token.keyword
{
    color: #00009f;
}

.token.important,
.token.function,
.token.bold
{
    font-weight: bold;
}

.token.italic
{
    font-style: italic;
}

:root
{
    --color__background: white;
    --color__background__alt: #f7f7f7;
    --color__background__widget: #f1f1f1;
    --color__background__contrast: #262626;
    --color__background__contrast__widget: #141414;
    --color__background__contrast__alt: #050505;
    --color__background__gradient: linear-gradient(180deg,rgba(0,0,0,0) 0,white 100%);
    --color__overlay: rgba(0,0,0,.5);
    --color__link: hsl(240, 100%, 60%);
    --color__link__visited: hsl(285, 100%, 40%);
    --color__text: black;
    --color__text-alt: #404040;
    --color__text__contrast: white;
    --color__text__contrast__alt: #666;
    --font__dynamic-scaling: .3vw;
    --font__ratio: 1.25;
    --font__dynamic-ratio: 1.3;
    --font__size: 1.6rem;
    --font__size-base: 1.4rem;
    --font__size__heading-4: calc( (var(--font__size-base) * var(--font__ratio)) + (var(--font__dynamic-scaling) * var(--font__dynamic-ratio)));
    --font__size__heading-3: calc( (var(--font__size-base) * var(--font__ratio) * var(--font__ratio)) + (var(--font__dynamic-scaling) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio)));
    --font__size__heading-2: calc( (var(--font__size-base) * var(--font__ratio) * var(--font__ratio) * var(--font__ratio)) + (var(--font__dynamic-scaling) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio)));
    --font__size__heading-1: calc( (var(--font__size-base) * var(--font__ratio) * var(--font__ratio) * var(--font__ratio) * var(--font__ratio)) + (var(--font__dynamic-scaling) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio)));
    --font__sans-serif: Noto Sans, Arial, sans-serif;
    --font__serif: Noto Serif, Times New Roman, serif;
    --font__mono: monospace;
    --max-width__base: 120rem;
    --max-width__content: 80rem;
    --margin__tiny: .5rem;
    --margin__small: 1rem;
    --margin__medium: 2rem;
    --margin__large: 4rem;
    --padding__small: 1rem;
    --padding__medium: 2rem;
    --padding__large: 4rem;
    --header__height: 6rem;
    --header__font-scale: 90%;
}

html
{
    font-size: 62.5%;

    display: flex;
    flex-direction: column;

    height: 100%;
}

body
{
    font-family: var(--font__sans-serif);
    font-size: var(--font__size);
    font-weight: 500;
    line-height: 1.8;

    display: flex;
    overflow-y: scroll;
    flex-direction: column;

    height: 100%;
    min-height: 100%;

    color: var(--color__text);
    background: var(--color__background);

    flex: 1;
}
body main
{
    flex: 1;
}

*
{
    box-sizing: border-box;
}

p,
ul,
ol,
blockquote,
br,
button,
canvas,
caption,
col,
colgroup,
dd,
dl,
dt,
embed,
fieldset,
figcaption,
figure,
img,
form,
h1,
h2,
h3,
h4,
h5,
h6
{
    margin-top: 1em;
    margin-bottom: .5em;
}

code
{
    font-family: var(--font__mono);
    font-size: 90%;

    padding: .2em .4em;

    color: var(--color__text);
    background: var(--color__background__widget);
}

figure figcaption
{
    font-family: var(--font__serif);

    margin-top: var(--margin__small);

    text-align: center;
}
@media (min-width: 55em)
{
    figure
    {
        margin-top: var(--margin__medium);
        margin-bottom: var(--margin__medium);
    }
}
figure.-full > picture img,
figure.-full > img,
figure.-full iframe,
figure.-full > div
{
    position: relative;

    width: 100vw; /* Or whatever max width is */
    max-width: none;
    margin-right: calc(50% - 50vw);
    margin-left: calc(50% - 50vw); /* 50vw equals half the width */
}
figure.-pixels
{
    image-rendering: crisp-edges;
}
figure.-wide
{
    --card__extra-width: 0;
}
@media (min-width: 55em)
{
    figure.-wide
    {
        margin-top: var(--margin__medium);
        margin-bottom: var(--margin__medium);
    }
}
@media (min-width: 65em)
{
    figure.-wide
    {
        --card__extra-width: 10rem;
    }
    figure.-wide > picture img,
    figure.-wide > img,
    figure.-wide iframe,
    figure.-wide > div,
    figure.-wide > figure.gallery-row
    {
        width: calc(var(--max-width__content) + var(--card__extra-width));
        max-width: none;
        margin-left: calc(50% - (var(--max-width__content) + var(--card__extra-width)) / 2);
    }
}
@media (min-width: 90em)
{
    figure.-wide
    {
        --card__extra-width: 35rem;
    }
}
figure.embed iframe
{
    min-width: 100%;
    height: auto;

    aspect-ratio: 16/9;
}
figure.map iframe
{
    min-width: 100%;
    height: 50vh;
}
figure .instagram-media
{
    margin: 0 auto !important;
}

h1,
h2,
h3,
h4,
h5,
h6
{
    font-family: var(--font__sans-serif);
    line-height: 1.25;
}
h1 a,
h2 a,
h3 a,
h4 a,
h5 a,
h6 a
{
    border: 0;
}

h1
{
    font-size: var(--font__size__heading-1);
    font-weight: 700;

    letter-spacing: -.2rem;
}

h2
{
    font-size: var(--font__size__heading-2);
    font-weight: 500;
}

h3
{
    font-size: var(--font__size__heading-3);
    font-weight: 500;
}

h4
{
    font-size: var(--font__size__heading-4);
    font-weight: 500;
}

h5
{
    font-weight: 700;
}

h6
{
    font-size: 80%;
    font-weight: 700;

    text-transform: uppercase;
}

img
{
    max-width: 100%;
    height: auto;
}

svg
{
    fill: currentColor;
}

a
{
    transition: all .2s;
    text-decoration: none;

    color: var(--color__link);
}
a:hover,
a:focus
{
    text-decoration: underline;
}
a:visited
{
    color: var(--color__link__visited);
}

ul
{
    list-style: disc;

    -webkit-padding-start: 1.5em;
    padding-inline-start: 1.5em;
}
ul ul
{
    margin-top: 0;
    margin-bottom: 0;

    -webkit-padding-start: 1em;
    padding-inline-start: 1em;
}

ol
{
    list-style: decimal;

    -webkit-padding-start: 1.5em;
    padding-inline-start: 1.5em;
}
ol ol
{
    margin-top: 0;
    margin-bottom: 0;

    -webkit-padding-start: 1em;
    padding-inline-start: 1em;
}
ol li:last-of-type
{
    margin-bottom: 0;
}

.contains-task-list
{
    list-style: none;
}

.no-style
{
    list-style: none;

    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.task-list-item-checkbox
{
    margin-left: -1.6em;

    vertical-align: baseline;
}

[id]
{
    scroll-margin-top: 1ex;
}

select
{
    font-family: var(--font__sans-serif);
    font-size: var(--font__size);
    font-weight: 500;
    line-height: 2;

    padding: .4rem .4rem;

    color: var(--color__text);
    border: 1px solid var(--color__background__widget);
    border-radius: 3px;
    background: var(--color__background);
}

em
{
    font-family: var(--font__serif);
    font-style: italic;
}

.note
{
    padding: var(--margin__small);

    background: var(--color__background__alt);
}

.lead
{
    font-size: 115%;
}

sup
{
    font-size: 85%;

    vertical-align: super;
}

blockquote
{
    font-family: var(--font__serif);

    padding-left: var(--margin__medium);

    border-left: 4px solid var(--color__background__alt);
}
blockquote img
{
    width: 100%;
    margin: 2rem 0;
}
blockquote > :first-child
{
    margin-top: 0;
}
blockquote > :last-child
{
    margin-bottom: 0;
}

q
{
    font-family: var(--font__serif);
    font-size: 125%;
    font-style: italic;

    display: block;

    text-align: center;
}
@media (min-width: 40em)
{
    q
    {
        width: calc(100% + var(--margin__large));
        max-width: calc(100% + var(--margin__large));
        margin-top: var(--margin__large);
        margin-bottom: var(--margin__medium);
        margin-left: calc(0% - var(--margin__medium));
    }
}
q:before,
q:after
{
    display: none;
}

cite
{
    font-family: var(--font__serif);
    font-style: normal;

    display: block;
}
cite a
{
    color: inherit;
    border: none;
}
cite:before
{
    content: '— ';
}

strong
{
    font-weight: 700;
}

hr
{
    height: .4rem;
    margin: var(--margin__medium) 0 0;

    border: 0;
    background: var(--color__background__alt);
}

abbr
{
    font-variant: all-small-caps;

    text-decoration: none;

    border-bottom-width: 1px;
    border-bottom-style: dotted;
    border-bottom-color: var(--color__text);
}

.center
{
    text-align: center;
}

kbd
{
    padding: .2em .4em;

    border-radius: .3em;
    background: var(--color__background__alt);
}

.Breadcrumbs a
{
    color: var(--color__text-alt);
}

.Breadcrumbs a:hover,
.Breadcrumbs a:focus
{
    color: var(--color__link);
}

.Breadcrumbs ol
{
    font-size: 80%;

    margin: 0;

    list-style: none;

    text-transform: uppercase;

    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.Breadcrumbs ol li
{
    display: inline-block;
}

.Breadcrumbs ol li:before
{
    display: none !important;

    content: none !important;
}

.Breadcrumbs ol li:after
{
    content: '/';

    color: var(--color__text-alt);
}

.Breadcrumbs ol li:last-child:after
{
    content: none;
}

.Button
{
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    line-height: 1.5;

    display: inline-block;

    margin: 0;
    padding: .5em .8em;

    cursor: pointer;

    color: var(--color__background);
    border: 0;
    background: var(--color__link);
}
.Button:visited
{
    color: var(--color__background);
}
.Button:hover,
.Button:focus
{
    text-decoration: underline;
}

.Cards
{
    display: grid;

    margin-top: var(--margin__medium);
    margin-bottom: var(--margin__medium);

    grid-auto-flow: dense;
    grid-gap: var(--margin__medium);
    grid-template-columns: 1fr;
}
@media (min-width: 40em)
{
    .Cards
    {
        grid-template-columns: 1fr 1fr;
    }
}
@media (min-width: 55em)
{
    .Cards
    {
        grid-template-columns: 1fr 1fr 1fr;
    }
}
@media (min-width: 55em)
{
    .Cards.-max-2-columns
    {
        grid-template-columns: 1fr 1fr;
    }
}

.Card
{
    position: relative;

    display: flex;
    overflow: hidden;
    flex-direction: column;

    min-height: 25vh;
    padding: calc(var(--padding__small) * 1.5);

    color: var(--color__text__contrast);
    background: var(--color__background__contrast__widget);
    background-position: center;
    background-size: cover;
}
.Card.-align-bottom
{
    padding-top: 8rem;

    justify-content: flex-end;
}
.Card.-align-top
{
    justify-content: flex-start;
}
@media (min-width: 55em)
{
    .Card.post:first-of-type
    {
        aspect-ratio: 21/9;
        grid-column-start: span 3;
    }
    .Card.post:first-of-type .Card__title
    {
        font-size: 3rem;
    }
}
.Card.-featured-image:after
{
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';

    background: var(--color__overlay);
}

.Card__content
{
    font-size: var(--font__size-base);

    z-index: 10;
}
.Card__content > *
{
    margin: 0;
}
.Card__content ul,
.Card__content ol
{
    -webkit-padding-start: 2.5rem;
    padding-inline-start: 2.5rem;
}
.Card__content a
{
    color: var(--color__text__contrast);
}
.Card__content ol.metadata-list
{
    list-style: none;

    -webkit-margin-before: 1em;
    margin-block-start: 1em;
    -webkit-padding-start: 0;
    padding-inline-start: 0;
}
.Card__content .metadata-list__item
{
    overflow: hidden;

    margin-bottom: var(--margin__small);

    list-style: none;

    white-space: nowrap;
    text-overflow: ellipsis;
}
.Card__content .metadata-list__item:before
{
    display: none;

    content: none;
}
.Card__content .metadata-list__item:last-child
{
    margin-bottom: 0;
}
.Card__content .metadata-list__item .metadata-title
{
    font-size: var(--font__size__heading-4);

    margin: 0;
}
.Card__content .metadata-list__item p
{
    margin: 0;
}
.Card__content .metadata-list__item .metadata-content
{
    overflow: hidden;

    white-space: nowrap;
    text-overflow: ellipsis;
}
.Card__content .metadata-list__item .metadata-list__item-title
{
    display: block;

    color: var(--color__text__contrast);
}
.Card__content .metadata-list__item .metadata-values
{
    color: var(--color__text__contrast__alt);
}

.Card__image
{
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;
    margin: 0;
}
.Card__image img
{
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;

    -o-object-fit: cover;
       object-fit: cover;
    -o-object-position: center;
       object-position: center;
}

.Card__content__extra
{
    font-size: 90%;
    line-height: 1;

    position: absolute;
    z-index: 10;
}
.Card__content__extra.-top-left
{
    top: calc(var(--padding__small) * 1.5);
    left: calc(var(--padding__small) * 1.5);

    margin-right: 8rem;
}
.Card__content__extra.-top-right
{
    top: calc(var(--padding__small) * 1.5);
    right: calc(var(--padding__small) * 1.5);

    margin-left: 8rem;
}
.Card__content__extra.-symbol
{
    font-size: 2.5rem;
}
.Card__content__extra > :nth-child(2)
{
    margin-left: .5em;
}
.Card__content__extra .tags .tag
{
    display: inline-block;

    width: auto;
    margin-right: .4em;
    margin-bottom: .4em;

    color: var(--color__text__contrast);
}
.Card__content__extra .tags .tag:before
{
    content: '#';
}
.Card__content__extra .webmentions__count
{
    margin-right: .5em;
}

.Card__post-list
{
    margin-top: var(--margin__small);
    margin-bottom: var(--margin__small);

    list-style: decimal-leading-zero;
}

.Card__title
{
    font-size: 2.5rem;
    font-weight: 700;

    margin: 0;

    color: var(--color__text__contrast);
}
.Card__title a
{
    color: inherit;
}

.Card__title-link:after
{
    position: absolute;
    top: 0;
    left: 0;

    display: block;

    width: 100%;
    height: 100%;

    content: '';
}

.Comments__list
{
    margin-top: var(--margin__medium);

    list-style: none;

    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.Comments_reference
{
    font-size: calc(var(--font__size) * .85);
}

.Comments__panel
{
    font-weight: 500;
}
.Comments__panel .Comments__likes,
.Comments__panel .Comments__reposts,
.Comments__panel .Comments__comments
{
    margin-right: .5em;
}
.Comments__panel .Comments__status
{
    display: inline-block;

    padding: var(--padding__medium);

    background-color: var(--color__background__alt);
}
.Comments__panel svg
{
    height: 1.2em;

    vertical-align: sub;
}

.Comments__metadata
{
    font-size: var(--font__size-base);
    line-height: 1.4;

    color: var(--color__text-alt);
}
.Comments__metadata span.Comments__author
{
    color: var(--color__text);
}

.Comments__author .Comments__avatar
{
    position: absolute;
    top: 1.2rem;
    left: 1rem;

    width: 4.5rem;
    margin-right: .5em;

    vertical-align: bottom;

    border-radius: 50%;
}

.Comments__list-item
{
    position: relative;

    display: flex;
    flex-direction: column;

    margin-bottom: var(--margin__medium);
    padding: 1rem 1rem 1rem 7rem;
}
.Comments__list-item:before
{
    content: none !important;
}
.Comments__list-item.-is-me
{
    background: var(--color__background__alt);
}
.Comments__list-item.-repost-of
{
    padding-left: 4rem;
}
.Comments__list-item.-repost-of .Comments__author .Comments__avatar
{
    top: .8rem;
    left: .5rem;

    width: 2.5rem;
}
.Comments__list-item:hover
{
    background: var(--color__background__widget);
}
.Comments__list-item:last-child
{
    margin-bottom: 0;
}
.Comments__list-item p
{
    margin: .3em 0 0 0;
}

.Form
{
    font-family: var(--font__sans-serif);
    font-size: var(--font__size);

    margin-top: 2em;

    color: var(--color__text);
}
.Form.-inactive label
{
    display: none !important;
}
.Form.-inactive .-collapsed
{
    display: none !important;
}
.Form.-inactive textarea
{
    overflow: hidden;

    height: 2.7em;
    min-height: 0 !important;

    resize: none !important;
}
.Form__group
{
    position: relative;

    margin: 0 0 1em 0;
}
.Form__group input,
.Form__group textarea
{
    font-family: inherit;
    font-size: inherit;

    width: 100%;
    padding: .5em;

    color: inherit;
    border: 2px solid var(--color__background__widget);
    background: var(--color__background);
}
.Form__group input:focus,
.Form__group textarea:focus
{
    border-color: var(--color__text);
}
.Form__group input:focus + label,
.Form__group textarea:focus + label
{
    color: var(--color__text);
}
.Form__group textarea
{
    min-height: 15rem;

    resize: vertical;
}
.Form__group label
{
    font-size: var(--font__size-base);
    line-height: 1;

    position: absolute;
    top: -7px;
    left: 4px;

    display: inline-block;

    padding: 0 .5em;

    text-align: center;
    text-transform: uppercase;

    color: var(--color__text-alt);
    background: var(--color__background);
}

ol.activity-list
{
    list-style: none;

    -webkit-margin-before: 1em;
    margin-block-start: 1em;
    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.activity-list__item
{
    display: flex;

    margin-bottom: var(--margin__small);
}
.activity-list__item:last-child
{
    margin-bottom: 0;
}
.activity-list__item .icon
{
    font-size: 1.5em;

    margin-top: .4em;
    margin-right: .5em;
}
.activity-list__item .activity-title
{
    font-size: var(--font__size__heading-4);

    margin: 0;
}
.activity-list__item p
{
    margin: 0;
}
.activity-list__item .activity-content
{
    overflow: hidden;

    white-space: nowrap;
    text-overflow: ellipsis;
}
.activity-list__item .activity-metadata
{
    color: var(--color__text-alt);
}

ol.book-list
{
    list-style: disc;
}

.book-list__item
{
    margin-bottom: var(--margin__small);
}
.book-list__item:last-child
{
    margin-bottom: 0;
}
.book-list__item .book-title
{
    font-size: var(--font__size__heading-4);

    margin: 0;
}
.book-list__item p
{
    margin: 0;
}
.book-list__item .book-metadata
{
    color: var(--color__text-alt);
}

.post-header .post-title .beer-label
{
    display: block;

    width: 40rem;
    max-width: 100%;

    color: var(--color__text);
}

.beer-title a .beer-label
{
    color: var(--color__text);
}
.beer-title a:hover .beer-label,
.beer-title a:visited .beer-label
{
    color: var(--color__text);
}

.beer-statistics__list
{
    display: grid;

    max-width: 30em;
    margin: 0;
    padding: 0;

    list-style: none;

    grid-auto-flow: dense;
    grid-gap: var(--margin__small);
    grid-template-columns: 1fr 1fr;
}
@media (min-width: 25em)
{
    .beer-statistics__list
    {
        grid-template-columns: 1fr 1fr 1fr;
    }
}
.beer-statistics__list-item
{
    display: flex;
    flex-direction: column;

    justify-content: flex-end;
}
.beer-statistics__list-item__label
{
    font-size: var(--font__size-base);

    color: var(--color__text-alt);
}
.beer-statistics__list-item__value
{
    font-size: var(--font__size__heading-4);
}

.beer-ingredients__label
{
    display: block;

    -webkit-margin-before: var(--margin__medium);
    margin-block-start: var(--margin__medium);
    -webkit-margin-after: var(--margin__small);
    margin-block-end: var(--margin__small);
}
.beer-ingredients__label .icon
{
    margin-left: -.2em;
}
.beer-ingredients__list
{
    max-width: 25em;
    margin: 0;
    padding: 0;

    list-style: none;
}
.beer-ingredients__list-item
{
    display: grid;

    margin-bottom: .5em;

    grid-template-columns: 3.8em 1fr auto;
    grid-gap: 0 .5rem;
    grid-template-rows: auto;
    grid-template-areas: 'left middle right' 'left bottom bottom-right';
}
.beer-ingredients__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 3;
    -ms-grid-column: 1;
    grid-area: left;
}
.pack__list-item > .beer-ingredients__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 1;
    -ms-grid-column: 1;
}
.pack__list-item.-overview > .beer-ingredients__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 1;
    -ms-grid-column: 1;
}
.beer-ingredients__list-item__middle
{
    overflow: hidden;

    white-space: nowrap;
    text-overflow: ellipsis;

    -ms-grid-row: 1;
    -ms-grid-column: 3;
    grid-area: middle;
}
.pack__list-item > .beer-ingredients__list-item__middle
{
    -ms-grid-row: 1;
    -ms-grid-column: 3;
}
.pack__list-item.-overview > .beer-ingredients__list-item__middle
{
    -ms-grid-row: 1;
    -ms-grid-column: 3;
}
.beer-ingredients__list-item__right
{
    text-align: right;

    -ms-grid-row: 1;
    -ms-grid-column: 5;
    grid-area: right;
}
.pack__list-item > .beer-ingredients__list-item__right
{
    -ms-grid-row: 1;
    -ms-grid-column: 5;
}
.pack__list-item.-overview > .beer-ingredients__list-item__right
{
    -ms-grid-row: 1;
    -ms-grid-column: 5;
}
.beer-ingredients__list-item__bottom-left
{
    font-size: var(--font__size-base);

    -ms-grid-row: 3;
    -ms-grid-column: 1;
    grid-area: bottom-left;
}
.pack__list-item.-overview > .beer-ingredients__list-item__bottom-left
{
    -ms-grid-row: 3;
    -ms-grid-column: 1;
}
.beer-ingredients__list-item__bottom
{
    font-size: var(--font__size-base);

    -ms-grid-row: 3;
    -ms-grid-column: 3;
    grid-area: bottom;
}
.pack__list-item > .beer-ingredients__list-item__bottom
{
    -ms-grid-row: 3;
    -ms-grid-column: 3;
}
.pack__list-item.-overview > .beer-ingredients__list-item__bottom
{
    -ms-grid-row: 3;
    -ms-grid-column: 3;
}
.beer-ingredients__list-item__bottom-right
{
    font-size: var(--font__size-base);

    text-align: right;

    -ms-grid-row: 3;
    -ms-grid-column: 5;
    grid-area: bottom-right;
}
.pack__list-item > .beer-ingredients__list-item__bottom-right
{
    -ms-grid-row: 3;
    -ms-grid-column: 5;
}
.pack__list-item.-overview > .beer-ingredients__list-item__bottom-right
{
    -ms-grid-row: 3;
    -ms-grid-column: 5;
}

.batches__status
{
    font-size: var(--font__size);

    position: relative;
    bottom: .1em;

    display: inline-block;

    padding: .3em;

    vertical-align: middle;

    background: var(--color__background__widget);
}

.beers
{
    display: grid;

    margin-top: var(--margin__medium);
    margin-bottom: var(--margin__medium);

    grid-auto-flow: dense;
    grid-gap: var(--margin__medium);
    grid-template-columns: 1fr;
}
@media (min-width: 40em)
{
    .beers
    {
        grid-template-columns: 1fr 1fr;
    }
}

.beer
{
    margin: auto;
    padding: var(--padding__medium);
}
.beer a:hover .beer-label,
.beer a:focus .beer-label
{
    filter: drop-shadow(0 0 1rem var(--color__link));
}
.beer .beer-title
{
    margin: 0;
}
.beer .beer-label
{
    width: 100%;

    transition: .25s all ease;
}

.columns
{
    display: grid;

    grid-template-columns: 1fr;
    grid-gap: var(--margin__medium);
}
@media (min-width: 40em)
{
    .columns
    {
        grid-template-columns: repeat(3, minmax(0, 1fr));
    }
}

.content pre
{
    line-height: 125%;

    overflow-y: hidden;

    width: 100vw;
    max-width: 100%;
    margin-top: var(--margin__medium);
    margin-right: 0;
    margin-bottom: 0;
    margin-left: 0;
    padding: var(--padding__small);

    word-wrap: break-word;

    border: 0;
    background-color: var(--color__background__alt);
}
.content pre code
{
    font-size: 1.6rem;

    display: block;

    padding: 0;

    color: var(--color__text);
    background: none;
}

.header-anchor
{
    position: relative;

    color: var(--color__text);
}
.header-anchor:visited
{
    color: var(--color__text);
}
.header-anchor:before
{
    position: absolute;
    left: -.8em;

    display: none;

    content: '#';
}
.header-anchor:focus,
.header-anchor:hover
{
    color: var(--color__link);
}
.header-anchor:focus:before,
.header-anchor:hover:before
{
    display: block;
}

figure.exif
{
    position: relative;
}
figure.exif:hover .exif__container,
figure.exif:focus .exif__container
{
    opacity: 1;
}

figure.exif:hover .exif__container,
figure.exif:focus .exif__container
{
    opacity: 1;
}

.exif__container
{
    font-size: 75%;

    position: absolute;
    left: 0;

    transform: translateY(calc(-100% - var(--margin__small)));

    opacity: 0;
    color: var(--color__text__contrast);
    text-shadow: 0 0 2px #000, 0 0 2px #000, 0 0 4px #000, 0 0 3px #000;
}
.exif__data
{
    display: block;
}
.exif__data:before
{
    display: inline-block;

    width: 5.5em;

    content: attr(data-type);
}

.content .embed.video
{
    aspect-ratio: 16/9;
}

.content img
{
    display: block;

    max-width: 100%;
    height: auto;
    margin: 0 auto;
}

.content
{
    width: 100%;
    max-width: var(--max-width__content);
    margin-right: auto;
    margin-left: auto;
    padding: var(--padding__medium);
}
@media (min-width: 40em)
{
    .content
    {
        padding-bottom: var(--padding__large);
    }
}
.content > *
{
    width: 100%;
}
.content > :first-child
{
    margin-top: 0;
}
.content > :last-child
{
    margin-bottom: 0;
}

ol.game-list
{
    list-style: none;

    -webkit-margin-before: 1em;
    margin-block-start: 1em;
    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.game-list__item
{
    display: flex;

    margin-bottom: var(--margin__small);
}
.game-list__item:last-child
{
    margin-bottom: 0;
}
.game-list__item .icon
{
    width: 1em;
    height: 1em;
    margin-top: .4em;
    margin-right: .5em;
    margin-bottom: 0;
    margin-left: 0;
}
.game-list__item .game-title
{
    font-size: var(--font__size__heading-4);

    margin: 0;
}
.game-list__item p
{
    margin: 0;
}
.game-list__item .game-metadata
{
    color: var(--color__text-alt);
}

.icon
{
    position: relative;
    bottom: .1rem;

    display: inline-block;

    width: 1em;
    height: 1em;

    vertical-align: sub;
}
.icon.-large
{
    width: 1.5em;
    height: 1.5em;

    vertical-align: middle;
}
.icon.-strava
{
    color: #e34a00;
}
.icon.-gaming
{
    color: #b172fd;
}
.icon.-fermentables
{
    color: #ffca5a;
}
.icon.-hops
{
    color: #6f9a4b;
}
.icon.-yeast
{
    color: #e2b693;
}

.kg-card
{
    margin-top: var(--margin__medium);
    margin-bottom: var(--margin__medium);
}
@media (min-width: 55em)
{
    .kg-card
    {
        margin-top: var(--margin__large);
        margin-bottom: var(--margin__large);
    }
}

.kg-card.kg-embed-card
{
    aspect-ratio: 16/9;
}
.kg-card.kg-embed-card iframe
{
    width: 100%;
    height: auto;

    aspect-ratio: inherit;
}
.kg-card.kg-embed-card.responsive-video
{
    position: relative;
}
.kg-card.kg-embed-card.responsive-video iframe
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;
}

.kg-card.kg-width-full img
{
    position: relative;

    width: 100vw; /* Or whatever max width is */
    max-width: none;
    margin-right: calc(50% - 50vw);
    margin-left: calc(50% - 50vw); /* 50vw equals half the width */
}

@media (min-width: 55em)
{
    .kg-card.kg-gallery-card
    {
        margin-top: var(--margin__large);
        margin-bottom: var(--margin__large);
    }
}
.kg-card.kg-gallery-card .kg-gallery-container
{
    display: flex;
    flex-direction: column;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row
{
    display: flex;
    flex-direction: row;

    justify-content: center;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row:not(:first-of-type)
{
    margin: 1rem 0 0 0;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row .kg-gallery-image:not(:first-of-type)
{
    margin: 0 0 0 var(--margin__small);
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row .kg-gallery-image img
{
    display: block;

    width: 100%;
    height: 100%;
    margin: 0;
}

.kg-card.kg-width-wide
{
    width: 100%;

    --card__extra-width: 0;
}
@media (min-width: 55em)
{
    .kg-card.kg-width-wide
    {
        margin-top: var(--margin__large);
        margin-bottom: var(--margin__large);
    }
    .kg-card.kg-width-wide > *
    {
        width: calc(var(--max-width__content) + var(--card__extra-width));
        max-width: none;
        margin-left: calc(50% - (var(--max-width__content) + var(--card__extra-width)) / 2);
    }
}
@media (min-width: 65em)
{
    .kg-card.kg-width-wide
    {
        --card__extra-width: 12rem;
    }
}
@media (min-width: 90em)
{
    .kg-card.kg-width-wide
    {
        --card__extra-width: 35rem;
    }
}

@media (min-width: 40em)
{
    .gallery
    {
        display: flex;
        flex-direction: column;
    }
    .gallery .gallery-row
    {
        margin: var(--margin__small) 0 0 0;
    }
    .gallery .gallery-row:first-child
    {
        margin-top: 0;
    }
    .gallery .gallery-row:last-child
    {
        margin-bottom: 0;
    }
}

.gallery-row
{
    margin: 0;
}
@media (min-width: 40em)
{
    .gallery-row
    {
        display: flex;
        flex-direction: row;

        margin-top: var(--margin__medium);
        margin-bottom: var(--margin__medium);

        justify-content: center;
    }
    .gallery-row > figure
    {
        margin: 0;
    }
    .gallery-row > figure:not(:last-child)
    {
        margin-right: var(--margin__small);
    }
    .gallery-row img
    {
        width: 100%;
    }
}

.pack__label
{
    display: block;

    -webkit-margin-before: var(--margin__medium);
    margin-block-start: var(--margin__medium);
    -webkit-margin-after: var(--margin__small);
    margin-block-end: var(--margin__small);
}
.pack__label .icon
{
    margin-right: calc(.2em + .5rem);
}
.pack__item__category-heading
{
    font-weight: 600;

    text-transform: uppercase;
}
.pack__list
{
    display: block;

    max-width: 35em;
    margin: 0;
    padding: 0;

    list-style: none;

    -webkit-margin-before: var(--margin__medium);
    margin-block-start: var(--margin__medium);
    -webkit-margin-after: var(--margin__small);
    margin-block-end: var(--margin__small);
}
.pack__list__bar
{
    position: absolute !important;
    z-index: 1 !important;
    top: 0;
    right: 0;

    height: 100%;

    opacity: .5;
}
.pack__list-item
{
    display: grid;

    margin-bottom: .5em;

    grid-template-columns: 2em 1fr auto;
    grid-gap: 0 .5rem;
    grid-template-rows: auto;
    grid-template-areas: 'left middle right' 'bottom-left bottom bottom-right';
}
.pack__list-item.-overview
{
    position: relative;

    margin-bottom: .1rem;

    background: hsla(0, 0%, 70%, .1);

    grid-template-columns: 2em 1fr auto;
    grid-template-areas: 'left middle right' 'bottom-left bottom bottom-right';
}
.pack__list-item.-overview .icon
{
    margin-left: .3rem;
}
.pack__list-item.-overview > span
{
    position: relative;
    z-index: 2;
}
.pack__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 3;
    -ms-grid-column: 1;
    grid-area: left;
}
.pack__list-item > .pack__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 1;
    -ms-grid-column: 1;
}
.pack__list-item.-overview > .pack__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 1;
    -ms-grid-column: 1;
}
.pack__list-item__middle
{
    -ms-grid-row: 1;
    -ms-grid-column: 3;
    grid-area: middle;
}
.pack__list-item > .pack__list-item__middle
{
    -ms-grid-row: 1;
    -ms-grid-column: 3;
}
.pack__list-item.-overview > .pack__list-item__middle
{
    -ms-grid-row: 1;
    -ms-grid-column: 3;
}
.pack__list-item__right
{
    text-align: right;

    -ms-grid-row: 1;
    -ms-grid-column: 5;
    grid-area: right;
}
.pack__list-item > .pack__list-item__right
{
    -ms-grid-row: 1;
    -ms-grid-column: 5;
}
.pack__list-item.-overview > .pack__list-item__right
{
    -ms-grid-row: 1;
    -ms-grid-column: 5;
}
.pack__list-item__bottom-left
{
    font-size: var(--font__size-base);

    -ms-grid-row: 3;
    -ms-grid-column: 1;
    grid-area: bottom-left;
}
.pack__list-item.-overview > .pack__list-item__bottom-left
{
    -ms-grid-row: 3;
    -ms-grid-column: 1;
}
.pack__list-item__bottom
{
    font-size: var(--font__size-base);

    -ms-grid-row: 3;
    -ms-grid-column: 3;
    grid-area: bottom;
}
.pack__list-item > .pack__list-item__bottom
{
    -ms-grid-row: 3;
    -ms-grid-column: 3;
}
.pack__list-item.-overview > .pack__list-item__bottom
{
    -ms-grid-row: 3;
    -ms-grid-column: 3;
}
.pack__list-item__bottom-right
{
    font-size: var(--font__size-base);

    text-align: right;

    -ms-grid-row: 3;
    -ms-grid-column: 5;
    grid-area: bottom-right;
}
.pack__list-item > .pack__list-item__bottom-right
{
    -ms-grid-row: 3;
    -ms-grid-column: 5;
}
.pack__list-item.-overview > .pack__list-item__bottom-right
{
    -ms-grid-row: 3;
    -ms-grid-column: 5;
}
.pack__list-button
{
    position: absolute;
    z-index: 1;
    bottom: 0;
}

.js .pack__list-container
{
    overflow: hidden;
}
.js .pack__list-container.-collapsed
{
    position: relative;

    max-height: 20rem;
}
.js .pack__list-container.-collapsed:after
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';

    background: var(--color__background__gradient);
}
.js .pack__list-container > :first-child
{
    margin-top: 0;
}

.page-header
{
    position: relative;

    display: flex;
    overflow: hidden;
    flex-direction: column;

    padding-top: var(--padding__large);
    padding-bottom: var(--padding__medium);

    color: var(--color__text);
    background-position: center;
    background-size: cover;

    align-items: center;
    justify-content: flex-end;
}
.page-header a
{
    color: var(--color__text);
}
.page-header .page-title
{
    font-weight: 900;

    margin-bottom: var(--margin__small);
}
.page-header .page-date
{
    margin-top: var(--margin__small);
}
.page-header .tags
{
    margin-top: var(--margin__small);
}
.page-header .tags .tag
{
    margin-right: .4em;

    color: var(--color__text__contrast);
}
.page-header .tags .tag:before
{
    content: '#';
}
.page-header .page-metadata
{
    position: relative;
    z-index: 10;

    width: 100%;
    max-width: var(--max-width__content);
    padding: 0 var(--padding__medium);
}
.page-header .page-metadata :first-child
{
    margin-top: 0;
}
.page-header .page-metadata :last-child
{
    margin-bottom: 0;
}
@supports ((-webkit-background-clip: text) or (background-clip: text)) and (background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%))
{
    .page-header:not(.-feature-image) .page-title
    {
        color: transparent;
        background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%);
        -webkit-background-clip: text;
                background-clip: text;
    }
}
.page-header.-feature-image
{
    position: relative;

    min-height: 50vmin;
    max-height: 80vh;

    color: var(--color__text__contrast);
    background-color: black;
}
.page-header.-feature-image a
{
    color: var(--color__text__contrast);
}
.page-header.-feature-image .page-header__image
{
    position: absolute;
    top: 0;

    width: 100%;
    height: 100%;
    margin: 0;

    opacity: .5;
}
.page-header.-feature-image .page-header__image img
{
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;

    -o-object-fit: cover;
       object-fit: cover;
    -o-object-position: center;
       object-position: center;
}

.post
{
    overflow: hidden;

    width: 100%;
}

.canonical
{
    color: var(--color__text-alt);
}
.canonical:before
{
    content: 'Länk: ';
}

.post-header
{
    position: relative;

    display: flex;
    overflow: hidden;
    flex-direction: column;

    padding-top: var(--padding__large);
    padding-bottom: var(--padding__medium);

    color: var(--color__text);
    background-position: center;
    background-size: cover;

    align-items: center;
    justify-content: flex-end;
}
.post-header a
{
    color: var(--color__text);
}
.post-header .post-title
{
    font-weight: 900;

    margin-bottom: var(--margin__small);
}
.post-header .post-title svg
{
    width: 90%;
    max-width: 60rem;
    padding-bottom: var(--padding__small);
}
.post-header .post-date
{
    margin-top: var(--margin__small);
}
.post-header .tags
{
    margin-top: var(--margin__small);
}
.post-header .tags .tag
{
    display: inline-block;

    margin-right: .4em;

    color: inherit;
}
.post-header .tags .tag:before
{
    content: '#';
}
.post-header .post-metadata
{
    position: relative;
    z-index: 10;

    width: 100%;
    max-width: var(--max-width__content);
    padding: 0 var(--padding__medium);
}
.post-header .post-metadata :first-child
{
    margin-top: 0;
}
.post-header .post-metadata :last-child
{
    margin-bottom: 0;
}
@supports ((-webkit-background-clip: text) or (background-clip: text)) and (background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%))
{
    .post-header:not(.-feature-image) .post-title
    {
        color: transparent;
        background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%);
        -webkit-background-clip: text;
                background-clip: text;
    }
}
.post-header.-feature-image
{
    position: relative;

    min-height: 50vmin;
    max-height: 80vh;

    color: var(--color__text__contrast);
    background-color: black;
}
.post-header.-feature-image a
{
    color: var(--color__text__contrast);
}
.post-header.-feature-image .post-header__image
{
    position: absolute;
    top: 0;

    width: 100%;
    height: 100%;
    margin: 0;

    opacity: .5;
}
.post-header.-feature-image .post-header__image img
{
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;

    -o-object-fit: cover;
       object-fit: cover;
    -o-object-position: center;
       object-position: center;
}

.next-post
{
    position: relative;

    display: flex;
    overflow: hidden;
    flex-direction: column;

    margin: auto;
    padding: calc(var(--padding__medium) * 4) 0;

    color: white;
    background: black;
    background-position: center;
    background-size: cover;

    align-items: center;
}
.next-post .read-more-text
{
    font-family: var(--font__sans-serif);
    font-size: 90%;
    font-weight: 600;

    margin-bottom: var(--margin__medium);

    text-align: center;
    text-transform: uppercase;
}
.next-post .next-post__title
{
    font-size: var(--font__size__heading-1);
    font-weight: 700;
    line-height: 1.2;

    display: block;

    letter-spacing: -.2rem;

    color: white;
}
.next-post .next-post__title:visited
{
    color: white;
}
.next-post .next-post__title:after
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';
}
.next-post .next-post__metadata
{
    z-index: 10;

    width: 100vw;
    max-width: var(--max-width__content);
    padding: 0 var(--padding__medium);
}
.next-post .next-post__date
{
    margin-top: var(--padding__small);
}
.next-post .next-post__date
{
    margin-top: var(--padding__small);
}
.next-post .next-post__image
{
    position: absolute;
    top: 0;

    width: 100%;
    height: 100%;
    margin: 0;

    opacity: .5;
}
.next-post .next-post__image img
{
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;

    -o-object-fit: cover;
       object-fit: cover;
    -o-object-position: center;
       object-position: center;
}
.next-post:after
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';

    background: var(--color__overlay);
}

.separator-heading
{
    font-size: var(--font__size__heading-5);

    position: relative;

    margin-top: var(--margin__large);
    margin-bottom: var(--margin__medium);

    text-align: center;
    text-transform: uppercase;

    color: var(--color__text-alt);
}
.separator-heading:after
{
    position: absolute;
    z-index: 0;
    top: 7px;
    left: 0;

    display: block;

    width: 100%;
    height: 2px;

    content: '';

    background: var(--color__background__widget);
}
.separator-heading span
{
    position: relative;
    z-index: 10;

    display: inline-block;

    padding: 0 1em;

    background: var(--color__background);
}

.post-list
{
    list-style: none;

    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.post-list__item
{
    margin-bottom: var(--margin__medium);
}
.post-list__item:last-child
{
    margin-bottom: 0;
}
.post-list__item .post-title
{
    font-size: var(--font__size__heading-4);

    margin: 0;
}
.post-list__item p
{
    margin: 0;
}

.post
{
    overflow: hidden;

    width: 100%;
}

.canonical
{
    color: var(--color__text-alt);
}
.canonical:before
{
    content: 'Länk: ';
}

.site-footer
{
    display: flex;
    flex-direction: column;

    padding: var(--padding__medium) 0;

    border-top: 1px solid var(--color__background__widget);

    align-content: space-around;
    align-items: center;
    justify-content: space-around;
}
.site-footer .column
{
    margin: var(--margin__medium) 0;
}

.site-footer__content
{
    font-size: 90%;

    width: 100%;
    max-width: var(--max-width__base);
    padding: 0 var(--padding__medium);

    grid-template-columns: 1fr;
    grid-gap: var(--margin__medium);
}
@media (min-width: 40em)
{
    .site-footer__content
    {
        grid-template-columns: 1fr 2fr 1fr;
    }
}
.site-footer__content label
{
    color: var(--color__text);
}

.site-footer__navigation
{
    color: var(--color__text);
}
.site-footer__navigation ul
{
    margin: 0;

    list-style: none;

    -webkit-padding-start: 0;
    padding-inline-start: 0;
}
.site-footer__navigation a
{
    color: var(--color__text);
}
.site-footer__navigation a:visited
{
    color: var(--color__text);
}

.site-footer__heading
{
    font-size: var(--font__size__heading-4);

    margin-top: 0;
}

.site-header__navigation
{
    text-align: right;

    flex: 1;
}
.site-header__navigation ul
{
    margin: 0;
}
.site-header__navigation ul li
{
    display: inline-block;

    margin-left: var(--margin__small);
}
.site-header__navigation ul li:first-child
{
    margin-left: 0;
}

.site-header
{
    background-color: var(--color__background);
}

.site-header__content
{
    font-size: var(--header__font-scale);
    line-height: var(--header__height);

    position: relative;
    z-index: 10;

    display: flex;
    flex-direction: row;

    max-width: var(--max-width__base);
    height: var(--header__height);
    max-height: var(--header__height);
    margin: auto;
    padding-right: var(--padding__medium);
    padding-left: var(--padding__medium);

    color: var(--color__text-alt);
}
.site-header__content .site__title
{
    font-size: inherit;
    line-height: inherit;

    margin: 0;

    letter-spacing: inherit;
}
.site-header__content .site__image
{
    width: calc(var(--header__height) * .5);
    margin: 0;
    margin-right: .75em;

    vertical-align: middle;

    border-radius: 50%;
}
.site-header__content a
{
    font-weight: 500;

    color: var(--color__text);
}
.site-header__content a:visited
{
    color: var(--color__text);
}
.site-header__content .site__description
{
    font-family: var(--font__serif);
    font-style: italic;

    display: none;
}
@media (min-width: 40em)
{
    .site-header__content .site__description
    {
        display: inline;
    }
}

.statistics__list
{
    display: grid;

    max-width: 35em;
    margin: 0;
    padding: 0;

    list-style: none;

    grid-auto-flow: dense;
    grid-gap: var(--margin__small);
    grid-template-columns: 1fr 1fr;
}
@media (min-width: 25em)
{
    .statistics__list
    {
        grid-template-columns: 1fr 1fr 1fr;
    }
}
.statistics__list.-column-count-4
{
    grid-template-columns: 1fr 1fr;
}
@media (min-width: 40em)
{
    .statistics__list.-column-count-4
    {
        grid-template-columns: 1fr 1fr 1fr 1fr;
    }
}
.statistics__list-item
{
    display: flex;
    flex-direction: column;

    justify-content: flex-end;
}
.statistics__list-item__label
{
    font-size: var(--font__size-base);

    color: var(--color__text-alt);
}
.statistics__list-item__value
{
    font-size: var(--font__size__heading-4);
}

.tag-header
{
    position: relative;

    display: flex;
    overflow: hidden;
    flex-direction: column;

    padding-top: var(--padding__large);
    padding-bottom: var(--padding__medium);

    color: var(--color__text);
    background-position: center;
    background-size: cover;

    align-items: center;
    justify-content: flex-end;
}
.tag-header .tag-metadata
{
    position: relative;
    z-index: 10;

    width: 100%;
    max-width: var(--max-width__content);
    padding: 0 var(--padding__medium);
}
.tag-header .tag-metadata :first-child
{
    margin-top: 0;
}
.tag-header .tag-metadata :last-child
{
    margin-bottom: 0;
}
.tag-header .tag-title
{
    font-weight: 900;

    margin-bottom: var(--margin__small);
}
.tag-header .tag-date
{
    margin-top: var(--margin__small);
}
@supports ((-webkit-background-clip: text) or (background-clip: text)) and (background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%))
{
    .tag-header:not(.-feature-image) .tag-title
    {
        color: transparent;
        background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%);
        -webkit-background-clip: text;
                background-clip: text;
    }
}
.tag-header.-feature-image
{
    height: 50vh;
    min-height: 25rem;
    max-height: 50vw;

    color: var(--color__text__contrast);
}
.tag-header.-feature-image:after
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';

    background: var(--color__overlay);
}

article.tag
{
    overflow: hidden;

    width: 100%;
}

.tags
{
    color: var(--color__text-alt);
}
.tags .tag:before
{
    content: '#';
}

.post-template main
{
    background: var(--color__background);
}

.tag-template main
{
    background: var(--color__background);
}

.page-template main
{
    background: var(--color__background);
}

.home-template main
{
    background: var(--color__background);
}

/* Deprecated fix for the old way of handling images, just so they don't look terrible */
.content img[src$='#large'],
.content img[src$='#full']
{
    width: 100%;
}

/* Fix for 100vw and horizontal scrollbar */
body
{
    overflow-x: hidden;
}

.hidden
{
    display: none !important;
}

.wrapper
{
    width: 100%;
    max-width: var(--max-width__base);
    margin-right: auto;
    margin-left: auto;
    padding: 0 var(--padding__medium);
}

.secondary
{
    color: var(--color__text-alt);
}

.-column-count-2
{
    -moz-column-count: 2;
         column-count: 2;
}

.sr-only
{
    position: absolute;

    overflow: hidden;
    clip: rect(0, 0, 0, 0);

    width: 1px;
    height: 1px;
    margin: -1 px;
    padding: 0;

    white-space: nowrap;

    border-width: 0;
}

.uppercase
{
    text-transform: uppercase;
}

.lowercase
{
    text-transform: lowercase;
}

.smallcaps
{
    font-variant: small-caps;
}

.light
{
    font-weight: 400;
}

.semibold
{
    font-weight: 600;
}

.bold
{
    font-weight: 700;
}

small,
.small
{
    font-size: var(--font__size-base);
}

.normal
{
    font-size: var(--font__size);
}

.large
{
    font-size: var(--font__size__heading-4);
}

.no-js .hidden\@no-js
{
    display: none;
}

@media print
{
    .hidden\@print
    {
        display: none !important;
    }
    .kg-bookmark-thumbnail
    {
        display: none !important;
    }
    a,
    p,
    span,
    ul,
    ol,
    li,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6
    {
        color: black !important;
    }
    main.main
    {
        background: white !important;
    }
    .header
    {
        color: black !important;
        background: white !important;
    }
    .header:after
    {
        display: none !important;
    }
    .header .header__top
    {
        display: none !important;
    }
    .header .hero
    {
        height: auto !important;
    }
    .header .hero-content
    {
        width: 100% !important;
        max-width: 100% !important;
    }
    .header .post__read-time,
    .header .post__tags
    {
        display: none !important;
    }
    .content
    {
        width: 100% !important;
        max-width: 100% !important;
        padding: 0 !important;
        padding-top: var(--margin__medium);
    }
    .content > *
    {
        margin-top: var(--margin__medium);
        margin-bottom: var(--margin__small);

        color: black !important;
        background: white !important;
    }
    .content pre
    {
        color: black !important;
        border: 1px solid black;
        background: white !important;
    }
    .content pre code
    {
        color: black !important;
    }
    .post-header
    {
        min-height: 0 !important;
        margin-bottom: 1em !important;
        padding: 0 !important;

        background: white !important;
    }
    .post-header.-feature-image:after
    {
        display: none;
    }
    .post-header .post-metadata
    {
        max-width: none !important;
        padding: 0;
    }
    .separator-heading
    {
        font-size: var(--font__size__heading-2);

        text-align: left;
        text-transform: initial;
    }
    .separator-heading span
    {
        padding: 0;
    }
    .separator-heading:after
    {
        display: none;
    }
    .tags .tag:before
    {
        margin-right: .2em;
        margin-left: -.2em;

        content: ',';
    }
    .tags .tag:first-of-type:before
    {
        display: none;
    }
    .-collapsed
    {
        max-height: none !important;
    }
    .-collapsed:after
    {
        display: none !important;
    }
    a.Button
    {
        position: initial !important;

        border: 1px solid black !important;
        background: none !important;
    }
    .Button:not(a)
    {
        display: none !important;
    }
    a[href^=http],
    a[href^='/']
    {
        text-decoration: underline !important;

        color: #006bf1 !important;
    }
    a[href^=http]:after,
    a[href^='/']:after
    {
        font-size: 85%;

        content: ' [' attr(href) ']';
        vertical-align: super;
    }
}
@media (prefers-color-scheme: dark)
{
    :root
    {
        --color__background: #141414;
        --color__background__alt: #1e1e1e;
        --color__background__widget: #333;
        --color__background__contrast: #141414;
        --color__background__contrast__widget: #262626;
        --color__background__contrast__alt: #333;
        --color__background__gradient: linear-gradient(180deg,rgba(0,0,0,0) 0,#141414 100%);
        --color__overlay: rgba(0,0,0,.5);
        --color__link: #6183fd;
        --color__link__visited: #b172fd;
        --color__text: #f1f1f1;
        --color__text-alt: #a6a6a6;
        --color__text__contrast: white;
    }
}
[data-theme=light]
{
    --color__background: white;
    --color__background__alt: #f7f7f7;
    --color__background__widget: #f1f1f1;
    --color__background__contrast: #262626;
    --color__background__contrast__widget: #141414;
    --color__background__contrast__alt: #050505;
    --color__background__gradient: linear-gradient(180deg,rgba(0,0,0,0) 0,white 100%);
    --color__overlay: rgba(0,0,0,.5);
    --color__link: hsl(240, 100%, 60%);
    --color__link__visited: hsl(285, 100%, 40%);
    --color__text: black;
    --color__text-alt: #404040;
    --color__text__contrast: white;
    --color__text__contrast__alt: #a9a9a9;
}

[data-theme=dark]
{
    --color__background: #141414;
    --color__background__alt: #1e1e1e;
    --color__background__widget: #333;
    --color__background__contrast: #141414;
    --color__background__contrast__widget: #262626;
    --color__background__contrast__alt: #333;
    --color__background__gradient: linear-gradient(180deg,rgba(0,0,0,0) 0,#141414 100%);
    --color__overlay: rgba(0,0,0,.5);
    --color__link: #6183fd;
    --color__link__visited: #b172fd;
    --color__text: #f1f1f1;
    --color__text-alt: #a6a6a6;
    --color__text__contrast: white;
    --color__text__contrast__alt: #a9a9a9;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1c3RhdmxpbmRxdmlzdC5jc3MiLCJndXN0YXZsaW5kcXZpc3Quc2NzcyIsIjAxLnNldHRpbmdzL2JyZWFrcG9pbnRzLnNjc3MiLCIwMS5zZXR0aW5ncy9jb2xvcnMuc2NzcyIsIjAxLnNldHRpbmdzL2ZvbnRzLnNjc3MiLCIwMy5nZW5lcmljL19jc3MtcmVzZXQuc2NzcyIsIjAzLmdlbmVyaWMvX2ZvbnRzLS1ub3RvLnNjc3MiLCIwMy5nZW5lcmljL19wcmlzbS0tY29kZS1oaWdobGlnaHRpbmcuc2NzcyIsIjAzLmdlbmVyaWMvX3Jvb3QtdmFyaWFibGVzLnNjc3MiLCIwMy5nZW5lcmljL2dlbmVyaWMuc2NzcyIsIjA0LmVsZW1lbnRzL2NvZGUuc2NzcyIsIjA0LmVsZW1lbnRzL2ZpZ3VyZS5zY3NzIiwiMDIudG9vbHMvbWl4aW5zLnNjc3MiLCIwNC5lbGVtZW50cy9oZWFkaW5ncy5zY3NzIiwiMDQuZWxlbWVudHMvaW1hZ2VzLnNjc3MiLCIwNC5lbGVtZW50cy9saW5rcy5zY3NzIiwiMDQuZWxlbWVudHMvbGlzdHMuc2NzcyIsIjA0LmVsZW1lbnRzL3BzZXVkby5zY3NzIiwiMDQuZWxlbWVudHMvc2VsZWN0LnNjc3MiLCIwNC5lbGVtZW50cy90eXBvZ3JhcGh5LnNjc3MiLCIwNS5vYmplY3RzL0JyZWFkY3J1bWJzLnNjc3MiLCIwNS5vYmplY3RzL0J1dHRvbi5zY3NzIiwiMDUub2JqZWN0cy9DYXJkLnNjc3MiLCIwNS5vYmplY3RzL0NvbW1lbnRzLnNjc3MiLCIwNS5vYmplY3RzL0Zvcm0uc2NzcyIsIjA2LmNvbXBvbmVudHMvYWN0aXZpdHktbGlzdC5zY3NzIiwiMDYuY29tcG9uZW50cy9ib29rLWxpc3Quc2NzcyIsIjA2LmNvbXBvbmVudHMvYnJld2VyeV9fYmVlcl9fbGFiZWwuc2NzcyIsIjA2LmNvbXBvbmVudHMvYnJld2VyeV9fYmVlci5zY3NzIiwiMDYuY29tcG9uZW50cy9icmV3ZXJ5X19iZWVycy5zY3NzIiwiMDYuY29tcG9uZW50cy9jb2x1bW5zLnNjc3MiLCIwNi5jb21wb25lbnRzL2NvbnRlbnRfX2NvZGUtYmxvY2suc2NzcyIsIjA2LmNvbXBvbmVudHMvY29udGVudF9faGVhZGluZy1hbmNob3JzLnNjc3MiLCIwNi5jb21wb25lbnRzL2NvbnRlbnRfX21lZGlhX19maWd1cmVfX2V4aWYuc2NzcyIsIjA2LmNvbXBvbmVudHMvY29udGVudF9fbWVkaWFfX3ZpZGVvcy5zY3NzIiwiMDYuY29tcG9uZW50cy9jb250ZW50X19tZWRpYS5zY3NzIiwiMDYuY29tcG9uZW50cy9jb250ZW50LnNjc3MiLCIwNi5jb21wb25lbnRzL2dhbWUtbGlzdC5zY3NzIiwiMDYuY29tcG9uZW50cy9pY29uLnNjc3MiLCIwNi5jb21wb25lbnRzL2tvZW5pZy1jYXJkLS1jYXJkLnNjc3MiLCIwNi5jb21wb25lbnRzL2tvZW5pZy1jYXJkLS1lbWJlZC5zY3NzIiwiMDYuY29tcG9uZW50cy9rb2VuaWctY2FyZC0tZnVsbC5zY3NzIiwiMDYuY29tcG9uZW50cy9rb2VuaWctY2FyZC0tZ2FsbGVyeS5zY3NzIiwiMDYuY29tcG9uZW50cy9rb2VuaWctY2FyZC0td2lkZS5zY3NzIiwiMDYuY29tcG9uZW50cy9tZWRpYV9fZ2FsbGVyeS5zY3NzIiwiMDYuY29tcG9uZW50cy9wYWNrLnNjc3MiLCIwNi5jb21wb25lbnRzL3BhZ2VfX2hlYWRlci5zY3NzIiwiMDYuY29tcG9uZW50cy9wYWdlLnNjc3MiLCIwNi5jb21wb25lbnRzL3Bvc3RfX2hlYWRlci5zY3NzIiwiMDYuY29tcG9uZW50cy9wb3N0X19uZXh0LXBvc3Quc2NzcyIsIjA2LmNvbXBvbmVudHMvcG9zdF9fc2VwYXJhdG9yLWhlYWRpbmcuc2NzcyIsIjA2LmNvbXBvbmVudHMvcG9zdC1saXN0LnNjc3MiLCIwNi5jb21wb25lbnRzL3Bvc3Quc2NzcyIsIjA2LmNvbXBvbmVudHMvc2l0ZS1mb290ZXIuc2NzcyIsIjA2LmNvbXBvbmVudHMvc2l0ZS1oZWFkZXJfX25hdmlnYXRpb24uc2NzcyIsIjA2LmNvbXBvbmVudHMvc2l0ZS1oZWFkZXIuc2NzcyIsIjA2LmNvbXBvbmVudHMvc3RhdGlzdGljcy5zY3NzIiwiMDYuY29tcG9uZW50cy90YWdfX2hlYWRlci5zY3NzIiwiMDYuY29tcG9uZW50cy90YWcuc2NzcyIsIjA2LmNvbXBvbmVudHMvdGFncy5zY3NzIiwiMDYuY29tcG9uZW50cy90ZW1wbGF0ZXMuc2NzcyIsIjA3Lm92ZXJyaWRlcy9maXgub2xkLWltYWdlLXN0eWxlcy5zY3NzIiwiMDcub3ZlcnJpZGVzL2ZpeC5zY3JvbGxiYXJzLnNjc3MiLCIwNy5vdmVycmlkZXMvaGVscGVycy5zY3NzIiwiMDcub3ZlcnJpZGVzL3ByaW50LnNjc3MiLCIwNy5vdmVycmlkZXMvdGhlbWVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FDQWhCOzs7aUJBQUE7QUNBQTs7O3FCQUFBO0FDQUE7OztxQkFBQTtBQ0FBOzs7aUJBQUE7QUNBQTs7O0NBQUE7QUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBaUZJLFVBQUE7RUFDQSxTQUFBO0VBQ0EsU0FBQTtFQUNBLGFBQUE7RUFDQSx3QkFBQTtBTGlCSjs7QUtkQSxnREFBQTtBQUNBOzs7Ozs7Ozs7OztFQVdJLGNBQUE7QUxpQko7O0FLZEE7RUFDSSxjQUFBO0FMaUJKOztBS2RBOztFQUVJLGdCQUFBO0FMaUJKOztBS2RBOztFQUVJLFlBQUE7QUxpQko7O0FLZEE7Ozs7RUFJSSxXQUFBO0VBQ0EsYUFBQTtBTGlCSjs7QUtkQTtFQUNJLHlCQUFBO0VBQ0EsaUJBQUE7QUxpQko7O0FNckpBO0VBQ0ksd0JBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0Esc0JBQUE7RUFDQSxnRkFBQTtBTndKSjtBTXBKQTtFQUNJLHdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZ0ZBQUE7QU5zSko7QU1sSkE7RUFDSSx3QkFBQTtF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Z0U1dUVFO0lBQ0ksMkJBQUE7RWhFOHVFTjtFZ0U3dUVNO0lBQ0ksd0JBQUE7RWhFK3VFVjtFZ0UxdUVFO0lBQ0ksa0NBQUE7SUFDQSwyQkFBQTtJQUNBLDRCQUFBO0VoRTR1RU47RWdFeHVFRTtJQUNJLHdCQUFBO0VoRTB1RU47RWdFdHVFRTtJQUNJLHlCQUFBO0lBQ0EscUNBQUE7RWhFd3VFTjtFZ0V2dUVNO0lBQ0ksNEJBQUE7SUFDQSxjQUFBO0lBQ0EscUJBQUE7RWhFeXVFVjtBQUNGO0FpRW4zRUE7RUFDSTtJQUNJLDRCQUFBO0lBQ0EsaUNBQUE7SUFDQSxvQ0FBQTtJQUNBLHNDQUFBO0lBQ0EsOENBQUE7SUFDQSwyQ0FBQTtJQUNBLG1GQUFBO0lBQ0EsZ0NBQUE7SUFDQSxzQkFBQTtJQUNBLCtCQUFBO0lBQ0Esc0JBQUE7SUFDQSwwQkFBQTtJQUNBLDhCQUFBO0VqRXEzRU47QUFDRjtBaUVsM0VBO0VBQ0ksMEJBQUE7RUFDQSxpQ0FBQTtFQUNBLG9DQUFBO0VBQ0Esc0NBQUE7RUFDQSw4Q0FBQTtFQUNBLDJDQUFBO0VBQ0EsaUZBQUE7RUFDQSxnQ0FBQTtFQUNBLGtDQUFBO0VBQ0EsMkNBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0VBQ0EsOEJBQUE7RUFDQSxxQ0FBQTtBakVvM0VKOztBaUVqM0VBO0VBQ0ksNEJBQUE7RUFDQSxpQ0FBQTtFQUNBLG9DQUFBO0VBQ0Esc0NBQUE7RUFDQSw4Q0FBQTtFQUNBLDJDQUFBO0VBQ0EsbUZBQUE7RUFDQSxnQ0FBQTtFQUNBLHNCQUFBO0VBQ0EsK0JBQUE7RUFDQSxzQkFBQTtFQUNBLDBCQUFBO0VBQ0EsOEJBQUE7RUFDQSxxQ0FBQTtBakVvM0VKIiwiZmlsZSI6Imd1c3RhdmxpbmRxdmlzdC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG4vKiBNQUlOXG4tLS0tLS0tLS0tLS0tLS1cbkltcG9ydCBhbGwgcmVsZXZhbnQgZmlsZXNcbi0tLS0tLS0tLS0tLS0tLSAqL1xuLyogQnJlYWtwb2ludHNcbi0tLS0tLS0tLS0tLS0tLS0tLS1cbkJyZWFrcG9pbnRzIGZvciB2YXJpb3VzIHNjcmVlbiBzaXplc1xuLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogQ29sb3JzXG4tLS0tLS0tLS0tLS0tLS0tLS0tXG5BbGwgY29sb3JzIHVzZWQgdGhyb3VnaG91dCB0aGUgdGhlbWVcbi0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIEZvbnRzXG4tLS0tLS0tLS0tLS0tLS1cbkZvbnRzXG4tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvXG4gICB2Mi4wIHwgMjAxMTAxMjZcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXG4qL1xuaHRtbCxcbmJvZHksXG5kaXYsXG5zcGFuLFxuYXBwbGV0LFxub2JqZWN0LFxuaWZyYW1lLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxucCxcbmJsb2NrcXVvdGUsXG5wcmUsXG5hLFxuYWJicixcbmFjcm9ueW0sXG5hZGRyZXNzLFxuYmlnLFxuY2l0ZSxcbmNvZGUsXG5kZWwsXG5kZm4sXG5lbSxcbmltZyxcbmlucyxcbmtiZCxcbnEsXG5zLFxuc2FtcCxcbnNtYWxsLFxuc3RyaWtlLFxuc3Ryb25nLFxuc3ViLFxuc3VwLFxudHQsXG52YXIsXG5iLFxudSxcbmksXG5jZW50ZXIsXG5kbCxcbmR0LFxuZGQsXG5vbCxcbnVsLFxubGksXG5maWVsZHNldCxcbmZvcm0sXG5sYWJlbCxcbmxlZ2VuZCxcbnRhYmxlLFxuY2FwdGlvbixcbnRib2R5LFxudGZvb3QsXG50aGVhZCxcbnRyLFxudGgsXG50ZCxcbmFydGljbGUsXG5hc2lkZSxcbmNhbnZhcyxcbmRldGFpbHMsXG5lbWJlZCxcbmZpZ3VyZSxcbmZpZ2NhcHRpb24sXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxub3V0cHV0LFxucnVieSxcbnNlY3Rpb24sXG5zdW1tYXJ5LFxudGltZSxcbm1hcmssXG5hdWRpbyxcbnZpZGVvIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBtYXJnaW46IDA7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5ib2R5IHtcbiAgbGluZS1oZWlnaHQ6IDE7XG59XG5cbm9sLFxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5ibG9ja3F1b3RlLFxucSB7XG4gIHF1b3Rlczogbm9uZTtcbn1cblxuYmxvY2txdW90ZTpiZWZvcmUsXG5ibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsXG5xOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgY29udGVudDogbm9uZTtcbn1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2Fuc1wiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtZGlzcGxheTogZmFsbGJhY2s7XG4gIHNyYzogbG9jYWwoXCJOb3RvIFNhbnNcIiksIHVybChcIi9hc3NldHMvZm9udHMvTm90b1NhbnMtNTAwLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2Fuc1wiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtZGlzcGxheTogZmFsbGJhY2s7XG4gIHNyYzogbG9jYWwoXCJOb3RvIFNhbnNcIiksIHVybChcIi9hc3NldHMvZm9udHMvTm90b1NhbnMtNzAwLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2Fuc1wiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA5MDA7XG4gIGZvbnQtZGlzcGxheTogZmFsbGJhY2s7XG4gIHNyYzogbG9jYWwoXCJOb3RvIFNhbnNcIiksIHVybChcIi9hc3NldHMvZm9udHMvTm90b1NhbnMtOTAwLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2VyaWZcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LWRpc3BsYXk6IGZhbGxiYWNrO1xuICBzcmM6IGxvY2FsKFwiTm90byBTZXJpZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9Ob3RvU2VyaWYtNTAwLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2VyaWZcIjtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LWRpc3BsYXk6IGZhbGxiYWNrO1xuICBzcmM6IGxvY2FsKFwiTm90byBTZXJpZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9Ob3RvU2VyaWYtNTAwLUl0YWxpYy53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJOb3RvIFNlcmlmXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBmYWxsYmFjaztcbiAgc3JjOiBsb2NhbChcIk5vdG8gU2VyaWZcIiksIHVybChcIi9hc3NldHMvZm9udHMvTm90b1NlcmlmLTcwMC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJOb3RvIFNlcmlmXCI7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBmYWxsYmFjaztcbiAgc3JjOiBsb2NhbChcIk5vdG8gU2VyaWZcIiksIHVybChcIi9hc3NldHMvZm9udHMvTm90b1NlcmlmLTcwMC1JdGFsaWMud29mZjJcIikgZm9ybWF0KFwid29mZjJcIik7XG59XG4vKipcbiAqIEdIQ29sb3JzIHRoZW1lIGJ5IEF2aSBBcnlhbiAoaHR0cDovL2F2aWFyeWFuLmluKVxuICogSW5zcGlyZWQgYnkgR2l0aHViIHN5bnRheCBjb2xvcmluZ1xuICovXG5jb2RlW2NsYXNzKj1sYW5ndWFnZS1dLFxucHJlW2NsYXNzKj1sYW5ndWFnZS1dIHtcbiAgY29sb3I6ICMzOTNBMzQ7XG4gIGZvbnQtZmFtaWx5OiBcIkNvbnNvbGFzXCIsIFwiQml0c3RyZWFtIFZlcmEgU2FucyBNb25vXCIsIFwiQ291cmllciBOZXdcIiwgQ291cmllciwgbW9ub3NwYWNlO1xuICBkaXJlY3Rpb246IGx0cjtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgd2hpdGUtc3BhY2U6IHByZTtcbiAgd29yZC1zcGFjaW5nOiBub3JtYWw7XG4gIHdvcmQtYnJlYWs6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAwLjllbTtcbiAgbGluZS1oZWlnaHQ6IDEuMmVtO1xuICAtbW96LXRhYi1zaXplOiA0O1xuICAtby10YWItc2l6ZTogNDtcbiAgdGFiLXNpemU6IDQ7XG4gIC13ZWJraXQtaHlwaGVuczogbm9uZTtcbiAgLW1vei1oeXBoZW5zOiBub25lO1xuICAtbXMtaHlwaGVuczogbm9uZTtcbiAgaHlwaGVuczogbm9uZTtcbn1cblxucHJlID4gY29kZVtjbGFzcyo9bGFuZ3VhZ2UtXSB7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG5wcmVbY2xhc3MqPWxhbmd1YWdlLV06Oi1tb3otc2VsZWN0aW9uLCBwcmVbY2xhc3MqPWxhbmd1YWdlLV0gOjotbW96LXNlbGVjdGlvbixcbmNvZGVbY2xhc3MqPWxhbmd1YWdlLV06Oi1tb3otc2VsZWN0aW9uLCBjb2RlW2NsYXNzKj1sYW5ndWFnZS1dIDo6LW1vei1zZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjYjNkNGZjO1xufVxuXG5wcmVbY2xhc3MqPWxhbmd1YWdlLV06OnNlbGVjdGlvbiwgcHJlW2NsYXNzKj1sYW5ndWFnZS1dIDo6c2VsZWN0aW9uLFxuY29kZVtjbGFzcyo9bGFuZ3VhZ2UtXTo6c2VsZWN0aW9uLCBjb2RlW2NsYXNzKj1sYW5ndWFnZS1dIDo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogI2IzZDRmYztcbn1cblxuLyogQ29kZSBibG9ja3MgKi9cbnByZVtjbGFzcyo9bGFuZ3VhZ2UtXSB7XG4gIHBhZGRpbmc6IDFlbTtcbiAgbWFyZ2luOiAwLjVlbSAwO1xuICBvdmVyZmxvdzogYXV0bztcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZGRkZDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbi8qIElubGluZSBjb2RlICovXG46bm90KHByZSkgPiBjb2RlW2NsYXNzKj1sYW5ndWFnZS1dIHtcbiAgcGFkZGluZzogMC4yZW07XG4gIHBhZGRpbmctdG9wOiAxcHg7XG4gIHBhZGRpbmctYm90dG9tOiAxcHg7XG4gIGJhY2tncm91bmQ6ICNmOGY4Zjg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGRkZGQ7XG59XG5cbi50b2tlbi5jb21tZW50LFxuLnRva2VuLnByb2xvZyxcbi50b2tlbi5kb2N0eXBlLFxuLnRva2VuLmNkYXRhIHtcbiAgY29sb3I6ICM5OTk5ODg7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLnRva2VuLm5hbWVzcGFjZSB7XG4gIG9wYWNpdHk6IDAuNztcbn1cblxuLnRva2VuLnN0cmluZyxcbi50b2tlbi5hdHRyLXZhbHVlIHtcbiAgY29sb3I6ICNlMzExNmM7XG59XG5cbi50b2tlbi5wdW5jdHVhdGlvbixcbi50b2tlbi5vcGVyYXRvciB7XG4gIGNvbG9yOiAjMzkzQTM0OyAvKiBubyBoaWdobGlnaHQgKi9cbn1cblxuLnRva2VuLmVudGl0eSxcbi50b2tlbi51cmwsXG4udG9rZW4uc3ltYm9sLFxuLnRva2VuLm51bWJlcixcbi50b2tlbi5ib29sZWFuLFxuLnRva2VuLnZhcmlhYmxlLFxuLnRva2VuLmNvbnN0YW50LFxuLnRva2VuLnByb3BlcnR5LFxuLnRva2VuLnJlZ2V4LFxuLnRva2VuLmluc2VydGVkIHtcbiAgY29sb3I6ICMzNmFjYWE7XG59XG5cbi50b2tlbi5hdHJ1bGUsXG4udG9rZW4ua2V5d29yZCxcbi50b2tlbi5hdHRyLW5hbWUsXG4ubGFuZ3VhZ2UtYXV0b2hvdGtleSAudG9rZW4uc2VsZWN0b3Ige1xuICBjb2xvcjogIzAwYTRkYjtcbn1cblxuLnRva2VuLmZ1bmN0aW9uLFxuLnRva2VuLmRlbGV0ZWQsXG4ubGFuZ3VhZ2UtYXV0b2hvdGtleSAudG9rZW4udGFnIHtcbiAgY29sb3I6ICM5YTA1MGY7XG59XG5cbi50b2tlbi50YWcsXG4udG9rZW4uc2VsZWN0b3IsXG4ubGFuZ3VhZ2UtYXV0b2hvdGtleSAudG9rZW4ua2V5d29yZCB7XG4gIGNvbG9yOiAjMDAwMDlmO1xufVxuXG4udG9rZW4uaW1wb3J0YW50LFxuLnRva2VuLmZ1bmN0aW9uLFxuLnRva2VuLmJvbGQge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnRva2VuLml0YWxpYyB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuOnJvb3Qge1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0OiAjZjdmN2Y3O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX193aWRnZXQ6ICNmMWYxZjE7XG4gIC0tY29sb3JfX2JhY2tncm91bmRfX2NvbnRyYXN0OiAjMjYyNjI2O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdF9fd2lkZ2V0OiAjMTQxNDE0O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdF9fYWx0OiAjMDUwNTA1O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19ncmFkaWVudDogbGluZWFyLWdyYWRpZW50KDE4MGRlZyxyZ2JhKDAsMCwwLDApIDAsd2hpdGUgMTAwJSk7XG4gIC0tY29sb3JfX292ZXJsYXk6IHJnYmEoMCwwLDAsLjUpO1xuICAtLWNvbG9yX19saW5rOiBoc2woMjQwLCAxMDAlLCA2MCUpO1xuICAtLWNvbG9yX19saW5rX192aXNpdGVkOiBoc2woMjg1LCAxMDAlLCA0MCUpO1xuICAtLWNvbG9yX190ZXh0OiBibGFjaztcbiAgLS1jb2xvcl9fdGV4dC1hbHQ6ICM0MDQwNDA7XG4gIC0tY29sb3JfX3RleHRfX2NvbnRyYXN0OiB3aGl0ZTtcbiAgLS1jb2xvcl9fdGV4dF9fY29udHJhc3RfX2FsdDogIzY2NjY2NjtcbiAgLS1mb250X19keW5hbWljLXNjYWxpbmc6IDAuM3Z3O1xuICAtLWZvbnRfX3JhdGlvOiAxLjI1O1xuICAtLWZvbnRfX2R5bmFtaWMtcmF0aW86IDEuMztcbiAgLS1mb250X19zaXplOiAxLjZyZW07XG4gIC0tZm9udF9fc2l6ZS1iYXNlOiAxLjRyZW07XG4gIC0tZm9udF9fc2l6ZV9faGVhZGluZy00OiBjYWxjKCAodmFyKC0tZm9udF9fc2l6ZS1iYXNlKSAqIHZhcigtLWZvbnRfX3JhdGlvKSkgKyAodmFyKC0tZm9udF9fZHluYW1pYy1zY2FsaW5nKSAqIHZhcigtLWZvbnRfX2R5bmFtaWMtcmF0aW8pKSk7XG4gIC0tZm9udF9fc2l6ZV9faGVhZGluZy0zOiBjYWxjKCAodmFyKC0tZm9udF9fc2l6ZS1iYXNlKSAqIHZhcigtLWZvbnRfX3JhdGlvKSAqIHZhcigtLWZvbnRfX3JhdGlvKSkgKyAodmFyKC0tZm9udF9fZHluYW1pYy1zY2FsaW5nKSAqIHZhcigtLWZvbnRfX2R5bmFtaWMtcmF0aW8pICogdmFyKC0tZm9udF9fZHluYW1pYy1yYXRpbykpKTtcbiAgLS1mb250X19zaXplX19oZWFkaW5nLTI6IGNhbGMoICh2YXIoLS1mb250X19zaXplLWJhc2UpICogdmFyKC0tZm9udF9fcmF0aW8pICogdmFyKC0tZm9udF9fcmF0aW8pICogdmFyKC0tZm9udF9fcmF0aW8pKSArICh2YXIoLS1mb250X19keW5hbWljLXNjYWxpbmcpICogdmFyKC0tZm9udF9fZHluYW1pYy1yYXRpbykgKiB2YXIoLS1mb250X19keW5hbWljLXJhdGlvKSAqIHZhcigtLWZvbnRfX2R5bmFtaWMtcmF0aW8pKSk7XG4gIC0tZm9udF9fc2l6ZV9faGVhZGluZy0xOiBjYWxjKCAodmFyKC0tZm9udF9fc2l6ZS1iYXNlKSAqIHZhcigtLWZvbnRfX3JhdGlvKSAqIHZhcigtLWZvbnRfX3JhdGlvKSAqIHZhcigtLWZvbnRfX3JhdGlvKSAqIHZhcigtLWZvbnRfX3JhdGlvKSkgKyAodmFyKC0tZm9udF9fZHluYW1pYy1zY2FsaW5nKSAqIHZhcigtLWZvbnRfX2R5bmFtaWMtcmF0aW8pICogdmFyKC0tZm9udF9fZHluYW1pYy1yYXRpbykgKiB2YXIoLS1mb250X19keW5hbWljLXJhdGlvKSAqIHZhcigtLWZvbnRfX2R5bmFtaWMtcmF0aW8pKSk7XG4gIC0tZm9udF9fc2Fucy1zZXJpZjogTm90byBTYW5zLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgLS1mb250X19zZXJpZjogTm90byBTZXJpZiwgVGltZXMgTmV3IFJvbWFuLCBzZXJpZjtcbiAgLS1mb250X19tb25vOiBtb25vc3BhY2U7XG4gIC0tbWF4LXdpZHRoX19iYXNlOiAxMjByZW07XG4gIC0tbWF4LXdpZHRoX19jb250ZW50OiA4MHJlbTtcbiAgLS1tYXJnaW5fX3Rpbnk6IDAuNXJlbTtcbiAgLS1tYXJnaW5fX3NtYWxsOiAxcmVtO1xuICAtLW1hcmdpbl9fbWVkaXVtOiAycmVtO1xuICAtLW1hcmdpbl9fbGFyZ2U6IDRyZW07XG4gIC0tcGFkZGluZ19fc21hbGw6IDFyZW07XG4gIC0tcGFkZGluZ19fbWVkaXVtOiAycmVtO1xuICAtLXBhZGRpbmdfX2xhcmdlOiA0cmVtO1xuICAtLWhlYWRlcl9faGVpZ2h0OiA2cmVtO1xuICAtLWhlYWRlcl9fZm9udC1zY2FsZTogOTAlO1xufVxuXG5odG1sIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgaGVpZ2h0OiAxMDAlO1xuICBmb250LXNpemU6IDYyLjUlO1xufVxuXG5ib2R5IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleDogMTtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kKTtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NhbnMtc2VyaWYpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMS44O1xufVxuYm9keSBtYWluIHtcbiAgZmxleDogMTtcbn1cblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbnAsXG51bCxcbm9sLFxuYmxvY2txdW90ZSxcbmJyLFxuYnV0dG9uLFxuY2FudmFzLFxuY2FwdGlvbixcbmNvbCxcbmNvbGdyb3VwLFxuZGQsXG5kbCxcbmR0LFxuZW1iZWQsXG5maWVsZHNldCxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5pbWcsXG5mb3JtLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbn1cblxuY29kZSB7XG4gIHBhZGRpbmc6IDAuMmVtIDAuNGVtO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0KTtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX21vbm8pO1xuICBmb250LXNpemU6IDkwJTtcbn1cblxuZmlndXJlIGZpZ2NhcHRpb24ge1xuICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NlcmlmKTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU1ZW0pIHtcbiAgZmlndXJlIHtcbiAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICB9XG59XG5maWd1cmUuLWZ1bGwgPiBwaWN0dXJlIGltZywgZmlndXJlLi1mdWxsID4gaW1nLCBmaWd1cmUuLWZ1bGwgaWZyYW1lLCBmaWd1cmUuLWZ1bGwgPiBkaXYge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDB2dzsgLyogT3Igd2hhdGV2ZXIgbWF4IHdpZHRoIGlzICovXG4gIG1hcmdpbi1sZWZ0OiBjYWxjKDUwJSAtIDUwdncpOyAvKiA1MHZ3IGVxdWFscyBoYWxmIHRoZSB3aWR0aCAqL1xuICBtYXJnaW4tcmlnaHQ6IGNhbGMoNTAlIC0gNTB2dyk7XG4gIG1heC13aWR0aDogbm9uZTtcbn1cbmZpZ3VyZS4tcGl4ZWxzIHtcbiAgaW1hZ2UtcmVuZGVyaW5nOiBjcmlzcC1lZGdlcztcbn1cbmZpZ3VyZS4td2lkZSB7XG4gIC0tY2FyZF9fZXh0cmEtd2lkdGg6IDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTVlbSkge1xuICBmaWd1cmUuLXdpZGUge1xuICAgIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA2NWVtKSB7XG4gIGZpZ3VyZS4td2lkZSB7XG4gICAgLS1jYXJkX19leHRyYS13aWR0aDogMTByZW07XG4gIH1cbiAgZmlndXJlLi13aWRlID4gcGljdHVyZSBpbWcsIGZpZ3VyZS4td2lkZSA+IGltZywgZmlndXJlLi13aWRlIGlmcmFtZSwgZmlndXJlLi13aWRlID4gZGl2LCBmaWd1cmUuLXdpZGUgPiBmaWd1cmUuZ2FsbGVyeS1yb3cge1xuICAgIG1heC13aWR0aDogbm9uZTtcbiAgICB3aWR0aDogY2FsYyh2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpICsgdmFyKC0tY2FyZF9fZXh0cmEtd2lkdGgpKTtcbiAgICBtYXJnaW4tbGVmdDogY2FsYyg1MCUgLSAodmFyKC0tbWF4LXdpZHRoX19jb250ZW50KSArIHZhcigtLWNhcmRfX2V4dHJhLXdpZHRoKSkgLyAyKTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDkwZW0pIHtcbiAgZmlndXJlLi13aWRlIHtcbiAgICAtLWNhcmRfX2V4dHJhLXdpZHRoOiAzNXJlbTtcbiAgfVxufVxuZmlndXJlLmVtYmVkIGlmcmFtZSB7XG4gIGFzcGVjdC1yYXRpbzogMTYvOTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtaW4td2lkdGg6IDEwMCU7XG59XG5maWd1cmUubWFwIGlmcmFtZSB7XG4gIGhlaWdodDogNTB2aDtcbiAgbWluLXdpZHRoOiAxMDAlO1xufVxuZmlndXJlIC5pbnN0YWdyYW0tbWVkaWEge1xuICBtYXJnaW46IDAgYXV0byAhaW1wb3J0YW50O1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2Fucy1zZXJpZik7XG4gIGxpbmUtaGVpZ2h0OiAxLjI1O1xufVxuaDEgYSxcbmgyIGEsXG5oMyBhLFxuaDQgYSxcbmg1IGEsXG5oNiBhIHtcbiAgYm9yZGVyOiAwO1xufVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy0xKTtcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjJyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbmgyIHtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTIpO1xuICBmb250LXdlaWdodDogNTAwO1xufVxuXG5oMyB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy0zKTtcbn1cblxuaDQge1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XG59XG5cbmg1IHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuaDYge1xuICBmb250LXNpemU6IDgwJTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbnN2ZyB7XG4gIGZpbGw6IGN1cnJlbnRDb2xvcjtcbn1cblxuYSB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fbGluayk7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG59XG5hOmhvdmVyLCBhOmZvY3VzIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5hOnZpc2l0ZWQge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpO1xufVxuXG51bCB7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAxLjVlbTtcbiAgbGlzdC1zdHlsZTogZGlzYztcbn1cbnVsIHVsIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDFlbTtcbn1cblxub2wge1xuICBwYWRkaW5nLWlubGluZS1zdGFydDogMS41ZW07XG4gIGxpc3Qtc3R5bGU6IGRlY2ltYWw7XG59XG5vbCBvbCB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAxZW07XG59XG5vbCBsaTpsYXN0LW9mLXR5cGUge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uY29udGFpbnMtdGFzay1saXN0IHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLm5vLXN0eWxlIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XG59XG5cbi50YXNrLWxpc3QtaXRlbS1jaGVja2JveCB7XG4gIG1hcmdpbi1sZWZ0OiAtMS42ZW07XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuW2lkXSB7XG4gIHNjcm9sbC1tYXJnaW4tdG9wOiAxZXg7XG59XG5cbnNlbGVjdCB7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZSk7XG4gIHBhZGRpbmc6IDAuNHJlbSAwLjRyZW07XG4gIGxpbmUtaGVpZ2h0OiAyO1xuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0KTtcbiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmQpO1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2Fucy1zZXJpZik7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbn1cblxuZW0ge1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2VyaWYpO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi5ub3RlIHtcbiAgcGFkZGluZzogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kX19hbHQpO1xufVxuXG4ubGVhZCB7XG4gIGZvbnQtc2l6ZTogMTE1JTtcbn1cblxuc3VwIHtcbiAgZm9udC1zaXplOiA4NSU7XG4gIHZlcnRpY2FsLWFsaWduOiBzdXBlcjtcbn1cblxuYmxvY2txdW90ZSB7XG4gIHBhZGRpbmctbGVmdDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICBib3JkZXItbGVmdDogNHB4IHNvbGlkIHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kX19hbHQpO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2VyaWYpO1xufVxuYmxvY2txdW90ZSBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAycmVtIDA7XG59XG5ibG9ja3F1b3RlID4gOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbmJsb2NrcXVvdGUgPiA6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbnEge1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NlcmlmKTtcbiAgZm9udC1zaXplOiAxMjUlO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0MGVtKSB7XG4gIHEge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKyB2YXIoLS1tYXJnaW5fX2xhcmdlKSk7XG4gICAgbWF4LXdpZHRoOiBjYWxjKDEwMCUgKyB2YXIoLS1tYXJnaW5fX2xhcmdlKSk7XG4gICAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19sYXJnZSk7XG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICAgIG1hcmdpbi1sZWZ0OiBjYWxjKDAlIC0gdmFyKC0tbWFyZ2luX19tZWRpdW0pKTtcbiAgfVxufVxucTpiZWZvcmUsIHE6YWZ0ZXIge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5jaXRlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250X19zZXJpZik7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbmNpdGUgYSB7XG4gIGJvcmRlcjogbm9uZTtcbiAgY29sb3I6IGluaGVyaXQ7XG59XG5jaXRlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi4oCU4oCJXCI7XG59XG5cbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbmhyIHtcbiAgaGVpZ2h0OiAwLjRyZW07XG4gIGJvcmRlcjogMDtcbiAgbWFyZ2luOiB2YXIoLS1tYXJnaW5fX21lZGl1bSkgMCAwO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0KTtcbn1cblxuYWJiciB7XG4gIGJvcmRlci1ib3R0b20td2lkdGg6IDFweDtcbiAgYm9yZGVyLWJvdHRvbS1zdHlsZTogZG90dGVkO1xuICBib3JkZXItYm90dG9tLWNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG4gIGZvbnQtdmFyaWFudDogYWxsLXNtYWxsLWNhcHM7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmNlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxua2JkIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX2FsdCk7XG4gIHBhZGRpbmc6IDAuMmVtIDAuNGVtO1xuICBib3JkZXItcmFkaXVzOiAwLjNlbTtcbn1cblxuLkJyZWFkY3J1bWJzIGEge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbn1cblxuLkJyZWFkY3J1bWJzIGE6aG92ZXIsXG4uQnJlYWRjcnVtYnMgYTpmb2N1cyB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fbGluayk7XG59XG5cbi5CcmVhZGNydW1icyBvbCB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1zaXplOiA4MCU7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4uQnJlYWRjcnVtYnMgb2wgbGkge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5CcmVhZGNydW1icyBvbCBsaTpiZWZvcmUge1xuICBjb250ZW50OiBub25lICFpbXBvcnRhbnQ7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLkJyZWFkY3J1bWJzIG9sIGxpOmFmdGVyIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XG4gIGNvbnRlbnQ6IFwiL1wiO1xufVxuXG4uQnJlYWRjcnVtYnMgb2wgbGk6bGFzdC1jaGlsZDphZnRlciB7XG4gIGNvbnRlbnQ6IG5vbmU7XG59XG5cbi5CdXR0b24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19saW5rKTtcbiAgY29sb3I6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kKTtcbiAgcGFkZGluZzogMC41ZW0gMC44ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGJvcmRlcjogMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgbWFyZ2luOiAwO1xufVxuLkJ1dHRvbjp2aXNpdGVkIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kKTtcbn1cbi5CdXR0b246aG92ZXIsIC5CdXR0b246Zm9jdXMge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuLkNhcmRzIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gIGdyaWQtYXV0by1mbG93OiBkZW5zZTtcbiAgZ3JpZC1nYXA6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDBlbSkge1xuICAuQ2FyZHMge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDU1ZW0pIHtcbiAgLkNhcmRzIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTVlbSkge1xuICAuQ2FyZHMuLW1heC0yLWNvbHVtbnMge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbiAgfVxufVxuXG4uQ2FyZCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWluLWhlaWdodDogMjV2aDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgcGFkZGluZzogY2FsYyh2YXIoLS1wYWRkaW5nX19zbWFsbCkgKiAxLjUpO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3RfX3dpZGdldCk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0X19jb250cmFzdCk7XG59XG4uQ2FyZC4tYWxpZ24tYm90dG9tIHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgcGFkZGluZy10b3A6IDhyZW07XG59XG4uQ2FyZC4tYWxpZ24tdG9wIHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU1ZW0pIHtcbiAgLkNhcmQucG9zdDpmaXJzdC1vZi10eXBlIHtcbiAgICBhc3BlY3QtcmF0aW86IDIxLzk7XG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IHNwYW4gMztcbiAgfVxuICAuQ2FyZC5wb3N0OmZpcnN0LW9mLXR5cGUgLkNhcmRfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDNyZW07XG4gIH1cbn1cbi5DYXJkLi1mZWF0dXJlZC1pbWFnZTphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fb3ZlcmxheSk7XG4gIGNvbnRlbnQ6IFwiXCI7XG59XG5cbi5DYXJkX19jb250ZW50IHtcbiAgei1pbmRleDogMTA7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZS1iYXNlKTtcbn1cbi5DYXJkX19jb250ZW50ID4gKiB7XG4gIG1hcmdpbjogMDtcbn1cbi5DYXJkX19jb250ZW50IHVsLFxuLkNhcmRfX2NvbnRlbnQgb2wge1xuICBwYWRkaW5nLWlubGluZS1zdGFydDogMi41cmVtO1xufVxuLkNhcmRfX2NvbnRlbnQgYSB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xufVxuLkNhcmRfX2NvbnRlbnQgb2wubWV0YWRhdGEtbGlzdCB7XG4gIG1hcmdpbi1ibG9jay1zdGFydDogMWVtO1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nLWlubGluZS1zdGFydDogMDtcbn1cbi5DYXJkX19jb250ZW50IC5tZXRhZGF0YS1saXN0X19pdGVtIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xufVxuLkNhcmRfX2NvbnRlbnQgLm1ldGFkYXRhLWxpc3RfX2l0ZW06YmVmb3JlIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgY29udGVudDogbm9uZTtcbn1cbi5DYXJkX19jb250ZW50IC5tZXRhZGF0YS1saXN0X19pdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuLkNhcmRfX2NvbnRlbnQgLm1ldGFkYXRhLWxpc3RfX2l0ZW0gLm1ldGFkYXRhLXRpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XG59XG4uQ2FyZF9fY29udGVudCAubWV0YWRhdGEtbGlzdF9faXRlbSBwIHtcbiAgbWFyZ2luOiAwO1xufVxuLkNhcmRfX2NvbnRlbnQgLm1ldGFkYXRhLWxpc3RfX2l0ZW0gLm1ldGFkYXRhLWNvbnRlbnQge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cbi5DYXJkX19jb250ZW50IC5tZXRhZGF0YS1saXN0X19pdGVtIC5tZXRhZGF0YS1saXN0X19pdGVtLXRpdGxlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xufVxuLkNhcmRfX2NvbnRlbnQgLm1ldGFkYXRhLWxpc3RfX2l0ZW0gLm1ldGFkYXRhLXZhbHVlcyB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3RfX2FsdCk7XG59XG5cbi5DYXJkX19pbWFnZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBtYXJnaW46IDA7XG4gIHotaW5kZXg6IDE7XG59XG4uQ2FyZF9faW1hZ2UgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XG59XG5cbi5DYXJkX19jb250ZW50X19leHRyYSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTA7XG4gIGZvbnQtc2l6ZTogOTAlO1xuICBsaW5lLWhlaWdodDogMTtcbn1cbi5DYXJkX19jb250ZW50X19leHRyYS4tdG9wLWxlZnQge1xuICBsZWZ0OiBjYWxjKHZhcigtLXBhZGRpbmdfX3NtYWxsKSAqIDEuNSk7XG4gIHRvcDogY2FsYyh2YXIoLS1wYWRkaW5nX19zbWFsbCkgKiAxLjUpO1xuICBtYXJnaW4tcmlnaHQ6IDhyZW07XG59XG4uQ2FyZF9fY29udGVudF9fZXh0cmEuLXRvcC1yaWdodCB7XG4gIHJpZ2h0OiBjYWxjKHZhcigtLXBhZGRpbmdfX3NtYWxsKSAqIDEuNSk7XG4gIHRvcDogY2FsYyh2YXIoLS1wYWRkaW5nX19zbWFsbCkgKiAxLjUpO1xuICBtYXJnaW4tbGVmdDogOHJlbTtcbn1cbi5DYXJkX19jb250ZW50X19leHRyYS4tc3ltYm9sIHtcbiAgZm9udC1zaXplOiAyLjVyZW07XG59XG4uQ2FyZF9fY29udGVudF9fZXh0cmEgPiA6bnRoLWNoaWxkKDIpIHtcbiAgbWFyZ2luLWxlZnQ6IDAuNWVtO1xufVxuLkNhcmRfX2NvbnRlbnRfX2V4dHJhIC50YWdzIC50YWcge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xuICB3aWR0aDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiAwLjRlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC40ZW07XG59XG4uQ2FyZF9fY29udGVudF9fZXh0cmEgLnRhZ3MgLnRhZzpiZWZvcmUge1xuICBjb250ZW50OiBcIiNcIjtcbn1cbi5DYXJkX19jb250ZW50X19leHRyYSAud2VibWVudGlvbnNfX2NvdW50IHtcbiAgbWFyZ2luLXJpZ2h0OiAwLjVlbTtcbn1cblxuLkNhcmRfX3Bvc3QtbGlzdCB7XG4gIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xuICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbiAgbGlzdC1zdHlsZTogZGVjaW1hbC1sZWFkaW5nLXplcm87XG59XG5cbi5DYXJkX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0X19jb250cmFzdCk7XG4gIGZvbnQtc2l6ZTogMi41cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xufVxuLkNhcmRfX3RpdGxlIGEge1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuLkNhcmRfX3RpdGxlLWxpbms6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5Db21tZW50c19fbGlzdCB7XG4gIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XG59XG5cbi5Db21tZW50c19yZWZlcmVuY2Uge1xuICBmb250LXNpemU6IGNhbGModmFyKC0tZm9udF9fc2l6ZSkgKiAwLjg1KTtcbn1cblxuLkNvbW1lbnRzX19wYW5lbCB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG4uQ29tbWVudHNfX3BhbmVsIC5Db21tZW50c19fbGlrZXMsXG4uQ29tbWVudHNfX3BhbmVsIC5Db21tZW50c19fcmVwb3N0cyxcbi5Db21tZW50c19fcGFuZWwgLkNvbW1lbnRzX19jb21tZW50cyB7XG4gIG1hcmdpbi1yaWdodDogMC41ZW07XG59XG4uQ29tbWVudHNfX3BhbmVsIC5Db21tZW50c19fc3RhdHVzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0KTtcbiAgcGFkZGluZzogdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcbn1cbi5Db21tZW50c19fcGFuZWwgc3ZnIHtcbiAgaGVpZ2h0OiAxLjJlbTtcbiAgdmVydGljYWwtYWxpZ246IHN1Yjtcbn1cblxuLkNvbW1lbnRzX19tZXRhZGF0YSB7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZS1iYXNlKTtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG59XG4uQ29tbWVudHNfX21ldGFkYXRhIHNwYW4uQ29tbWVudHNfX2F1dGhvciB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG59XG5cbi5Db21tZW50c19fYXV0aG9yIC5Db21tZW50c19fYXZhdGFyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDEuMnJlbTtcbiAgbGVmdDogMXJlbTtcbiAgd2lkdGg6IDQuNXJlbTtcbiAgbWFyZ2luLXJpZ2h0OiAwLjVlbTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xufVxuXG4uQ29tbWVudHNfX2xpc3QtaXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgcGFkZGluZzogMXJlbSAxcmVtIDFyZW0gN3JlbTtcbiAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xufVxuLkNvbW1lbnRzX19saXN0LWl0ZW06YmVmb3JlIHtcbiAgY29udGVudDogbm9uZSAhaW1wb3J0YW50O1xufVxuLkNvbW1lbnRzX19saXN0LWl0ZW0uLWlzLW1lIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX2FsdCk7XG59XG4uQ29tbWVudHNfX2xpc3QtaXRlbS4tcmVwb3N0LW9mIHtcbiAgcGFkZGluZy1sZWZ0OiA0cmVtO1xufVxuLkNvbW1lbnRzX19saXN0LWl0ZW0uLXJlcG9zdC1vZiAuQ29tbWVudHNfX2F1dGhvciAuQ29tbWVudHNfX2F2YXRhciB7XG4gIHRvcDogMC44cmVtO1xuICBsZWZ0OiAwLjVyZW07XG4gIHdpZHRoOiAyLjVyZW07XG59XG4uQ29tbWVudHNfX2xpc3QtaXRlbTpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kX193aWRnZXQpO1xufVxuLkNvbW1lbnRzX19saXN0LWl0ZW06bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG4uQ29tbWVudHNfX2xpc3QtaXRlbSBwIHtcbiAgbWFyZ2luOiAwLjNlbSAwIDAgMDtcbn1cblxuLkZvcm0ge1xuICBtYXJnaW4tdG9wOiAyZW07XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250X19zYW5zLXNlcmlmKTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplKTtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbn1cbi5Gb3JtLi1pbmFjdGl2ZSBsYWJlbCB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cbi5Gb3JtLi1pbmFjdGl2ZSAuLWNvbGxhcHNlZCB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cbi5Gb3JtLi1pbmFjdGl2ZSB0ZXh0YXJlYSB7XG4gIHJlc2l6ZTogbm9uZSAhaW1wb3J0YW50O1xuICBtaW4taGVpZ2h0OiAwICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMi43ZW07XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4uRm9ybV9fZ3JvdXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbjogMCAwIDFlbSAwO1xufVxuLkZvcm1fX2dyb3VwIGlucHV0LCAuRm9ybV9fZ3JvdXAgdGV4dGFyZWEge1xuICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0KTtcbiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmQpO1xuICBwYWRkaW5nOiAwLjVlbTtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIHdpZHRoOiAxMDAlO1xufVxuLkZvcm1fX2dyb3VwIGlucHV0OmZvY3VzLCAuRm9ybV9fZ3JvdXAgdGV4dGFyZWE6Zm9jdXMge1xuICBib3JkZXItY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbn1cbi5Gb3JtX19ncm91cCBpbnB1dDpmb2N1cyArIGxhYmVsLCAuRm9ybV9fZ3JvdXAgdGV4dGFyZWE6Zm9jdXMgKyBsYWJlbCB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG59XG4uRm9ybV9fZ3JvdXAgdGV4dGFyZWEge1xuICByZXNpemU6IHZlcnRpY2FsO1xuICBtaW4taGVpZ2h0OiAxNXJlbTtcbn1cbi5Gb3JtX19ncm91cCBsYWJlbCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNHB4O1xuICB0b3A6IC03cHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmQpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBwYWRkaW5nOiAwIDAuNWVtO1xufVxuXG5vbC5hY3Rpdml0eS1saXN0IHtcbiAgbWFyZ2luLWJsb2NrLXN0YXJ0OiAxZW07XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwO1xufVxuXG4uYWN0aXZpdHktbGlzdF9faXRlbSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fc21hbGwpO1xufVxuLmFjdGl2aXR5LWxpc3RfX2l0ZW06bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG4uYWN0aXZpdHktbGlzdF9faXRlbSAuaWNvbiB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIG1hcmdpbi10b3A6IDAuNGVtO1xuICBtYXJnaW4tcmlnaHQ6IDAuNWVtO1xufVxuLmFjdGl2aXR5LWxpc3RfX2l0ZW0gLmFjdGl2aXR5LXRpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XG59XG4uYWN0aXZpdHktbGlzdF9faXRlbSBwIHtcbiAgbWFyZ2luOiAwO1xufVxuLmFjdGl2aXR5LWxpc3RfX2l0ZW0gLmFjdGl2aXR5LWNvbnRlbnQge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cbi5hY3Rpdml0eS1saXN0X19pdGVtIC5hY3Rpdml0eS1tZXRhZGF0YSB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xufVxuXG5vbC5ib29rLWxpc3Qge1xuICBsaXN0LXN0eWxlOiBkaXNjO1xufVxuXG4uYm9vay1saXN0X19pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG59XG4uYm9vay1saXN0X19pdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuLmJvb2stbGlzdF9faXRlbSAuYm9vay10aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTQpO1xufVxuLmJvb2stbGlzdF9faXRlbSBwIHtcbiAgbWFyZ2luOiAwO1xufVxuLmJvb2stbGlzdF9faXRlbSAuYm9vay1tZXRhZGF0YSB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xufVxuXG4ucG9zdC1oZWFkZXIgLnBvc3QtdGl0bGUgLmJlZXItbGFiZWwge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHdpZHRoOiA0MHJlbTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG59XG5cbi5iZWVyLXRpdGxlIGEgLmJlZXItbGFiZWwge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xufVxuLmJlZXItdGl0bGUgYTpob3ZlciAuYmVlci1sYWJlbCwgLmJlZXItdGl0bGUgYTp2aXNpdGVkIC5iZWVyLWxhYmVsIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbn1cblxuLmJlZXItc3RhdGlzdGljc19fbGlzdCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC1hdXRvLWZsb3c6IGRlbnNlO1xuICBncmlkLWdhcDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbiAgbWF4LXdpZHRoOiAzMGVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDI1ZW0pIHtcbiAgLmJlZXItc3RhdGlzdGljc19fbGlzdCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcbiAgfVxufVxuLmJlZXItc3RhdGlzdGljc19fbGlzdC1pdGVtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cbi5iZWVyLXN0YXRpc3RpY3NfX2xpc3QtaXRlbV9fbGFiZWwge1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xufVxuLmJlZXItc3RhdGlzdGljc19fbGlzdC1pdGVtX192YWx1ZSB7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy00KTtcbn1cblxuLmJlZXItaW5ncmVkaWVudHNfX2xhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ibG9jay1zdGFydDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICBtYXJnaW4tYmxvY2stZW5kOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbn1cbi5iZWVyLWluZ3JlZGllbnRzX19sYWJlbCAuaWNvbiB7XG4gIG1hcmdpbi1sZWZ0OiAtMC4yZW07XG59XG4uYmVlci1pbmdyZWRpZW50c19fbGlzdCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1heC13aWR0aDogMjVlbTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuLmJlZXItaW5ncmVkaWVudHNfX2xpc3QtaXRlbSB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMy44ZW0gMWZyIGF1dG87XG4gIGdyaWQtZ2FwOiAwIDAuNXJlbTtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xuICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcImxlZnQgbWlkZGxlIHJpZ2h0XCIgXCJsZWZ0IGJvdHRvbSBib3R0b20tcmlnaHRcIjtcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG59XG4uYmVlci1pbmdyZWRpZW50c19fbGlzdC1pdGVtX19sZWZ0IHtcbiAgZ3JpZC1hcmVhOiBsZWZ0O1xufVxuLmJlZXItaW5ncmVkaWVudHNfX2xpc3QtaXRlbV9fbWlkZGxlIHtcbiAgZ3JpZC1hcmVhOiBtaWRkbGU7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLmJlZXItaW5ncmVkaWVudHNfX2xpc3QtaXRlbV9fcmlnaHQge1xuICBncmlkLWFyZWE6IHJpZ2h0O1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cbi5iZWVyLWluZ3JlZGllbnRzX19saXN0LWl0ZW1fX2JvdHRvbS1sZWZ0IHtcbiAgZ3JpZC1hcmVhOiBib3R0b20tbGVmdDtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplLWJhc2UpO1xufVxuLmJlZXItaW5ncmVkaWVudHNfX2xpc3QtaXRlbV9fYm90dG9tIHtcbiAgZ3JpZC1hcmVhOiBib3R0b207XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZS1iYXNlKTtcbn1cbi5iZWVyLWluZ3JlZGllbnRzX19saXN0LWl0ZW1fX2JvdHRvbS1yaWdodCB7XG4gIGdyaWQtYXJlYTogYm90dG9tLXJpZ2h0O1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uYmF0Y2hlc19fc3RhdHVzIHtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplKTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0KTtcbiAgYm90dG9tOiAwLjFlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nOiAwLjNlbTtcbn1cblxuLmJlZXJzIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gIGdyaWQtYXV0by1mbG93OiBkZW5zZTtcbiAgZ3JpZC1nYXA6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDBlbSkge1xuICAuYmVlcnMge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbiAgfVxufVxuXG4uYmVlciB7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcbn1cbi5iZWVyIGE6aG92ZXIgLmJlZXItbGFiZWwsIC5iZWVyIGE6Zm9jdXMgLmJlZXItbGFiZWwge1xuICBmaWx0ZXI6IGRyb3Atc2hhZG93KDAgMCAxcmVtIHZhcigtLWNvbG9yX19saW5rKSk7XG59XG4uYmVlciAuYmVlci10aXRsZSB7XG4gIG1hcmdpbjogMDtcbn1cbi5iZWVyIC5iZWVyLWxhYmVsIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHRyYW5zaXRpb246IDAuMjVzIGFsbCBlYXNlO1xufVxuXG4uY29sdW1ucyB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICBncmlkLWdhcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDQwZW0pIHtcbiAgLmNvbHVtbnMge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIG1pbm1heCgwLCAxZnIpKTtcbiAgfVxufVxuXG4uY29udGVudCBwcmUge1xuICB3aWR0aDogMTAwdnc7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgcGFkZGluZzogdmFyKC0tcGFkZGluZ19fc21hbGwpO1xuICBib3JkZXI6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kX19hbHQpO1xuICBsaW5lLWhlaWdodDogMTI1JTtcbiAgb3ZlcmZsb3cteTogaGlkZGVuO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBtYXJnaW4tbGVmdDogMDtcbn1cbi5jb250ZW50IHByZSBjb2RlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDA7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xufVxuXG4uaGVhZGVyLWFuY2hvciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbn1cbi5oZWFkZXItYW5jaG9yOnZpc2l0ZWQge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xufVxuLmhlYWRlci1hbmNob3I6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAtMC44ZW07XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGNvbnRlbnQ6IFwiI1wiO1xufVxuLmhlYWRlci1hbmNob3I6Zm9jdXMsIC5oZWFkZXItYW5jaG9yOmhvdmVyIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX19saW5rKTtcbn1cbi5oZWFkZXItYW5jaG9yOmZvY3VzOmJlZm9yZSwgLmhlYWRlci1hbmNob3I6aG92ZXI6YmVmb3JlIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmZpZ3VyZS5leGlmIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuZmlndXJlLmV4aWY6aG92ZXIgLmV4aWZfX2NvbnRhaW5lciwgZmlndXJlLmV4aWY6Zm9jdXMgLmV4aWZfX2NvbnRhaW5lciB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbmZpZ3VyZS5leGlmOmhvdmVyIC5leGlmX19jb250YWluZXIsIGZpZ3VyZS5leGlmOmZvY3VzIC5leGlmX19jb250YWluZXIge1xuICBvcGFjaXR5OiAxO1xufVxuXG4uZXhpZl9fY29udGFpbmVyIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKGNhbGMoLTEwMCUgLSB2YXIoLS1tYXJnaW5fX3NtYWxsKSkpO1xuICBmb250LXNpemU6IDc1JTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICBvcGFjaXR5OiAwO1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHRfX2NvbnRyYXN0KTtcbiAgdGV4dC1zaGFkb3c6IDAgMCAycHggIzAwMCwgMCAwIDJweCAjMDAwLCAwIDAgNHB4ICMwMDAsIDAgMCAzcHggIzAwMDtcbn1cbi5leGlmX19kYXRhIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4uZXhpZl9fZGF0YTpiZWZvcmUge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGNvbnRlbnQ6IGF0dHIoZGF0YS10eXBlKTtcbiAgd2lkdGg6IDUuNWVtO1xufVxuXG4uY29udGVudCAuZW1iZWQudmlkZW8ge1xuICBhc3BlY3QtcmF0aW86IDE2Lzk7XG59XG5cbi5jb250ZW50IGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5jb250ZW50IHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogdmFyKC0tbWF4LXdpZHRoX19jb250ZW50KTtcbiAgcGFkZGluZzogdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0MGVtKSB7XG4gIC5jb250ZW50IHtcbiAgICBwYWRkaW5nLWJvdHRvbTogdmFyKC0tcGFkZGluZ19fbGFyZ2UpO1xuICB9XG59XG4uY29udGVudCA+ICoge1xuICB3aWR0aDogMTAwJTtcbn1cbi5jb250ZW50ID4gOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi5jb250ZW50ID4gOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG5vbC5nYW1lLWxpc3Qge1xuICBtYXJnaW4tYmxvY2stc3RhcnQ6IDFlbTtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XG59XG5cbi5nYW1lLWxpc3RfX2l0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbn1cbi5nYW1lLWxpc3RfX2l0ZW06bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG4uZ2FtZS1saXN0X19pdGVtIC5pY29uIHtcbiAgd2lkdGg6IDFlbTtcbiAgaGVpZ2h0OiAxZW07XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBtYXJnaW4tdG9wOiAwLjRlbTtcbiAgbWFyZ2luLXJpZ2h0OiAwLjVlbTtcbn1cbi5nYW1lLWxpc3RfX2l0ZW0gLmdhbWUtdGl0bGUge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy00KTtcbn1cbi5nYW1lLWxpc3RfX2l0ZW0gcCB7XG4gIG1hcmdpbjogMDtcbn1cbi5nYW1lLWxpc3RfX2l0ZW0gLmdhbWUtbWV0YWRhdGEge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbn1cblxuLmljb24ge1xuICB3aWR0aDogMWVtO1xuICBoZWlnaHQ6IDFlbTtcbiAgdmVydGljYWwtYWxpZ246IHN1YjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBib3R0b206IDAuMXJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmljb24uLWxhcmdlIHtcbiAgd2lkdGg6IDEuNWVtO1xuICBoZWlnaHQ6IDEuNWVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuLmljb24uLXN0cmF2YSB7XG4gIGNvbG9yOiAjZTM0YTAwO1xufVxuLmljb24uLWdhbWluZyB7XG4gIGNvbG9yOiAjQjE3MkZEO1xufVxuLmljb24uLWZlcm1lbnRhYmxlcyB7XG4gIGNvbG9yOiAjZmZjYTVhO1xufVxuLmljb24uLWhvcHMge1xuICBjb2xvcjogIzZmOWE0Yjtcbn1cbi5pY29uLi15ZWFzdCB7XG4gIGNvbG9yOiAjZTJiNjkzO1xufVxuXG4ua2ctY2FyZCB7XG4gIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU1ZW0pIHtcbiAgLmtnLWNhcmQge1xuICAgIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbGFyZ2UpO1xuICAgIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fbGFyZ2UpO1xuICB9XG59XG5cbi5rZy1jYXJkLmtnLWVtYmVkLWNhcmQge1xuICBhc3BlY3QtcmF0aW86IDE2Lzk7XG59XG4ua2ctY2FyZC5rZy1lbWJlZC1jYXJkIGlmcmFtZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGFzcGVjdC1yYXRpbzogaW5oZXJpdDtcbn1cbi5rZy1jYXJkLmtnLWVtYmVkLWNhcmQucmVzcG9uc2l2ZS12aWRlbyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5rZy1jYXJkLmtnLWVtYmVkLWNhcmQucmVzcG9uc2l2ZS12aWRlbyBpZnJhbWUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmtnLWNhcmQua2ctd2lkdGgtZnVsbCBpbWcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDB2dzsgLyogT3Igd2hhdGV2ZXIgbWF4IHdpZHRoIGlzICovXG4gIG1hcmdpbi1sZWZ0OiBjYWxjKDUwJSAtIDUwdncpOyAvKiA1MHZ3IGVxdWFscyBoYWxmIHRoZSB3aWR0aCAqL1xuICBtYXJnaW4tcmlnaHQ6IGNhbGMoNTAlIC0gNTB2dyk7XG4gIG1heC13aWR0aDogbm9uZTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU1ZW0pIHtcbiAgLmtnLWNhcmQua2ctZ2FsbGVyeS1jYXJkIHtcbiAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX2xhcmdlKTtcbiAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX2xhcmdlKTtcbiAgfVxufVxuLmtnLWNhcmQua2ctZ2FsbGVyeS1jYXJkIC5rZy1nYWxsZXJ5LWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4ua2ctY2FyZC5rZy1nYWxsZXJ5LWNhcmQgLmtnLWdhbGxlcnktY29udGFpbmVyIC5rZy1nYWxsZXJ5LXJvdyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuLmtnLWNhcmQua2ctZ2FsbGVyeS1jYXJkIC5rZy1nYWxsZXJ5LWNvbnRhaW5lciAua2ctZ2FsbGVyeS1yb3c6bm90KDpmaXJzdC1vZi10eXBlKSB7XG4gIG1hcmdpbjogMXJlbSAwIDAgMDtcbn1cbi5rZy1jYXJkLmtnLWdhbGxlcnktY2FyZCAua2ctZ2FsbGVyeS1jb250YWluZXIgLmtnLWdhbGxlcnktcm93IC5rZy1nYWxsZXJ5LWltYWdlOm5vdCg6Zmlyc3Qtb2YtdHlwZSkge1xuICBtYXJnaW46IDAgMCAwIHZhcigtLW1hcmdpbl9fc21hbGwpO1xufVxuLmtnLWNhcmQua2ctZ2FsbGVyeS1jYXJkIC5rZy1nYWxsZXJ5LWNvbnRhaW5lciAua2ctZ2FsbGVyeS1yb3cgLmtnLWdhbGxlcnktaW1hZ2UgaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmtnLWNhcmQua2ctd2lkdGgtd2lkZSB7XG4gIHdpZHRoOiAxMDAlO1xuICAtLWNhcmRfX2V4dHJhLXdpZHRoOiAwO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU1ZW0pIHtcbiAgLmtnLWNhcmQua2ctd2lkdGgtd2lkZSB7XG4gICAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19sYXJnZSk7XG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19sYXJnZSk7XG4gIH1cbiAgLmtnLWNhcmQua2ctd2lkdGgtd2lkZSA+ICoge1xuICAgIG1heC13aWR0aDogbm9uZTtcbiAgICB3aWR0aDogY2FsYyh2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpICsgdmFyKC0tY2FyZF9fZXh0cmEtd2lkdGgpKTtcbiAgICBtYXJnaW4tbGVmdDogY2FsYyg1MCUgLSAodmFyKC0tbWF4LXdpZHRoX19jb250ZW50KSArIHZhcigtLWNhcmRfX2V4dHJhLXdpZHRoKSkgLyAyKTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDY1ZW0pIHtcbiAgLmtnLWNhcmQua2ctd2lkdGgtd2lkZSB7XG4gICAgLS1jYXJkX19leHRyYS13aWR0aDogMTJyZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA5MGVtKSB7XG4gIC5rZy1jYXJkLmtnLXdpZHRoLXdpZGUge1xuICAgIC0tY2FyZF9fZXh0cmEtd2lkdGg6IDM1cmVtO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0MGVtKSB7XG4gIC5nYWxsZXJ5IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgLmdhbGxlcnkgLmdhbGxlcnktcm93IHtcbiAgICBtYXJnaW46IHZhcigtLW1hcmdpbl9fc21hbGwpIDAgMCAwO1xuICB9XG4gIC5nYWxsZXJ5IC5nYWxsZXJ5LXJvdzpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxuICAuZ2FsbGVyeSAuZ2FsbGVyeS1yb3c6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxufVxuXG4uZ2FsbGVyeS1yb3cge1xuICBtYXJnaW46IDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDBlbSkge1xuICAuZ2FsbGVyeS1yb3cge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICB9XG4gIC5nYWxsZXJ5LXJvdyA+IGZpZ3VyZSB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG4gIC5nYWxsZXJ5LXJvdyA+IGZpZ3VyZTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xuICB9XG4gIC5nYWxsZXJ5LXJvdyBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5wYWNrX19sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYmxvY2stc3RhcnQ6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgbWFyZ2luLWJsb2NrLWVuZDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG59XG4ucGFja19fbGFiZWwgLmljb24ge1xuICBtYXJnaW4tcmlnaHQ6IGNhbGMoMC4yZW0gKyAwLjVyZW0pO1xufVxuLnBhY2tfX2l0ZW1fX2NhdGVnb3J5LWhlYWRpbmcge1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuLnBhY2tfX2xpc3Qge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXgtd2lkdGg6IDM1ZW07XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ibG9jay1zdGFydDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICBtYXJnaW4tYmxvY2stZW5kOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbn1cbi5wYWNrX19saXN0X19iYXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAxMDAlO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxICFpbXBvcnRhbnQ7XG4gIG9wYWNpdHk6IDAuNTtcbn1cbi5wYWNrX19saXN0LWl0ZW0ge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDJlbSAxZnIgYXV0bztcbiAgZ3JpZC1nYXA6IDAgMC41cmVtO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwibGVmdCBtaWRkbGUgcmlnaHRcIiBcImJvdHRvbS1sZWZ0IGJvdHRvbSBib3R0b20tcmlnaHRcIjtcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG59XG4ucGFja19fbGlzdC1pdGVtLi1vdmVydmlldyB7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmVtIDFmciBhdXRvO1xuICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcImxlZnQgbWlkZGxlIHJpZ2h0XCIgXCJib3R0b20tbGVmdCBib3R0b20gYm90dG9tLXJpZ2h0XCI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZDogaHNsYSgwLCAwJSwgNzAlLCAwLjEpO1xuICBtYXJnaW4tYm90dG9tOiAwLjFyZW07XG59XG4ucGFja19fbGlzdC1pdGVtLi1vdmVydmlldyAuaWNvbiB7XG4gIG1hcmdpbi1sZWZ0OiAwLjNyZW07XG59XG4ucGFja19fbGlzdC1pdGVtLi1vdmVydmlldyA+IHNwYW4ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDI7XG59XG4ucGFja19fbGlzdC1pdGVtX19sZWZ0IHtcbiAgZ3JpZC1hcmVhOiBsZWZ0O1xufVxuLnBhY2tfX2xpc3QtaXRlbV9fbWlkZGxlIHtcbiAgZ3JpZC1hcmVhOiBtaWRkbGU7XG59XG4ucGFja19fbGlzdC1pdGVtX19yaWdodCB7XG4gIGdyaWQtYXJlYTogcmlnaHQ7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuLnBhY2tfX2xpc3QtaXRlbV9fYm90dG9tLWxlZnQge1xuICBncmlkLWFyZWE6IGJvdHRvbS1sZWZ0O1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XG59XG4ucGFja19fbGlzdC1pdGVtX19ib3R0b20ge1xuICBncmlkLWFyZWE6IGJvdHRvbTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplLWJhc2UpO1xufVxuLnBhY2tfX2xpc3QtaXRlbV9fYm90dG9tLXJpZ2h0IHtcbiAgZ3JpZC1hcmVhOiBib3R0b20tcmlnaHQ7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZS1iYXNlKTtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG4ucGFja19fbGlzdC1idXR0b24ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIGJvdHRvbTogMDtcbn1cblxuLmpzIC5wYWNrX19saXN0LWNvbnRhaW5lciB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4uanMgLnBhY2tfX2xpc3QtY29udGFpbmVyLi1jb2xsYXBzZWQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1heC1oZWlnaHQ6IDIwcmVtO1xufVxuLmpzIC5wYWNrX19saXN0LWNvbnRhaW5lci4tY29sbGFwc2VkOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fZ3JhZGllbnQpO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG59XG4uanMgLnBhY2tfX2xpc3QtY29udGFpbmVyID4gOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLnBhZ2UtaGVhZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBwYWRkaW5nLXRvcDogdmFyKC0tcGFkZGluZ19fbGFyZ2UpO1xuICBwYWRkaW5nLWJvdHRvbTogdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xufVxuLnBhZ2UtaGVhZGVyIGEge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xufVxuLnBhZ2UtaGVhZGVyIC5wYWdlLXRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG4gIGZvbnQtd2VpZ2h0OiA5MDA7XG59XG4ucGFnZS1oZWFkZXIgLnBhZ2UtZGF0ZSB7XG4gIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xufVxuLnBhZ2UtaGVhZGVyIC50YWdzIHtcbiAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG59XG4ucGFnZS1oZWFkZXIgLnRhZ3MgLnRhZyB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xuICBtYXJnaW4tcmlnaHQ6IDAuNGVtO1xufVxuLnBhZ2UtaGVhZGVyIC50YWdzIC50YWc6YmVmb3JlIHtcbiAgY29udGVudDogXCIjXCI7XG59XG4ucGFnZS1oZWFkZXIgLnBhZ2UtbWV0YWRhdGEge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDEwO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiB2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpO1xuICBwYWRkaW5nOiAwIHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG59XG4ucGFnZS1oZWFkZXIgLnBhZ2UtbWV0YWRhdGEgOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi5wYWdlLWhlYWRlciAucGFnZS1tZXRhZGF0YSA6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5Ac3VwcG9ydHMgKGJhY2tncm91bmQtY2xpcDogdGV4dCkgYW5kIChiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTIwZGVnLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMCUsIHZhcigtLWNvbG9yX19saW5rKSAzNy41JSwgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDEwMCUpKSB7XG4gIC5wYWdlLWhlYWRlcjpub3QoLi1mZWF0dXJlLWltYWdlKSAucGFnZS10aXRsZSB7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEyMGRlZywgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDAlLCB2YXIoLS1jb2xvcl9fbGluaykgMzcuNSUsIHZhcigtLWNvbG9yX19saW5rX192aXNpdGVkKSAxMDAlKTtcbiAgICBiYWNrZ3JvdW5kLWNsaXA6IHRleHQ7XG4gICAgY29sb3I6IHRyYW5zcGFyZW50O1xuICB9XG59XG4ucGFnZS1oZWFkZXIuLWZlYXR1cmUtaW1hZ2Uge1xuICBtaW4taGVpZ2h0OiA1MHZtaW47XG4gIG1heC1oZWlnaHQ6IDgwdmg7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xufVxuLnBhZ2UtaGVhZGVyLi1mZWF0dXJlLWltYWdlIGEge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHRfX2NvbnRyYXN0KTtcbn1cbi5wYWdlLWhlYWRlci4tZmVhdHVyZS1pbWFnZSAucGFnZS1oZWFkZXJfX2ltYWdlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICB0b3A6IDA7XG4gIG1hcmdpbjogMDtcbiAgb3BhY2l0eTogMC41O1xufVxuLnBhZ2UtaGVhZGVyLi1mZWF0dXJlLWltYWdlIC5wYWdlLWhlYWRlcl9faW1hZ2UgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XG59XG5cbi5wb3N0IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5jYW5vbmljYWwge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbn1cbi5jYW5vbmljYWw6YmVmb3JlIHtcbiAgY29udGVudDogXCJMw6RuazogXCI7XG59XG5cbi5wb3N0LWhlYWRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgcGFkZGluZy10b3A6IHZhcigtLXBhZGRpbmdfX2xhcmdlKTtcbiAgcGFkZGluZy1ib3R0b206IHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbn1cbi5wb3N0LWhlYWRlciBhIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbn1cbi5wb3N0LWhlYWRlciAucG9zdC10aXRsZSB7XG4gIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fc21hbGwpO1xuICBmb250LXdlaWdodDogOTAwO1xufVxuLnBvc3QtaGVhZGVyIC5wb3N0LXRpdGxlIHN2ZyB7XG4gIHdpZHRoOiA5MCU7XG4gIG1heC13aWR0aDogNjByZW07XG4gIHBhZGRpbmctYm90dG9tOiB2YXIoLS1wYWRkaW5nX19zbWFsbCk7XG59XG4ucG9zdC1oZWFkZXIgLnBvc3QtZGF0ZSB7XG4gIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xufVxuLnBvc3QtaGVhZGVyIC50YWdzIHtcbiAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG59XG4ucG9zdC1oZWFkZXIgLnRhZ3MgLnRhZyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG1hcmdpbi1yaWdodDogMC40ZW07XG59XG4ucG9zdC1oZWFkZXIgLnRhZ3MgLnRhZzpiZWZvcmUge1xuICBjb250ZW50OiBcIiNcIjtcbn1cbi5wb3N0LWhlYWRlciAucG9zdC1tZXRhZGF0YSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTA7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IHZhcigtLW1heC13aWR0aF9fY29udGVudCk7XG4gIHBhZGRpbmc6IDAgdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcbn1cbi5wb3N0LWhlYWRlciAucG9zdC1tZXRhZGF0YSA6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuLnBvc3QtaGVhZGVyIC5wb3N0LW1ldGFkYXRhIDpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbkBzdXBwb3J0cyAoYmFja2dyb3VuZC1jbGlwOiB0ZXh0KSBhbmQgKGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMjBkZWcsIHZhcigtLWNvbG9yX19saW5rX192aXNpdGVkKSAwJSwgdmFyKC0tY29sb3JfX2xpbmspIDM3LjUlLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMTAwJSkpIHtcbiAgLnBvc3QtaGVhZGVyOm5vdCguLWZlYXR1cmUtaW1hZ2UpIC5wb3N0LXRpdGxlIHtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTIwZGVnLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMCUsIHZhcigtLWNvbG9yX19saW5rKSAzNy41JSwgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDEwMCUpO1xuICAgIGJhY2tncm91bmQtY2xpcDogdGV4dDtcbiAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cbn1cbi5wb3N0LWhlYWRlci4tZmVhdHVyZS1pbWFnZSB7XG4gIG1pbi1oZWlnaHQ6IDUwdm1pbjtcbiAgbWF4LWhlaWdodDogODB2aDtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0X19jb250cmFzdCk7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG59XG4ucG9zdC1oZWFkZXIuLWZlYXR1cmUtaW1hZ2UgYSB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xufVxuLnBvc3QtaGVhZGVyLi1mZWF0dXJlLWltYWdlIC5wb3N0LWhlYWRlcl9faW1hZ2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMDtcbiAgbWFyZ2luOiAwO1xuICBvcGFjaXR5OiAwLjU7XG59XG4ucG9zdC1oZWFkZXIuLWZlYXR1cmUtaW1hZ2UgLnBvc3QtaGVhZGVyX19pbWFnZSBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcbn1cblxuLm5leHQtcG9zdCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogY2FsYyh2YXIoLS1wYWRkaW5nX19tZWRpdW0pICogNCkgMDtcbiAgbWFyZ2luOiBhdXRvO1xuICBiYWNrZ3JvdW5kOiBibGFjaztcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBjb2xvcjogd2hpdGU7XG59XG4ubmV4dC1wb3N0IC5yZWFkLW1vcmUtdGV4dCB7XG4gIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NhbnMtc2VyaWYpO1xuICBmb250LXNpemU6IDkwJTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuLm5leHQtcG9zdCAubmV4dC1wb3N0X190aXRsZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy0xKTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjJyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG59XG4ubmV4dC1wb3N0IC5uZXh0LXBvc3RfX3RpdGxlOnZpc2l0ZWQge1xuICBjb2xvcjogd2hpdGU7XG59XG4ubmV4dC1wb3N0IC5uZXh0LXBvc3RfX3RpdGxlOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG4ubmV4dC1wb3N0IC5uZXh0LXBvc3RfX21ldGFkYXRhIHtcbiAgei1pbmRleDogMTA7XG4gIHdpZHRoOiAxMDB2dztcbiAgbWF4LXdpZHRoOiB2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpO1xuICBwYWRkaW5nOiAwIHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG59XG4ubmV4dC1wb3N0IC5uZXh0LXBvc3RfX2RhdGUge1xuICBtYXJnaW4tdG9wOiB2YXIoLS1wYWRkaW5nX19zbWFsbCk7XG59XG4ubmV4dC1wb3N0IC5uZXh0LXBvc3RfX2RhdGUge1xuICBtYXJnaW4tdG9wOiB2YXIoLS1wYWRkaW5nX19zbWFsbCk7XG59XG4ubmV4dC1wb3N0IC5uZXh0LXBvc3RfX2ltYWdlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICB0b3A6IDA7XG4gIG1hcmdpbjogMDtcbiAgb3BhY2l0eTogMC41O1xufVxuLm5leHQtcG9zdCAubmV4dC1wb3N0X19pbWFnZSBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcbn1cbi5uZXh0LXBvc3Q6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX292ZXJsYXkpO1xuICBjb250ZW50OiBcIlwiO1xufVxuXG4uc2VwYXJhdG9yLWhlYWRpbmcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbGFyZ2UpO1xuICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNSk7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbi5zZXBhcmF0b3ItaGVhZGluZzphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMDtcbiAgdG9wOiA3cHg7XG4gIGxlZnQ6IDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAycHg7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kX193aWRnZXQpO1xuICBjb250ZW50OiBcIlwiO1xufVxuLnNlcGFyYXRvci1oZWFkaW5nIHNwYW4ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDEwO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmc6IDAgMWVtO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG59XG5cbi5wb3N0LWxpc3Qge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nLWlubGluZS1zdGFydDogMDtcbn1cblxuLnBvc3QtbGlzdF9faXRlbSB7XG4gIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbn1cbi5wb3N0LWxpc3RfX2l0ZW06bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG4ucG9zdC1saXN0X19pdGVtIC5wb3N0LXRpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XG59XG4ucG9zdC1saXN0X19pdGVtIHAge1xuICBtYXJnaW46IDA7XG59XG5cbi5wb3N0IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5jYW5vbmljYWwge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbn1cbi5jYW5vbmljYWw6YmVmb3JlIHtcbiAgY29udGVudDogXCJMw6RuazogXCI7XG59XG5cbi5zaXRlLWZvb3RlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIHBhZGRpbmc6IHZhcigtLXBhZGRpbmdfX21lZGl1bSkgMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kX193aWRnZXQpO1xufVxuLnNpdGUtZm9vdGVyIC5jb2x1bW4ge1xuICBtYXJnaW46IHZhcigtLW1hcmdpbl9fbWVkaXVtKSAwO1xufVxuXG4uc2l0ZS1mb290ZXJfX2NvbnRlbnQge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiB2YXIoLS1tYXgtd2lkdGhfX2Jhc2UpO1xuICBwYWRkaW5nOiAwIHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG4gIGZvbnQtc2l6ZTogOTAlO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgZ3JpZC1nYXA6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0MGVtKSB7XG4gIC5zaXRlLWZvb3Rlcl9fY29udGVudCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMmZyIDFmcjtcbiAgfVxufVxuLnNpdGUtZm9vdGVyX19jb250ZW50IGxhYmVsIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbn1cblxuLnNpdGUtZm9vdGVyX19uYXZpZ2F0aW9uIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbn1cbi5zaXRlLWZvb3Rlcl9fbmF2aWdhdGlvbiB1bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwO1xuICBtYXJnaW46IDA7XG59XG4uc2l0ZS1mb290ZXJfX25hdmlnYXRpb24gYSB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG59XG4uc2l0ZS1mb290ZXJfX25hdmlnYXRpb24gYTp2aXNpdGVkIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbn1cblxuLnNpdGUtZm9vdGVyX19oZWFkaW5nIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTQpO1xufVxuXG4uc2l0ZS1oZWFkZXJfX25hdmlnYXRpb24ge1xuICBmbGV4OiAxO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cbi5zaXRlLWhlYWRlcl9fbmF2aWdhdGlvbiB1bCB7XG4gIG1hcmdpbjogMDtcbn1cbi5zaXRlLWhlYWRlcl9fbmF2aWdhdGlvbiB1bCBsaSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLWxlZnQ6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xufVxuLnNpdGUtaGVhZGVyX19uYXZpZ2F0aW9uIHVsIGxpOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbi5zaXRlLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kKTtcbn1cblxuLnNpdGUtaGVhZGVyX19jb250ZW50IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxMDtcbiAgZGlzcGxheTogZmxleDtcbiAgbWF4LXdpZHRoOiB2YXIoLS1tYXgtd2lkdGhfX2Jhc2UpO1xuICBoZWlnaHQ6IHZhcigtLWhlYWRlcl9faGVpZ2h0KTtcbiAgbWF4LWhlaWdodDogdmFyKC0taGVhZGVyX19oZWlnaHQpO1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBwYWRkaW5nLXJpZ2h0OiB2YXIoLS1wYWRkaW5nX19tZWRpdW0pO1xuICBwYWRkaW5nLWxlZnQ6IHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG4gIG1hcmdpbjogYXV0bztcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XG4gIGZvbnQtc2l6ZTogdmFyKC0taGVhZGVyX19mb250LXNjYWxlKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWhlYWRlcl9faGVpZ2h0KTtcbn1cbi5zaXRlLWhlYWRlcl9fY29udGVudCAuc2l0ZV9fdGl0bGUge1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICBsZXR0ZXItc3BhY2luZzogaW5oZXJpdDtcbiAgbWFyZ2luOiAwO1xufVxuLnNpdGUtaGVhZGVyX19jb250ZW50IC5zaXRlX19pbWFnZSB7XG4gIHdpZHRoOiBjYWxjKHZhcigtLWhlYWRlcl9faGVpZ2h0KSAqIDAuNSk7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLXJpZ2h0OiAwLjc1ZW07XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cbi5zaXRlLWhlYWRlcl9fY29udGVudCBhIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cbi5zaXRlLWhlYWRlcl9fY29udGVudCBhOnZpc2l0ZWQge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xufVxuLnNpdGUtaGVhZGVyX19jb250ZW50IC5zaXRlX19kZXNjcmlwdGlvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250X19zZXJpZik7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0MGVtKSB7XG4gIC5zaXRlLWhlYWRlcl9fY29udGVudCAuc2l0ZV9fZGVzY3JpcHRpb24ge1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgfVxufVxuXG4uc3RhdGlzdGljc19fbGlzdCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC1hdXRvLWZsb3c6IGRlbnNlO1xuICBncmlkLWdhcDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbiAgbWF4LXdpZHRoOiAzNWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDI1ZW0pIHtcbiAgLnN0YXRpc3RpY3NfX2xpc3Qge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnI7XG4gIH1cbn1cbi5zdGF0aXN0aWNzX19saXN0Li1jb2x1bW4tY291bnQtNCB7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0MGVtKSB7XG4gIC5zdGF0aXN0aWNzX19saXN0Li1jb2x1bW4tY291bnQtNCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmciAxZnI7XG4gIH1cbn1cbi5zdGF0aXN0aWNzX19saXN0LWl0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xufVxuLnN0YXRpc3RpY3NfX2xpc3QtaXRlbV9fbGFiZWwge1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xufVxuLnN0YXRpc3RpY3NfX2xpc3QtaXRlbV9fdmFsdWUge1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XG59XG5cbi50YWctaGVhZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBwYWRkaW5nLXRvcDogdmFyKC0tcGFkZGluZ19fbGFyZ2UpO1xuICBwYWRkaW5nLWJvdHRvbTogdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xufVxuLnRhZy1oZWFkZXIgLnRhZy1tZXRhZGF0YSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTA7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IHZhcigtLW1heC13aWR0aF9fY29udGVudCk7XG4gIHBhZGRpbmc6IDAgdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcbn1cbi50YWctaGVhZGVyIC50YWctbWV0YWRhdGEgOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi50YWctaGVhZGVyIC50YWctbWV0YWRhdGEgOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuLnRhZy1oZWFkZXIgLnRhZy10aXRsZSB7XG4gIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fc21hbGwpO1xuICBmb250LXdlaWdodDogOTAwO1xufVxuLnRhZy1oZWFkZXIgLnRhZy1kYXRlIHtcbiAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG59XG5Ac3VwcG9ydHMgKGJhY2tncm91bmQtY2xpcDogdGV4dCkgYW5kIChiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTIwZGVnLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMCUsIHZhcigtLWNvbG9yX19saW5rKSAzNy41JSwgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDEwMCUpKSB7XG4gIC50YWctaGVhZGVyOm5vdCguLWZlYXR1cmUtaW1hZ2UpIC50YWctdGl0bGUge1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMjBkZWcsIHZhcigtLWNvbG9yX19saW5rX192aXNpdGVkKSAwJSwgdmFyKC0tY29sb3JfX2xpbmspIDM3LjUlLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMTAwJSk7XG4gICAgYmFja2dyb3VuZC1jbGlwOiB0ZXh0O1xuICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgfVxufVxuLnRhZy1oZWFkZXIuLWZlYXR1cmUtaW1hZ2Uge1xuICBoZWlnaHQ6IDUwdmg7XG4gIG1pbi1oZWlnaHQ6IDI1cmVtO1xuICBtYXgtaGVpZ2h0OiA1MHZ3O1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHRfX2NvbnRyYXN0KTtcbn1cbi50YWctaGVhZGVyLi1mZWF0dXJlLWltYWdlOmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19vdmVybGF5KTtcbiAgY29udGVudDogXCJcIjtcbn1cblxuYXJ0aWNsZS50YWcge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnRhZ3Mge1xuICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbn1cbi50YWdzIC50YWc6YmVmb3JlIHtcbiAgY29udGVudDogXCIjXCI7XG59XG5cbi5wb3N0LXRlbXBsYXRlIG1haW4ge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG59XG5cbi50YWctdGVtcGxhdGUgbWFpbiB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kKTtcbn1cblxuLnBhZ2UtdGVtcGxhdGUgbWFpbiB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kKTtcbn1cblxuLmhvbWUtdGVtcGxhdGUgbWFpbiB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kKTtcbn1cblxuLyogRGVwcmVjYXRlZCBmaXggZm9yIHRoZSBvbGQgd2F5IG9mIGhhbmRsaW5nIGltYWdlcywganVzdCBzbyB0aGV5IGRvbid0IGxvb2sgdGVycmlibGUgKi9cbi5jb250ZW50IGltZ1tzcmMkPVwiI2xhcmdlXCJdLCAuY29udGVudCBpbWdbc3JjJD1cIiNmdWxsXCJdIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi8qIEZpeCBmb3IgMTAwdncgYW5kIGhvcml6b250YWwgc2Nyb2xsYmFyICovXG5ib2R5IHtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufVxuXG4uaGlkZGVuIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4ud3JhcHBlciB7XG4gIG1heC13aWR0aDogdmFyKC0tbWF4LXdpZHRoX19iYXNlKTtcbiAgcGFkZGluZzogMCB2YXIoLS1wYWRkaW5nX19tZWRpdW0pO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn1cblxuLnNlY29uZGFyeSB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xufVxuXG4uLWNvbHVtbi1jb3VudC0yIHtcbiAgY29sdW1uLWNvdW50OiAyO1xufVxuXG4uc3Itb25seSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogLTEgcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJvcmRlci13aWR0aDogMDtcbn1cblxuLnVwcGVyY2FzZSB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5sb3dlcmNhc2Uge1xuICB0ZXh0LXRyYW5zZm9ybTogbG93ZXJjYXNlO1xufVxuXG4uc21hbGxjYXBzIHtcbiAgZm9udC12YXJpYW50OiBzbWFsbC1jYXBzO1xufVxuXG4ubGlnaHQge1xuICBmb250LXdlaWdodDogNDAwO1xufVxuXG4uc2VtaWJvbGQge1xuICBmb250LXdlaWdodDogNjAwO1xufVxuXG4uYm9sZCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbnNtYWxsLCAuc21hbGwge1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XG59XG5cbi5ub3JtYWwge1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUpO1xufVxuXG4ubGFyZ2Uge1xuICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XG59XG5cbi5uby1qcyAuaGlkZGVuXFxAbm8tanMge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgcHJpbnQge1xuICAuaGlkZGVuXFxAcHJpbnQge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICAua2ctYm9va21hcmstdGh1bWJuYWlsIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbiAgYSwgcCwgc3BhbiwgdWwsIG9sLCBsaSwgaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG4gICAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XG4gIH1cbiAgbWFpbi5tYWluIHtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZSAhaW1wb3J0YW50O1xuICB9XG4gIC5oZWFkZXIge1xuICAgIGJhY2tncm91bmQ6IHdoaXRlICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmhlYWRlcjphZnRlciB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG4gIC5oZWFkZXIgLmhlYWRlcl9fdG9wIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmhlYWRlciAuaGVybyB7XG4gICAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmhlYWRlciAuaGVyby1jb250ZW50IHtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG4gIC5oZWFkZXIgLnBvc3RfX3JlYWQtdGltZSwgLmhlYWRlciAucG9zdF9fdGFncyB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG4gIC5jb250ZW50IHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgICBwYWRkaW5nLXRvcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICB9XG4gIC5jb250ZW50ID4gKiB7XG4gICAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZDogd2hpdGUgIWltcG9ydGFudDtcbiAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG4gIH1cbiAgLmNvbnRlbnQgcHJlIHtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZSAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICB9XG4gIC5jb250ZW50IHByZSBjb2RlIHtcbiAgICBjb2xvcjogYmxhY2sgIWltcG9ydGFudDtcbiAgfVxuICAucG9zdC1oZWFkZXIge1xuICAgIG1pbi1oZWlnaHQ6IDAgIWltcG9ydGFudDtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZSAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgICBtYXJnaW4tYm90dG9tOiAxZW0gIWltcG9ydGFudDtcbiAgfVxuICAucG9zdC1oZWFkZXIuLWZlYXR1cmUtaW1hZ2U6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLnBvc3QtaGVhZGVyIC5wb3N0LW1ldGFkYXRhIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1heC13aWR0aDogbm9uZSAhaW1wb3J0YW50O1xuICB9XG4gIC5zZXBhcmF0b3ItaGVhZGluZyB7XG4gICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTIpO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgdGV4dC10cmFuc2Zvcm06IGluaXRpYWw7XG4gIH1cbiAgLnNlcGFyYXRvci1oZWFkaW5nIHNwYW4ge1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbiAgLnNlcGFyYXRvci1oZWFkaW5nOmFmdGVyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC50YWdzIC50YWc6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIixcIjtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuMmVtO1xuICAgIG1hcmdpbi1sZWZ0OiAtMC4yZW07XG4gIH1cbiAgLnRhZ3MgLnRhZzpmaXJzdC1vZi10eXBlOmJlZm9yZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuLWNvbGxhcHNlZCB7XG4gICAgbWF4LWhlaWdodDogbm9uZSAhaW1wb3J0YW50O1xuICB9XG4gIC4tY29sbGFwc2VkOmFmdGVyIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbiAgYS5CdXR0b24ge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZDogbm9uZSAhaW1wb3J0YW50O1xuICAgIHBvc2l0aW9uOiBpbml0aWFsICFpbXBvcnRhbnQ7XG4gIH1cbiAgLkJ1dHRvbjpub3QoYSkge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICBhW2hyZWZePWh0dHBdLCBhW2hyZWZePVwiL1wiXSB7XG4gICAgY29sb3I6ICMwMDZiZjEgIWltcG9ydGFudDtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSAhaW1wb3J0YW50O1xuICB9XG4gIGFbaHJlZl49aHR0cF06YWZ0ZXIsIGFbaHJlZl49XCIvXCJdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiBbXCIgYXR0cihocmVmKSBcIl1cIjtcbiAgICBmb250LXNpemU6IDg1JTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogc3VwZXI7XG4gIH1cbn1cbkBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspIHtcbiAgOnJvb3Qge1xuICAgIC0tY29sb3JfX2JhY2tncm91bmQ6ICMxNDE0MTQ7XG4gICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0OiAjMWUxZTFlO1xuICAgIC0tY29sb3JfX2JhY2tncm91bmRfX3dpZGdldDogIzMzMzMzMztcbiAgICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdDogIzE0MTQxNDtcbiAgICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdF9fd2lkZ2V0OiAjMjYyNjI2O1xuICAgIC0tY29sb3JfX2JhY2tncm91bmRfX2NvbnRyYXN0X19hbHQ6ICMzMzMzMzM7XG4gICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fZ3JhZGllbnQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcscmdiYSgwLDAsMCwwKSAwLCMxNDE0MTQgMTAwJSk7XG4gICAgLS1jb2xvcl9fb3ZlcmxheTogcmdiYSgwLDAsMCwuNSk7XG4gICAgLS1jb2xvcl9fbGluazogIzYxODNmZDtcbiAgICAtLWNvbG9yX19saW5rX192aXNpdGVkOiAjQjE3MkZEO1xuICAgIC0tY29sb3JfX3RleHQ6ICNmMWYxZjE7XG4gICAgLS1jb2xvcl9fdGV4dC1hbHQ6ICNhNmE2YTY7XG4gICAgLS1jb2xvcl9fdGV4dF9fY29udHJhc3Q6IHdoaXRlO1xuICB9XG59XG5bZGF0YS10aGVtZT1saWdodF0ge1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0OiAjZjdmN2Y3O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX193aWRnZXQ6ICNmMWYxZjE7XG4gIC0tY29sb3JfX2JhY2tncm91bmRfX2NvbnRyYXN0OiAjMjYyNjI2O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdF9fd2lkZ2V0OiAjMTQxNDE0O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdF9fYWx0OiAjMDUwNTA1O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19ncmFkaWVudDogbGluZWFyLWdyYWRpZW50KDE4MGRlZyxyZ2JhKDAsMCwwLDApIDAsd2hpdGUgMTAwJSk7XG4gIC0tY29sb3JfX292ZXJsYXk6IHJnYmEoMCwwLDAsLjUpO1xuICAtLWNvbG9yX19saW5rOiBoc2woMjQwLCAxMDAlLCA2MCUpO1xuICAtLWNvbG9yX19saW5rX192aXNpdGVkOiBoc2woMjg1LCAxMDAlLCA0MCUpO1xuICAtLWNvbG9yX190ZXh0OiBibGFjaztcbiAgLS1jb2xvcl9fdGV4dC1hbHQ6ICM0MDQwNDA7XG4gIC0tY29sb3JfX3RleHRfX2NvbnRyYXN0OiB3aGl0ZTtcbiAgLS1jb2xvcl9fdGV4dF9fY29udHJhc3RfX2FsdDogI2E5YTlhOTtcbn1cblxuW2RhdGEtdGhlbWU9ZGFya10ge1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kOiAjMTQxNDE0O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19hbHQ6ICMxZTFlMWU7XG4gIC0tY29sb3JfX2JhY2tncm91bmRfX3dpZGdldDogIzMzMzMzMztcbiAgLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3Q6ICMxNDE0MTQ7XG4gIC0tY29sb3JfX2JhY2tncm91bmRfX2NvbnRyYXN0X193aWRnZXQ6ICMyNjI2MjY7XG4gIC0tY29sb3JfX2JhY2tncm91bmRfX2NvbnRyYXN0X19hbHQ6ICMzMzMzMzM7XG4gIC0tY29sb3JfX2JhY2tncm91bmRfX2dyYWRpZW50OiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLHJnYmEoMCwwLDAsMCkgMCwjMTQxNDE0IDEwMCUpO1xuICAtLWNvbG9yX19vdmVybGF5OiByZ2JhKDAsMCwwLC41KTtcbiAgLS1jb2xvcl9fbGluazogIzYxODNmZDtcbiAgLS1jb2xvcl9fbGlua19fdmlzaXRlZDogI0IxNzJGRDtcbiAgLS1jb2xvcl9fdGV4dDogI2YxZjFmMTtcbiAgLS1jb2xvcl9fdGV4dC1hbHQ6ICNhNmE2YTY7XG4gIC0tY29sb3JfX3RleHRfX2NvbnRyYXN0OiB3aGl0ZTtcbiAgLS1jb2xvcl9fdGV4dF9fY29udHJhc3RfX2FsdDogI2E5YTlhOTtcbn0iLCIvKiBNQUlOXG4tLS0tLS0tLS0tLS0tLS1cbkltcG9ydCBhbGwgcmVsZXZhbnQgZmlsZXNcbi0tLS0tLS0tLS0tLS0tLSAqL1xuXG5AaW1wb3J0IFwiMDEuc2V0dGluZ3MvYnJlYWtwb2ludHMuc2Nzc1wiO1xuQGltcG9ydCBcIjAxLnNldHRpbmdzL2NvbG9ycy5zY3NzXCI7XG5AaW1wb3J0IFwiMDEuc2V0dGluZ3MvZm9udHMuc2Nzc1wiO1xuQGltcG9ydCBcIjAxLnNldHRpbmdzL3NpemVzLnNjc3NcIjtcbkBpbXBvcnQgXCIwMi50b29scy9taXhpbnMuc2Nzc1wiO1xuQGltcG9ydCBcIjAzLmdlbmVyaWMvX2Nzcy1yZXNldC5zY3NzXCI7XG5AaW1wb3J0IFwiMDMuZ2VuZXJpYy9fZm9udHMtLW5vdG8uc2Nzc1wiO1xuQGltcG9ydCBcIjAzLmdlbmVyaWMvX3ByaXNtLS1jb2RlLWhpZ2hsaWdodGluZy5zY3NzXCI7XG5AaW1wb3J0IFwiMDMuZ2VuZXJpYy9fcm9vdC12YXJpYWJsZXMuc2Nzc1wiO1xuQGltcG9ydCBcIjAzLmdlbmVyaWMvZ2VuZXJpYy5zY3NzXCI7XG5AaW1wb3J0IFwiMDQuZWxlbWVudHMvY29kZS5zY3NzXCI7XG5AaW1wb3J0IFwiMDQuZWxlbWVudHMvZmlndXJlLnNjc3NcIjtcbkBpbXBvcnQgXCIwNC5lbGVtZW50cy9oZWFkaW5ncy5zY3NzXCI7XG5AaW1wb3J0IFwiMDQuZWxlbWVudHMvaW1hZ2VzLnNjc3NcIjtcbkBpbXBvcnQgXCIwNC5lbGVtZW50cy9saW5rcy5zY3NzXCI7XG5AaW1wb3J0IFwiMDQuZWxlbWVudHMvbGlzdHMuc2Nzc1wiO1xuQGltcG9ydCBcIjA0LmVsZW1lbnRzL3BzZXVkby5zY3NzXCI7XG5AaW1wb3J0IFwiMDQuZWxlbWVudHMvc2VsZWN0LnNjc3NcIjtcbkBpbXBvcnQgXCIwNC5lbGVtZW50cy90eXBvZ3JhcGh5LnNjc3NcIjtcbkBpbXBvcnQgXCIwNS5vYmplY3RzL0JyZWFkY3J1bWJzLnNjc3NcIjtcbkBpbXBvcnQgXCIwNS5vYmplY3RzL0J1dHRvbi5zY3NzXCI7XG5AaW1wb3J0IFwiMDUub2JqZWN0cy9DYXJkLnNjc3NcIjtcbkBpbXBvcnQgXCIwNS5vYmplY3RzL0NvbW1lbnRzLnNjc3NcIjtcbkBpbXBvcnQgXCIwNS5vYmplY3RzL0Zvcm0uc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvYWN0aXZpdHktbGlzdC5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9ib29rLWxpc3Quc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvYnJld2VyeV9fYmVlcl9fbGFiZWwuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvYnJld2VyeV9fYmVlci5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9icmV3ZXJ5X19iZWVycy5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9jb2x1bW5zLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL2NvbnRlbnRfX2NvZGUtYmxvY2suc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvY29udGVudF9faGVhZGluZy1hbmNob3JzLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL2NvbnRlbnRfX21lZGlhX19maWd1cmVfX2V4aWYuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvY29udGVudF9fbWVkaWFfX2xpZ2h0Ym94LnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL2NvbnRlbnRfX21lZGlhX192aWRlb3Muc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvY29udGVudF9fbWVkaWEuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvY29udGVudC5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9nYW1lLWxpc3Quc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvaWNvbi5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9rb2VuaWctY2FyZC0tY2FyZC5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9rb2VuaWctY2FyZC0tZW1iZWQuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMva29lbmlnLWNhcmQtLWZ1bGwuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMva29lbmlnLWNhcmQtLWdhbGxlcnkuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMva29lbmlnLWNhcmQtLXdpZGUuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvbWVkaWFfX2dhbGxlcnkuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvcGFjay5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9wYWdlX19oZWFkZXIuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvcGFnZS5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9wb3N0X19oZWFkZXIuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvcG9zdF9fbmV4dC1wb3N0LnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL3Bvc3RfX3NlcGFyYXRvci1oZWFkaW5nLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL3Bvc3QtbGlzdC5zY3NzXCI7XG5AaW1wb3J0IFwiMDYuY29tcG9uZW50cy9wb3N0LnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL3NpdGUtZm9vdGVyLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL3NpdGUtaGVhZGVyX19uYXZpZ2F0aW9uLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL3NpdGUtaGVhZGVyLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL3N0YXRpc3RpY3Muc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvdGFnX19oZWFkZXIuc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvdGFnLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL3RhZ3Muc2Nzc1wiO1xuQGltcG9ydCBcIjA2LmNvbXBvbmVudHMvdGVtcGxhdGVzLnNjc3NcIjtcbkBpbXBvcnQgXCIwNi5jb21wb25lbnRzL3RoZW1lLWNob29zZXIuc2Nzc1wiO1xuQGltcG9ydCBcIjA3Lm92ZXJyaWRlcy9maXgub2xkLWltYWdlLXN0eWxlcy5zY3NzXCI7XG5AaW1wb3J0IFwiMDcub3ZlcnJpZGVzL2ZpeC5zY3JvbGxiYXJzLnNjc3NcIjtcbkBpbXBvcnQgXCIwNy5vdmVycmlkZXMvaGVscGVycy5zY3NzXCI7XG5AaW1wb3J0IFwiMDcub3ZlcnJpZGVzL3ByaW50LnNjc3NcIjtcbkBpbXBvcnQgXCIwNy5vdmVycmlkZXMvdGhlbWVzLnNjc3NcIjtcbiIsIi8qIEJyZWFrcG9pbnRzXG4tLS0tLS0tLS0tLS0tLS0tLS0tXG5CcmVha3BvaW50cyBmb3IgdmFyaW91cyBzY3JlZW4gc2l6ZXNcbi0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuJGh1Z2U6IDkwZW07XG4kbGFyZ2U6IDY1ZW07XG4kbWVkaXVtOiA1NWVtO1xuJHNtYWxsOiA0MGVtO1xuJHRpbnk6IDI1ZW07XG5cbiRicmVha3BvaW50czogKFxuICAgICAgICBcImh1Z2VcIjogKG1pbi13aWR0aDogJGh1Z2UpLFxuICAgICAgICBcImxhcmdlXCI6IChtaW4td2lkdGg6ICRsYXJnZSksXG4gICAgICAgIFwibWVkaXVtXCI6IChtaW4td2lkdGg6ICRtZWRpdW0pLFxuICAgICAgICBcInNtYWxsXCI6IChtaW4td2lkdGg6ICRzbWFsbCksXG4gICAgICAgIFwidGlueVwiOiAobWluLXdpZHRoOiAkdGlueSksXG4pO1xuIiwiLyogQ29sb3JzXG4tLS0tLS0tLS0tLS0tLS0tLS0tXG5BbGwgY29sb3JzIHVzZWQgdGhyb3VnaG91dCB0aGUgdGhlbWVcbi0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbiRjb2xvcl9fOTctYnJpZ2h0bmVzczogI2Y3ZjdmNztcbiRjb2xvcl9fOTUtYnJpZ2h0bmVzczogI2YxZjFmMTtcbiRjb2xvcl9fNzktYnJpZ2h0bmVzczogI2M5YzljOTtcbiRjb2xvcl9fNjUtYnJpZ2h0bmVzczogI2E2YTZhNjtcbiRjb2xvcl9fNTItYnJpZ2h0bmVzczogIzg1ODU4NTtcbiRjb2xvcl9fNDUtYnJpZ2h0bmVzczogIzczNzM3MztcbiRjb2xvcl9fMzUtYnJpZ2h0bmVzczogIzU5NTk1OTtcbiRjb2xvcl9fMjUtYnJpZ2h0bmVzczogIzQwNDA0MDtcbiRjb2xvcl9fMTUtYnJpZ2h0bmVzczogIzI2MjYyNjtcbiRjb2xvcl9fMTEtYnJpZ2h0bmVzczogIzFjMWMxYztcbiRjb2xvcl9fOC1icmlnaHRuZXNzOiAjMTQxNDE0O1xuJGNvbG9yX18yLWJyaWdodG5lc3M6ICMwNTA1MDU7XG5cbiRjb2xvcl9fYmx1ZTogaHNsKDI0MCwgMTAwJSwgNjAlKTtcbiRjb2xvcl9fcHVycGxlOiBoc2woMjg1LCAxMDAlLCA0MCUpO1xuJGNvbG9yX19ncmVlbjogaHNsKDEyMCwgMTAwJSwgMTclKTtcbiRjb2xvcl9fcmVkOiBoc2woMCwgODglLCAzNSUpO1xuXG4kY29sb3JfX3RyYW5zcGFyZW50LWJsYWNrOiBoc2xhKDAsIDAlLCAwJSwgMC44KTtcbiIsIi8qIEZvbnRzXG4tLS0tLS0tLS0tLS0tLS1cbkZvbnRzXG4tLS0tLS0tLS0tLS0tLS0gKi9cblxuJGZvbnRfX3NhbnMtc2VyaWY6IFwiTm90byBTYW5zXCIsIEFyaWFsLCBzYW5zLXNlcmlmO1xuJGZvbnRfX3NlcmlmOiBcIk5vdG8gU2VyaWZcIiwgXCJUaW1lcyBOZXcgUm9tYW5cIiwgc2VyaWY7XG4kZm9udF9fbW9ub3NwYWNlOiBtb25vc3BhY2U7XG5cbiRmb250X19zaXplOiAxLjZyZW07XG4kZm9udF9fc2l6ZV9fYmFzZTogMS40cmVtO1xuXG4kZm9udF9fZHluYW1pYy1zY2FsaW5nOiAwLjN2dztcbiRmb250X19yYXRpbzogMS4yNTtcbiRmb250X19keW5hbWljLXJhdGlvOiAxLjM7XG4iLCIvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0L1xuICAgdjIuMCB8IDIwMTEwMTI2XG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxuKi9cblxuaHRtbCxcbmJvZHksXG5kaXYsXG5zcGFuLFxuYXBwbGV0LFxub2JqZWN0LFxuaWZyYW1lLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxucCxcbmJsb2NrcXVvdGUsXG5wcmUsXG5hLFxuYWJicixcbmFjcm9ueW0sXG5hZGRyZXNzLFxuYmlnLFxuY2l0ZSxcbmNvZGUsXG5kZWwsXG5kZm4sXG5lbSxcbmltZyxcbmlucyxcbmtiZCxcbnEsXG5zLFxuc2FtcCxcbnNtYWxsLFxuc3RyaWtlLFxuc3Ryb25nLFxuc3ViLFxuc3VwLFxudHQsXG52YXIsXG5iLFxudSxcbmksXG5jZW50ZXIsXG5kbCxcbmR0LFxuZGQsXG5vbCxcbnVsLFxubGksXG5maWVsZHNldCxcbmZvcm0sXG5sYWJlbCxcbmxlZ2VuZCxcbnRhYmxlLFxuY2FwdGlvbixcbnRib2R5LFxudGZvb3QsXG50aGVhZCxcbnRyLFxudGgsXG50ZCxcbmFydGljbGUsXG5hc2lkZSxcbmNhbnZhcyxcbmRldGFpbHMsXG5lbWJlZCxcbmZpZ3VyZSxcbmZpZ2NhcHRpb24sXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxub3V0cHV0LFxucnVieSxcbnNlY3Rpb24sXG5zdW1tYXJ5LFxudGltZSxcbm1hcmssXG5hdWRpbyxcbnZpZGVvIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJvcmRlcjogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgZm9udDogaW5oZXJpdDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWVudSxcbm5hdixcbnNlY3Rpb24ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5ib2R5IHtcbiAgICBsaW5lLWhlaWdodDogMTtcbn1cblxub2wsXG51bCB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYmxvY2txdW90ZSxcbnEge1xuICAgIHF1b3Rlczogbm9uZTtcbn1cblxuYmxvY2txdW90ZTpiZWZvcmUsXG5ibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsXG5xOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGNvbnRlbnQ6IG5vbmU7XG59XG5cbnRhYmxlIHtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuIiwiQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdOb3RvIFNhbnMnO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtZGlzcGxheTogZmFsbGJhY2s7XG4gICAgc3JjOiBsb2NhbCgnTm90byBTYW5zJyksXG4gICAgdXJsKCcvYXNzZXRzL2ZvbnRzL05vdG9TYW5zLTUwMC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSAvKiBDaHJvbWUgMjYrLCBPcGVyYSAyMyssIEZpcmVmb3ggMzkrICovXG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnTm90byBTYW5zJztcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBmb250LWRpc3BsYXk6IGZhbGxiYWNrO1xuICAgIHNyYzogbG9jYWwoJ05vdG8gU2FucycpLFxuICAgIHVybCgnL2Fzc2V0cy9mb250cy9Ob3RvU2Fucy03MDAud29mZjInKSBmb3JtYXQoJ3dvZmYyJykgLyogQ2hyb21lIDI2KywgT3BlcmEgMjMrLCBGaXJlZm94IDM5KyAqL1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ05vdG8gU2Fucyc7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gICAgZm9udC1kaXNwbGF5OiBmYWxsYmFjaztcbiAgICBzcmM6IGxvY2FsKCdOb3RvIFNhbnMnKSxcbiAgICB1cmwoJy9hc3NldHMvZm9udHMvTm90b1NhbnMtOTAwLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpIC8qIENocm9tZSAyNissIE9wZXJhIDIzKywgRmlyZWZveCAzOSsgKi9cbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdOb3RvIFNlcmlmJztcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LWRpc3BsYXk6IGZhbGxiYWNrO1xuICAgIHNyYzogbG9jYWwoJ05vdG8gU2VyaWYnKSxcbiAgICB1cmwoJy9hc3NldHMvZm9udHMvTm90b1NlcmlmLTUwMC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSAvKiBDaHJvbWUgMjYrLCBPcGVyYSAyMyssIEZpcmVmb3ggMzkrICovXG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnTm90byBTZXJpZic7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1kaXNwbGF5OiBmYWxsYmFjaztcbiAgICBzcmM6IGxvY2FsKCdOb3RvIFNlcmlmJyksXG4gICAgdXJsKCcvYXNzZXRzL2ZvbnRzL05vdG9TZXJpZi01MDAtSXRhbGljLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpIC8qIENocm9tZSAyNissIE9wZXJhIDIzKywgRmlyZWZveCAzOSsgKi9cbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdOb3RvIFNlcmlmJztcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBmb250LWRpc3BsYXk6IGZhbGxiYWNrO1xuICAgIHNyYzogbG9jYWwoJ05vdG8gU2VyaWYnKSxcbiAgICB1cmwoJy9hc3NldHMvZm9udHMvTm90b1NlcmlmLTcwMC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSAvKiBDaHJvbWUgMjYrLCBPcGVyYSAyMyssIEZpcmVmb3ggMzkrICovXG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnTm90byBTZXJpZic7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgZm9udC1kaXNwbGF5OiBmYWxsYmFjaztcbiAgICBzcmM6IGxvY2FsKCdOb3RvIFNlcmlmJyksXG4gICAgdXJsKCcvYXNzZXRzL2ZvbnRzL05vdG9TZXJpZi03MDAtSXRhbGljLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpIC8qIENocm9tZSAyNissIE9wZXJhIDIzKywgRmlyZWZveCAzOSsgKi9cbn1cbiIsIi8qKlxuICogR0hDb2xvcnMgdGhlbWUgYnkgQXZpIEFyeWFuIChodHRwOi8vYXZpYXJ5YW4uaW4pXG4gKiBJbnNwaXJlZCBieSBHaXRodWIgc3ludGF4IGNvbG9yaW5nXG4gKi9cblxuY29kZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0sXG5wcmVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdIHtcbiAgICBjb2xvcjogIzM5M0EzNDtcbiAgICBmb250LWZhbWlseTogXCJDb25zb2xhc1wiLCBcIkJpdHN0cmVhbSBWZXJhIFNhbnMgTW9ub1wiLCBcIkNvdXJpZXIgTmV3XCIsIENvdXJpZXIsIG1vbm9zcGFjZTtcbiAgICBkaXJlY3Rpb246IGx0cjtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIHdoaXRlLXNwYWNlOiBwcmU7XG4gICAgd29yZC1zcGFjaW5nOiBub3JtYWw7XG4gICAgd29yZC1icmVhazogbm9ybWFsO1xuICAgIGZvbnQtc2l6ZTogLjllbTtcbiAgICBsaW5lLWhlaWdodDogMS4yZW07XG5cbiAgICAtbW96LXRhYi1zaXplOiA0O1xuICAgIC1vLXRhYi1zaXplOiA0O1xuICAgIHRhYi1zaXplOiA0O1xuXG4gICAgLXdlYmtpdC1oeXBoZW5zOiBub25lO1xuICAgIC1tb3otaHlwaGVuczogbm9uZTtcbiAgICAtbXMtaHlwaGVuczogbm9uZTtcbiAgICBoeXBoZW5zOiBub25lO1xufVxuXG5wcmUgPiBjb2RlW2NsYXNzKj1cImxhbmd1YWdlLVwiXSB7XG4gICAgZm9udC1zaXplOiAxZW07XG59XG5cbnByZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl06Oi1tb3otc2VsZWN0aW9uLCBwcmVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdIDo6LW1vei1zZWxlY3Rpb24sXG5jb2RlW2NsYXNzKj1cImxhbmd1YWdlLVwiXTo6LW1vei1zZWxlY3Rpb24sIGNvZGVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdIDo6LW1vei1zZWxlY3Rpb24ge1xuICAgIGJhY2tncm91bmQ6ICNiM2Q0ZmM7XG59XG5cbnByZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl06OnNlbGVjdGlvbiwgcHJlW2NsYXNzKj1cImxhbmd1YWdlLVwiXSA6OnNlbGVjdGlvbixcbmNvZGVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdOjpzZWxlY3Rpb24sIGNvZGVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdIDo6c2VsZWN0aW9uIHtcbiAgICBiYWNrZ3JvdW5kOiAjYjNkNGZjO1xufVxuXG4vKiBDb2RlIGJsb2NrcyAqL1xucHJlW2NsYXNzKj1cImxhbmd1YWdlLVwiXSB7XG4gICAgcGFkZGluZzogMWVtO1xuICAgIG1hcmdpbjogLjVlbSAwO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGRkZGQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbi8qIElubGluZSBjb2RlICovXG46bm90KHByZSkgPiBjb2RlW2NsYXNzKj1cImxhbmd1YWdlLVwiXSB7XG4gICAgcGFkZGluZzogLjJlbTtcbiAgICBwYWRkaW5nLXRvcDogMXB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxcHg7XG4gICAgYmFja2dyb3VuZDogI2Y4ZjhmODtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkZGRkO1xufVxuXG4udG9rZW4uY29tbWVudCxcbi50b2tlbi5wcm9sb2csXG4udG9rZW4uZG9jdHlwZSxcbi50b2tlbi5jZGF0YSB7XG4gICAgY29sb3I6ICM5OTk5ODg7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4udG9rZW4ubmFtZXNwYWNlIHtcbiAgICBvcGFjaXR5OiAuNztcbn1cblxuLnRva2VuLnN0cmluZyxcbi50b2tlbi5hdHRyLXZhbHVlIHtcbiAgICBjb2xvcjogI2UzMTE2Yztcbn1cblxuLnRva2VuLnB1bmN0dWF0aW9uLFxuLnRva2VuLm9wZXJhdG9yIHtcbiAgICBjb2xvcjogIzM5M0EzNDsgLyogbm8gaGlnaGxpZ2h0ICovXG59XG5cbi50b2tlbi5lbnRpdHksXG4udG9rZW4udXJsLFxuLnRva2VuLnN5bWJvbCxcbi50b2tlbi5udW1iZXIsXG4udG9rZW4uYm9vbGVhbixcbi50b2tlbi52YXJpYWJsZSxcbi50b2tlbi5jb25zdGFudCxcbi50b2tlbi5wcm9wZXJ0eSxcbi50b2tlbi5yZWdleCxcbi50b2tlbi5pbnNlcnRlZCB7XG4gICAgY29sb3I6ICMzNmFjYWE7XG59XG5cbi50b2tlbi5hdHJ1bGUsXG4udG9rZW4ua2V5d29yZCxcbi50b2tlbi5hdHRyLW5hbWUsXG4ubGFuZ3VhZ2UtYXV0b2hvdGtleSAudG9rZW4uc2VsZWN0b3Ige1xuICAgIGNvbG9yOiAjMDBhNGRiO1xufVxuXG4udG9rZW4uZnVuY3Rpb24sXG4udG9rZW4uZGVsZXRlZCxcbi5sYW5ndWFnZS1hdXRvaG90a2V5IC50b2tlbi50YWcge1xuICAgIGNvbG9yOiAjOWEwNTBmO1xufVxuXG4udG9rZW4udGFnLFxuLnRva2VuLnNlbGVjdG9yLFxuLmxhbmd1YWdlLWF1dG9ob3RrZXkgLnRva2VuLmtleXdvcmQge1xuICAgIGNvbG9yOiAjMDAwMDlmO1xufVxuXG4udG9rZW4uaW1wb3J0YW50LFxuLnRva2VuLmZ1bmN0aW9uLFxuLnRva2VuLmJvbGQge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udG9rZW4uaXRhbGljIHtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG4iLCI6cm9vdCB7XG4gIC8vIENvbG9yc1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0OiAjeyRjb2xvcl9fOTctYnJpZ2h0bmVzc307XG4gIC0tY29sb3JfX2JhY2tncm91bmRfX3dpZGdldDogI3skY29sb3JfXzk1LWJyaWdodG5lc3N9O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdDogI3skY29sb3JfXzE1LWJyaWdodG5lc3N9O1xuICAtLWNvbG9yX19iYWNrZ3JvdW5kX19jb250cmFzdF9fd2lkZ2V0OiAjeyRjb2xvcl9fOC1icmlnaHRuZXNzfTtcbiAgLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3RfX2FsdDogI3skY29sb3JfXzItYnJpZ2h0bmVzc307XG4gIC0tY29sb3JfX2JhY2tncm91bmRfX2dyYWRpZW50OiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLHJnYmEoMCwwLDAsMCkgMCx3aGl0ZSAxMDAlKTtcbiAgLS1jb2xvcl9fb3ZlcmxheTogcmdiYSgwLDAsMCwuNSk7XG4gIC0tY29sb3JfX2xpbms6ICN7JGNvbG9yX19ibHVlfTtcbiAgLS1jb2xvcl9fbGlua19fdmlzaXRlZDogI3skY29sb3JfX3B1cnBsZX07XG4gIC0tY29sb3JfX3RleHQ6IGJsYWNrO1xuICAtLWNvbG9yX190ZXh0LWFsdDogI3skY29sb3JfXzI1LWJyaWdodG5lc3N9O1xuICAtLWNvbG9yX190ZXh0X19jb250cmFzdDogd2hpdGU7XG4gIC0tY29sb3JfX3RleHRfX2NvbnRyYXN0X19hbHQ6ICM2NjY2NjY7XG5cblxuICAvLyBGb250IHNpemluZ1xuICAtLWZvbnRfX2R5bmFtaWMtc2NhbGluZzogI3skZm9udF9fZHluYW1pYy1zY2FsaW5nfTtcbiAgLS1mb250X19yYXRpbzogI3skZm9udF9fcmF0aW99O1xuICAtLWZvbnRfX2R5bmFtaWMtcmF0aW86ICN7JGZvbnRfX2R5bmFtaWMtcmF0aW99O1xuXG4gIC0tZm9udF9fc2l6ZTogI3skZm9udF9fc2l6ZX07XG4gIC0tZm9udF9fc2l6ZS1iYXNlOiAjeyRmb250X19zaXplX19iYXNlfTtcbiAgLS1mb250X19zaXplX19oZWFkaW5nLTQ6IGNhbGMoICh2YXIoLS1mb250X19zaXplLWJhc2UpICogdmFyKC0tZm9udF9fcmF0aW8pKSArICh2YXIoLS1mb250X19keW5hbWljLXNjYWxpbmcpICogdmFyKC0tZm9udF9fZHluYW1pYy1yYXRpbykpKTtcbiAgLS1mb250X19zaXplX19oZWFkaW5nLTM6IGNhbGMoICh2YXIoLS1mb250X19zaXplLWJhc2UpICogdmFyKC0tZm9udF9fcmF0aW8pICogdmFyKC0tZm9udF9fcmF0aW8pKSArICh2YXIoLS1mb250X19keW5hbWljLXNjYWxpbmcpICogdmFyKC0tZm9udF9fZHluYW1pYy1yYXRpbykgKiB2YXIoLS1mb250X19keW5hbWljLXJhdGlvKSkpO1xuICAtLWZvbnRfX3NpemVfX2hlYWRpbmctMjogY2FsYyggKHZhcigtLWZvbnRfX3NpemUtYmFzZSkgKiB2YXIoLS1mb250X19yYXRpbykgKiB2YXIoLS1mb250X19yYXRpbykgKiB2YXIoLS1mb250X19yYXRpbykpICsgKHZhcigtLWZvbnRfX2R5bmFtaWMtc2NhbGluZykgKiB2YXIoLS1mb250X19keW5hbWljLXJhdGlvKSAqIHZhcigtLWZvbnRfX2R5bmFtaWMtcmF0aW8pICogdmFyKC0tZm9udF9fZHluYW1pYy1yYXRpbykpKTtcbiAgLS1mb250X19zaXplX19oZWFkaW5nLTE6IGNhbGMoICh2YXIoLS1mb250X19zaXplLWJhc2UpICogdmFyKC0tZm9udF9fcmF0aW8pICogdmFyKC0tZm9udF9fcmF0aW8pICogdmFyKC0tZm9udF9fcmF0aW8pICogdmFyKC0tZm9udF9fcmF0aW8pKSArICh2YXIoLS1mb250X19keW5hbWljLXNjYWxpbmcpICogdmFyKC0tZm9udF9fZHluYW1pYy1yYXRpbykgKiB2YXIoLS1mb250X19keW5hbWljLXJhdGlvKSAqIHZhcigtLWZvbnRfX2R5bmFtaWMtcmF0aW8pICogdmFyKC0tZm9udF9fZHluYW1pYy1yYXRpbykpKTtcblxuICAvLyBGb250IGZhbWlseVxuICAtLWZvbnRfX3NhbnMtc2VyaWY6ICN7JGZvbnRfX3NhbnMtc2VyaWZ9O1xuICAtLWZvbnRfX3NlcmlmOiAjeyRmb250X19zZXJpZn07XG4gIC0tZm9udF9fbW9ubzogI3skZm9udF9fbW9ub3NwYWNlfTtcblxuICAvLyBTaXppbmdcbiAgLS1tYXgtd2lkdGhfX2Jhc2U6ICN7JG1heC13aWR0aF9fYmFzZX07XG4gIC0tbWF4LXdpZHRoX19jb250ZW50OiAjeyRtYXgtd2lkdGhfX2NvbnRlbnR9O1xuXG4gIC0tbWFyZ2luX190aW55OiAjeyRtYXJnaW5fX3Rpbnl9O1xuICAtLW1hcmdpbl9fc21hbGw6ICN7JG1hcmdpbl9fc21hbGx9O1xuICAtLW1hcmdpbl9fbWVkaXVtOiAjeyRtYXJnaW5fX21lZGl1bX07XG4gIC0tbWFyZ2luX19sYXJnZTogI3skbWFyZ2luX19sYXJnZX07XG4gIC0tcGFkZGluZ19fc21hbGw6ICN7JHBhZGRpbmdfX3NtYWxsfTtcbiAgLS1wYWRkaW5nX19tZWRpdW06ICN7JHBhZGRpbmdfX21lZGl1bX07XG4gIC0tcGFkZGluZ19fbGFyZ2U6ICN7JHBhZGRpbmdfX2xhcmdlfTtcblxuICAtLWhlYWRlcl9faGVpZ2h0OiAjeyRoZWFkZXJfX2hlaWdodH07XG4gIC0taGVhZGVyX19mb250LXNjYWxlOiAjeyRoZWFkZXJfX2ZvbnQtc2NhbGV9O1xufVxuXG5cbiIsImh0bWwge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZm9udC1zaXplOiA2Mi41JSAvLyBTZXQgMSByZW0gPSAxMCBweCBhcyBkZWZhdWx0XG59XG5cbmJvZHkge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleDogMTtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWluLWhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG4gICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbiAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUpO1xuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250X19zYW5zLXNlcmlmKTtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjg7XG5cbiAgICBtYWluIHtcbiAgICAgICAgZmxleDogMTtcbiAgICB9XG59XG5cbioge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cblxucCxcbnVsLFxub2wsXG5ibG9ja3F1b3RlLFxuYnIsXG5idXR0b24sXG5jYW52YXMsXG5jYXB0aW9uLFxuY29sLFxuY29sZ3JvdXAsXG5kZCxcbmRsLFxuZHQsXG5lbWJlZCxcbmZpZWxkc2V0LFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmltZyxcbmZvcm0sXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICAgIG1hcmdpbi10b3A6IDFlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAuNWVtO1xufVxuXG5cbiIsImNvZGUge1xuICAgIHBhZGRpbmc6IC4yZW0gLjRlbTtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0KTtcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250X19tb25vKTtcbiAgICBmb250LXNpemU6IDkwJTtcbn1cbiIsImZpZ3VyZSB7XG4gICAgZmlnY2FwdGlvbiB7XG4gICAgICAgIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xuICAgICAgICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2VyaWYpO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhtZWRpdW0pIHtcbiAgICAgICAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gICAgfVxuXG4gICAgJi4tZnVsbCB7XG4gICAgICAgID4gcGljdHVyZSBpbWcsID4gaW1nLCBpZnJhbWUsID4gZGl2IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIHdpZHRoOiAxMDB2dzsgLyogT3Igd2hhdGV2ZXIgbWF4IHdpZHRoIGlzICovXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogY2FsYyg1MCUgLSA1MHZ3KTsgLyogNTB2dyBlcXVhbHMgaGFsZiB0aGUgd2lkdGggKi9cbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogY2FsYyg1MCUgLSA1MHZ3KTtcbiAgICAgICAgICAgIG1heC13aWR0aDogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYuLXBpeGVscyB7XG4gICAgICAgIGltYWdlLXJlbmRlcmluZzogY3Jpc3AtZWRnZXM7XG4gICAgfVxuXG4gICAgJi4td2lkZSB7XG4gICAgICAgIC0tY2FyZF9fZXh0cmEtd2lkdGg6IDA7XG4gICAgICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8obWVkaXVtKSB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gICAgICAgIH1cblxuICAgICAgICBAaW5jbHVkZSByZXNwb25kLXRvKGxhcmdlKSB7XG4gICAgICAgICAgICAtLWNhcmRfX2V4dHJhLXdpZHRoOiAxMHJlbTtcblxuICAgICAgICAgICAgPiBwaWN0dXJlIGltZywgPiBpbWcsIGlmcmFtZSwgPiBkaXYsID4gZmlndXJlLmdhbGxlcnktcm93IHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgICAgICAgICAgICAgd2lkdGg6IGNhbGModmFyKC0tbWF4LXdpZHRoX19jb250ZW50KSArIHZhcigtLWNhcmRfX2V4dHJhLXdpZHRoKSk7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IGNhbGMoNTAlIC0gKCh2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpICsgdmFyKC0tY2FyZF9fZXh0cmEtd2lkdGgpKSAvIDIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8oaHVnZSkge1xuICAgICAgICAgICAgLS1jYXJkX19leHRyYS13aWR0aDogMzVyZW07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLmVtYmVkIHtcbiAgICAgICAgaWZyYW1lIHtcbiAgICAgICAgICAgIGFzcGVjdC1yYXRpbzogMTYvOTtcbiAgICAgICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgICAgIG1pbi13aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYubWFwIHtcbiAgICAgICAgaWZyYW1lIHtcbiAgICAgICAgICAgIGhlaWdodDogNTB2aDtcbiAgICAgICAgICAgIG1pbi13aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5pbnN0YWdyYW0tbWVkaWEge1xuICAgICAgICBtYXJnaW46IDAgYXV0byAhaW1wb3J0YW50O1xuICAgIH1cbn1cbiIsIi8vLyBSZXNwb25zaXZlIG1hbmFnZXIuXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAcGFyYW0ge1N0cmluZ30gJGJyZWFrcG9pbnQgLSBCcmVha3BvaW50XG4vLy8gQHJlcXVpcmVzICRicmVha3BvaW50c1xuQG1peGluIHJlc3BvbmQtdG8oJGJyZWFrcG9pbnQpIHtcbiAgICBAaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludCkge1xuICAgICAgICBAbWVkaWEgI3tpbnNwZWN0KG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludCkpfSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH0gQGVsc2Uge1xuICAgICAgICBAZXJyb3IgJ05vIHZhbHVlIGZvdW5kIGZvciBgI3skYnJlYWtwb2ludH1gLiAnXG4gICAgICAgICAgICAgKyAnUGxlYXNlIG1ha2Ugc3VyZSBpdCBpcyBkZWZpbmVkIGluIGAkYnJlYWtwb2ludHNgIG1hcC4nO1xuICAgIH1cbn1cblxuQG1peGluIGNhbGMoJHByb3BlcnR5LCAkZXhwcmVzc2lvbil7XG4gICAgI3skcHJvcGVydHl9OiBjYWxjKCN7JGV4cHJlc3Npb259KTtcbn0iLCJoMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250X19zYW5zLXNlcmlmKTtcbiAgICBsaW5lLWhlaWdodDogMS4yNTtcbiAgICBhIHtcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgIH1cbn1cblxuaDEge1xuICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy0xKTtcbiAgICBsZXR0ZXItc3BhY2luZzogLS4ycmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbmgyIHtcbiAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctMik7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuaDMge1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTMpO1xufVxuXG5oNCB7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XG59XG5cbmg1IHtcbiAgICBmb250LXdlaWdodDogNzAwO1xufVxuXG5oNiB7XG4gICAgZm9udC1zaXplOiA4MCU7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuIiwiaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvOyAvLyBLZWVwIGFzcGVjdCByYXRpbyBjb3JyZWN0IGZvciBpbWFnZXNcbn1cblxuc3ZnIHtcbiAgICBmaWxsOiBjdXJyZW50Q29sb3I7XG59XG4iLCJhIHtcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX2xpbmspO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjJzO1xuICAgICY6aG92ZXIsXG4gICAgJjpmb2N1cyB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIH1cblxuICAgICY6dmlzaXRlZCB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCk7XG4gICAgfVxufVxuIiwidWwge1xuICAgIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAxLjVlbTtcbiAgICBsaXN0LXN0eWxlOiBkaXNjO1xuICAgIHVsIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDFlbTtcbiAgICB9XG59XG5cbm9sIHtcbiAgICBwYWRkaW5nLWlubGluZS1zdGFydDogMS41ZW07XG4gICAgbGlzdC1zdHlsZTogZGVjaW1hbDtcbiAgICBvbCB7XG4gICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAxZW07XG4gICAgfVxuXG4gICAgbGkge1xuICAgICAgICAmOmxhc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4uY29udGFpbnMtdGFzay1saXN0IHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG4ubm8tc3R5bGUge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XG59XG5cbi50YXNrLWxpc3QtaXRlbS1jaGVja2JveCB7XG4gICAgbWFyZ2luLWxlZnQ6IC0xLjZlbTsgLy8gTW92ZSB0aGUgY2hlY2tib3ggdG8gdGhlIGxlZnQgdG8gbWF0Y2ggb3RoZXIgbGlzdHMgaW5kZW50YXRpb24uXG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuIiwiW2lkXSB7XG4gICAgc2Nyb2xsLW1hcmdpbi10b3A6IDFleDtcbn1cbiIsInNlbGVjdCB7XG4gICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplKTtcbiAgICBwYWRkaW5nOiAuNHJlbSAuNHJlbTtcbiAgICBsaW5lLWhlaWdodDogMjtcbiAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0KTtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG4gICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250X19zYW5zLXNlcmlmKTtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG4iLCJlbSB7XG4gICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NlcmlmKTtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi5ub3RlIHtcbiAgICBwYWRkaW5nOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0KTtcbn1cblxuLmxlYWQge1xuICAgIGZvbnQtc2l6ZTogMTE1JTtcbn1cblxuc3VwIHtcbiAgICBmb250LXNpemU6IDg1JTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogc3VwZXI7XG59XG5cbmJsb2NrcXVvdGUge1xuICAgIHBhZGRpbmctbGVmdDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICAgIGJvcmRlci1sZWZ0OiA0cHggc29saWQgdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX2FsdCk7XG4gICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NlcmlmKTtcbiAgICBpbWcge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWFyZ2luOiAkbWFyZ2luX19tZWRpdW0gMDtcbiAgICB9XG5cbiAgICA+IDpmaXJzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgfVxuICAgID4gOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cbn1cblxucSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NlcmlmKTtcbiAgICBmb250LXNpemU6IDEyNSU7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8oc21hbGwpIHtcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSArIHZhcigtLW1hcmdpbl9fbGFyZ2UpKTtcbiAgICAgICAgbWF4LXdpZHRoOiBjYWxjKDEwMCUgKyB2YXIoLS1tYXJnaW5fX2xhcmdlKSk7XG4gICAgICAgIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbGFyZ2UpO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBjYWxjKDAlIC0gdmFyKC0tbWFyZ2luX19tZWRpdW0pKTtcbiAgICB9XG4gICAgJjpiZWZvcmUsXG4gICAgJjphZnRlciB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuXG5jaXRlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2VyaWYpO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBhIHtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB9XG4gICAgJjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIlxcMjAxNCBcXDIwMDlcIjtcbiAgICB9XG59XG5cbnN0cm9uZyB7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuaHIge1xuICAgIGhlaWdodDogLjRyZW07XG4gICAgYm9yZGVyOiAwO1xuICAgIG1hcmdpbjogdmFyKC0tbWFyZ2luX19tZWRpdW0pIDAgMDtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0KTtcbn1cblxuYWJiciB7XG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4O1xuICAgIGJvcmRlci1ib3R0b20tc3R5bGU6IGRvdHRlZDtcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG4gICAgZm9udC12YXJpYW50OiBhbGwtc21hbGwtY2FwcztcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5jZW50ZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxua2JkIHtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0KTtcbiAgICBwYWRkaW5nOiAuMmVtIC40ZW07XG4gICAgYm9yZGVyLXJhZGl1czogLjNlbTtcbn1cbiIsIi5CcmVhZGNydW1icyBhIHtcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbn1cblxuLkJyZWFkY3J1bWJzIGE6aG92ZXIsXG4uQnJlYWRjcnVtYnMgYTpmb2N1cyB7XG4gICAgY29sb3I6IHZhcigtLWNvbG9yX19saW5rKTtcbn1cblxuLkJyZWFkY3J1bWJzIG9sIHtcbiAgICBtYXJnaW46IDA7XG4gICAgZm9udC1zaXplOiA4MCU7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBwYWRkaW5nLWlubGluZS1zdGFydDogMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4uQnJlYWRjcnVtYnMgb2wgbGkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLkJyZWFkY3J1bWJzIG9sIGxpOmJlZm9yZSB7XG4gICAgY29udGVudDogbm9uZSAhaW1wb3J0YW50O1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLkJyZWFkY3J1bWJzIG9sIGxpOmFmdGVyIHtcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbiAgICBjb250ZW50OiBcIi9cIjtcbn1cblxuLkJyZWFkY3J1bWJzIG9sIGxpOmxhc3QtY2hpbGQ6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IG5vbmU7XG59XG4iLCIuQnV0dG9uIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2xpbmspO1xuICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG4gICAgcGFkZGluZzogLjVlbSAwLjhlbTtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIGJvcmRlcjogMDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDtcblxuICAgICY6dmlzaXRlZCB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG4gICAgfVxuXG4gICAgJjpob3ZlciwgJjpmb2N1cyB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIH1cbn1cbiIsIi5DYXJkcyB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICAgIGdyaWQtYXV0by1mbG93OiBkZW5zZTtcbiAgICBncmlkLWdhcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhzbWFsbCkge1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhtZWRpdW0pIHtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcbiAgICB9XG5cbiAgICAmLi1tYXgtMi1jb2x1bW5zIHtcbiAgICAgICAgQGluY2x1ZGUgcmVzcG9uZC10byhtZWRpdW0pIHtcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLkNhcmQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgbWluLWhlaWdodDogMjV2aDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIHBhZGRpbmc6IGNhbGModmFyKC0tcGFkZGluZ19fc21hbGwpICogMS41KTtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3RfX3dpZGdldCk7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0X19jb250cmFzdCk7XG5cbiAgICAmLi1hbGlnbi1ib3R0b20ge1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICBwYWRkaW5nLXRvcDogOHJlbTtcbiAgICB9XG5cbiAgICAmLi1hbGlnbi10b3Age1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhtZWRpdW0pIHtcbiAgICAgICAgJi5wb3N0OmZpcnN0LW9mLXR5cGUge1xuICAgICAgICAgICAgYXNwZWN0LXJhdGlvOiAyMS85O1xuICAgICAgICAgICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IHNwYW4gMztcblxuICAgICAgICAgICAgLkNhcmRfX3RpdGxlIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDNyZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLi1mZWF0dXJlZC1pbWFnZTphZnRlciB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fb3ZlcmxheSk7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgfVxufVxuXG4uQ2FyZF9fY29udGVudCB7XG4gICAgei1pbmRleDogMTA7XG4gICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplLWJhc2UpO1xuXG4gICAgPiAqIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgIH1cblxuICAgIHVsLFxuICAgIG9sIHtcbiAgICAgICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDIuNXJlbTtcbiAgICB9XG4gICAgYSB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xuICAgIH1cblxuICAgIG9sLm1ldGFkYXRhLWxpc3Qge1xuICAgICAgICBtYXJnaW4tYmxvY2stc3RhcnQ6IDFlbTtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XG4gICAgfVxuXG4gICAgLm1ldGFkYXRhLWxpc3RfX2l0ZW0ge1xuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcblxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcblxuICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgY29udGVudDogbm9uZTtcbiAgICAgICAgfVxuICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5tZXRhZGF0YS10aXRsZSB7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XG4gICAgICAgIH1cblxuICAgICAgICBwIHtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5tZXRhZGF0YS1jb250ZW50IHtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgIH1cbiAgICAgICAgLm1ldGFkYXRhLWxpc3RfX2l0ZW0tdGl0bGUge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHRfX2NvbnRyYXN0KTtcbiAgICAgICAgfVxuICAgICAgICAubWV0YWRhdGEtdmFsdWVzIHtcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3RfX2FsdCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5DYXJkX19pbWFnZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgei1pbmRleDogMTtcblxuICAgIGltZyB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgIG9iamVjdC1wb3NpdGlvbjogY2VudGVyO1xuICAgIH1cbn1cblxuLkNhcmRfX2NvbnRlbnRfX2V4dHJhIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogMTA7XG4gICAgZm9udC1zaXplOiA5MCU7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG5cbiAgICAmLi10b3AtbGVmdCB7XG4gICAgICAgIGxlZnQ6IGNhbGModmFyKC0tcGFkZGluZ19fc21hbGwpICogMS41KTtcbiAgICAgICAgdG9wOiBjYWxjKHZhcigtLXBhZGRpbmdfX3NtYWxsKSAqIDEuNSk7XG4gICAgICAgIG1hcmdpbi1yaWdodDogOHJlbTtcbiAgICB9XG5cbiAgICAmLi10b3AtcmlnaHQge1xuICAgICAgICByaWdodDogY2FsYyh2YXIoLS1wYWRkaW5nX19zbWFsbCkgKiAxLjUpO1xuICAgICAgICB0b3A6IGNhbGModmFyKC0tcGFkZGluZ19fc21hbGwpICogMS41KTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDhyZW07XG4gICAgfVxuXG4gICAgJi4tc3ltYm9sIHtcbiAgICAgICAgZm9udC1zaXplOiAyLjVyZW07XG4gICAgfVxuXG4gICAgPiA6bnRoLWNoaWxkKDIpIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC41ZW07XG4gICAgfVxuXG4gICAgLnRhZ3Mge1xuICAgICAgICAudGFnIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xuICAgICAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IC40ZW07XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAuNGVtO1xuXG4gICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgY29udGVudDogXCIjXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAud2VibWVudGlvbnNfX2NvdW50IHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAuNWVtO1xuICAgIH1cbn1cblxuLkNhcmRfX3Bvc3QtbGlzdCB7XG4gICAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG4gICAgbGlzdC1zdHlsZTogZGVjaW1hbC1sZWFkaW5nLXplcm87XG59XG5cbi5DYXJkX190aXRsZSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xuICAgIGZvbnQtc2l6ZTogMi41cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgYSB7XG4gICAgICAgIGNvbG9yOiBpbmhlcml0O1xuXG4gICAgfVxufVxuXG5cblxuLkNhcmRfX3RpdGxlLWxpbms6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cbiIsIi5Db21tZW50cyB7XG59XG5cbi5Db21tZW50c19fbGlzdCB7XG4gICAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XG59XG5cbi5Db21tZW50c19fdGl0bGUge1xufVxuXG4uQ29tbWVudHNfcmVmZXJlbmNlIHtcbiAgICBmb250LXNpemU6IGNhbGModmFyKC0tZm9udF9fc2l6ZSkgKiAuODUpO1xufVxuXG4uQ29tbWVudHNfX3BhbmVsIHtcbiAgICBmb250LXdlaWdodDogNTAwO1xuXG4gICAgLkNvbW1lbnRzX19saWtlcyxcbiAgICAuQ29tbWVudHNfX3JlcG9zdHMsXG4gICAgLkNvbW1lbnRzX19jb21tZW50cyB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogLjVlbTtcbiAgICB9XG5cbiAgICAuQ29tbWVudHNfX3N0YXR1cyB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX2FsdCk7XG4gICAgICAgIHBhZGRpbmc6IHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG4gICAgfVxuXG4gICAgc3ZnIHtcbiAgICAgICAgaGVpZ2h0OiAxLjJlbTtcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHN1YjtcbiAgICB9XG59XG5cbi5Db21tZW50c19fbWV0YWRhdGEge1xuICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZS1iYXNlKTtcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbiAgICBsaW5lLWhlaWdodDogMS40O1xuXG4gICAgc3Bhbi5Db21tZW50c19fYXV0aG9yIHtcbiAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbiAgICB9XG59XG5cbi5Db21tZW50c19fYXV0aG9yIHtcblxuICAgIC5Db21tZW50c19fYXZhdGFyIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDEuMnJlbTtcbiAgICAgICAgbGVmdDogMXJlbTtcbiAgICAgICAgd2lkdGg6IDQuNXJlbTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAuNWVtO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG4gICAgfVxufVxuXG4uQ29tbWVudHNfX2xpc3QtaXRlbSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBwYWRkaW5nOiAxcmVtIDFyZW0gMXJlbSA3cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcblxuICAgICY6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogbm9uZSAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgICYuLWlzLW1lIHtcbiAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX2FsdCk7XG4gICAgfVxuXG4gICAgJi4tcmVwb3N0LW9mIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA0cmVtO1xuXG4gICAgICAgIC5Db21tZW50c19fYXV0aG9yIHtcblxuICAgICAgICAgICAgLkNvbW1lbnRzX19hdmF0YXIge1xuICAgICAgICAgICAgICAgIHRvcDogLjhyZW07XG4gICAgICAgICAgICAgICAgbGVmdDogLjVyZW07XG4gICAgICAgICAgICAgICAgd2lkdGg6IDIuNXJlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0KTtcbiAgICB9XG5cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cblxuICAgIHAge1xuICAgICAgICBtYXJnaW46IC4zZW0gMCAwIDA7XG4gICAgfVxufVxuIiwiLkZvcm0ge1xuICAgIG1hcmdpbi10b3A6IDJlbTtcbiAgICBmb250LWZhbWlseTogdmFyKC0tZm9udF9fc2Fucy1zZXJpZik7XG4gICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplKTtcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xuXG4gICAgJi4taW5hY3RpdmUge1xuICAgICAgICBsYWJlbCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICAgICAgLi1jb2xsYXBzZWQge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgICAgIHRleHRhcmVhIHtcbiAgICAgICAgICAgIHJlc2l6ZTogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgbWluLWhlaWdodDogMCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgaGVpZ2h0OiAyLjdlbTtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIH1cbiAgICB9XG4gICAgJl9fZ3JvdXAge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIG1hcmdpbjogMCAwIDFlbSAwO1xuICAgICAgICBpbnB1dCwgdGV4dGFyZWEge1xuICAgICAgICAgICAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX3dpZGdldCk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG4gICAgICAgICAgICBwYWRkaW5nOiAwLjVlbTtcbiAgICAgICAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgICAgICAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcblxuICAgICAgICAgICAgJjpmb2N1cyB7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG4gICAgICAgICAgICAgICAgKyBsYWJlbCB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdGV4dGFyZWEge1xuICAgICAgICAgICAgcmVzaXplOiB2ZXJ0aWNhbDtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDE1cmVtO1xuICAgICAgICB9XG5cbiAgICAgICAgbGFiZWwge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgbGVmdDogNHB4O1xuICAgICAgICAgICAgdG9wOiAtN3B4O1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmQpO1xuICAgICAgICAgICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplLWJhc2UpO1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgICAgICAgICBwYWRkaW5nOiAwIDAuNWVtO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwib2wuYWN0aXZpdHktbGlzdCB7XG4gICAgbWFyZ2luLWJsb2NrLXN0YXJ0OiAxZW07XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBwYWRkaW5nLWlubGluZS1zdGFydDogMDtcbn1cblxuLmFjdGl2aXR5LWxpc3RfX2l0ZW0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG5cbiAgICAuaWNvbiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gICAgICAgIG1hcmdpbi10b3A6IC40ZW07XG4gICAgICAgIG1hcmdpbi1yaWdodDogLjVlbTtcbiAgICB9XG5cbiAgICAuYWN0aXZpdHktdGl0bGUge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy00KTtcbiAgICB9XG5cbiAgICBwIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgIH1cblxuICAgIC5hY3Rpdml0eS1jb250ZW50IHtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgfVxuXG4gICAgLmFjdGl2aXR5LW1ldGFkYXRhIHtcbiAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XG4gICAgfVxufVxuIiwib2wuYm9vay1saXN0IHtcbiAgICBsaXN0LXN0eWxlOiBkaXNjO1xufVxuXG4uYm9vay1saXN0X19pdGVtIHtcbiAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cblxuICAgIC5ib29rLXRpdGxlIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XG4gICAgfVxuXG4gICAgcCB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICB9XG5cbiAgICAuYm9vay1tZXRhZGF0YSB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xuICAgIH1cbn1cbiIsIi5wb3N0LWhlYWRlciAucG9zdC10aXRsZSB7XG4gICAgLmJlZXItbGFiZWwge1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgIHdpZHRoOiA0MHJlbTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG4gICAgfVxuXG5cbn1cbi5iZWVyLXRpdGxlIHtcbiAgICBhIHtcbiAgICAgICAgLmJlZXItbGFiZWwge1xuICAgICAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbiAgICAgICAgfVxuICAgICAgICAmOmhvdmVyLCAmOnZpc2l0ZWQge1xuICAgICAgICAgICAgLmJlZXItbGFiZWwge1xuICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCIuYmVlci1zdGF0aXN0aWNzIHtcbiAgICAmX19saXN0IHtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBncmlkLWF1dG8tZmxvdzogZGVuc2U7XG4gICAgICAgIGdyaWQtZ2FwOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xuICAgICAgICBtYXgtd2lkdGg6IDMwZW07XG5cbiAgICAgICAgQGluY2x1ZGUgcmVzcG9uZC10byh0aW55KSB7XG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9fbGlzdC1pdGVtIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcblxuICAgICAgICAmX19sYWJlbCB7XG4gICAgICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XG4gICAgICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbiAgICAgICAgfVxuICAgICAgICAmX192YWx1ZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5iZWVyLWluZ3JlZGllbnRzIHtcbiAgICAmX19sYWJlbCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBtYXJnaW4tYmxvY2stc3RhcnQ6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgICAgICAgbWFyZ2luLWJsb2NrLWVuZDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG4gICAgICAgIC5pY29uIHtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMC4yZW07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19saXN0IHtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgbWF4LXdpZHRoOiAyNWVtO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDA7XG5cbiAgICAgICAgJi1pdGVtIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDMuOGVtIDFmciBhdXRvO1xuICAgICAgICAgICAgZ3JpZC1nYXA6IDAgMC41cmVtO1xuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczpcbiAgICAgICAgICAgICAgICBcImxlZnQgbWlkZGxlIHJpZ2h0XCJcbiAgICAgICAgICAgICAgICBcImxlZnQgYm90dG9tIGJvdHRvbS1yaWdodFwiO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG5cblxuXG4gICAgICAgICAgICAmX19sZWZ0IHtcbiAgICAgICAgICAgICAgICBncmlkLWFyZWE6IGxlZnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmX19taWRkbGUge1xuICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogbWlkZGxlO1xuXG4gICAgICAgICAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgICAgICAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJl9fcmlnaHQge1xuICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogcmlnaHQ7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmX19ib3R0b20tbGVmdCB7XG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiBib3R0b20tbGVmdDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmX19ib3R0b20ge1xuICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogYm90dG9tO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZS1iYXNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICZfX2JvdHRvbS1yaWdodCB7XG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiBib3R0b20tcmlnaHQ7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplLWJhc2UpO1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4uaWNvbiB7XG4gICAgJi5mZXJtZW50YWJsZSB7XG5cbiAgICB9XG59XG5cbi5iYXRjaGVzIHtcbiAgICAmX19zdGF0dXMge1xuICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUpO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kX193aWRnZXQpO1xuICAgICAgICBib3R0b206IDAuMWVtO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHBhZGRpbmc6IDAuM2VtO1xuICAgIH1cblxufVxuIiwiLmJlZXJzIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gICAgZ3JpZC1hdXRvLWZsb3c6IGRlbnNlO1xuICAgIGdyaWQtZ2FwOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG5cbiAgICBAaW5jbHVkZSByZXNwb25kLXRvKHNtYWxsKSB7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbiAgICB9XG59XG5cbi5iZWVyIHtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgcGFkZGluZzogdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcblxuICAgIGEge1xuICAgICAgICAmOmhvdmVyLCAmOmZvY3VzIHtcbiAgICAgICAgICAgIC5iZWVyLWxhYmVsIHtcbiAgICAgICAgICAgICAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDAgMCAxcmVtIHZhcigtLWNvbG9yX19saW5rKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cblxuICAgIC5iZWVyLXRpdGxlIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgIH1cblxuICAgIC5iZWVyLWxhYmVsIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIHRyYW5zaXRpb246IC4yNXMgYWxsIGVhc2U7XG4gICAgfVxufVxuIiwiLmNvbHVtbnMge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gICAgZ3JpZC1nYXA6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcblxuICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8oc21hbGwpIHtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMyxtaW5tYXgoMCwxZnIpKTtcbiAgICB9XG59XG4iLCIuY29udGVudCB7XG4gICAgcHJlIHtcbiAgICAgICAgd2lkdGg6IDEwMHZ3O1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgIHBhZGRpbmc6IHZhcigtLXBhZGRpbmdfX3NtYWxsKTtcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZF9fYWx0KTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEyNSU7XG4gICAgICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcbiAgICAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAgICAgICBtYXJnaW46IHtcbiAgICAgICAgICAgIHRvcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICAgICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgICBib3R0b206IDA7XG4gICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB9XG4gICAgICAgIGNvZGUge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG4gICAgICAgICAgICBmb250LXNpemU6ICRmb250X19zaXplO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiLmhlYWRlci1hbmNob3Ige1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xuXG4gICAgJjp2aXNpdGVkIHtcbiAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbiAgICB9XG5cbiAgICAmOmJlZm9yZSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogLS44ZW07XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIGNvbnRlbnQ6IFwiI1wiO1xuICAgIH1cblxuICAgICY6Zm9jdXMsXG4gICAgJjpob3ZlciB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fbGluayk7XG5cbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCJmaWd1cmUuZXhpZiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgJjpob3ZlciwgJjpmb2N1cyB7XG4gICAgICAgIC5leGlmX19jb250YWluZXIge1xuICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZmlndXJlLmV4aWY6aG92ZXIgLmV4aWZfX2NvbnRhaW5lciwgZmlndXJlLmV4aWY6Zm9jdXMgLmV4aWZfX2NvbnRhaW5lciB7XG4gICAgb3BhY2l0eTogMTtcbn1cblxuLmV4aWYge1xuICAgICZfX2NvbnRhaW5lciB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWShjYWxjKC0xMDAlIC0gdmFyKC0tbWFyZ2luX19zbWFsbCkpKTtcbiAgICAgICAgZm9udC1zaXplOiA3NSU7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0X19jb250cmFzdCk7XG4gICAgICAgIHRleHQtc2hhZG93OiAwIDAgMnB4ICMwMDAsIDAgMCAycHggIzAwMCwgMCAwIDRweCAjMDAwLCAwIDAgM3B4ICMwMDA7XG4gICAgfVxuICAgICZfX2RhdGEge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gICAgJl9fZGF0YTpiZWZvcmUge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIGNvbnRlbnQ6IGF0dHIoZGF0YS10eXBlKTtcbiAgICAgICAgd2lkdGg6IDUuNWVtO1xuICAgIH1cbn1cblxuIiwiLmNvbnRlbnQge1xuICAgIC5lbWJlZC52aWRlbyB7XG4gICAgICAgIGFzcGVjdC1yYXRpbzogMTYvOTsgLy8gRGVmYXVsdCBhc3BlY3QgcmF0aW9cbiAgICB9XG59XG4iLCIuY29udGVudCB7XG4gICAgaW1nIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICB9XG59XG4iLCIuY29udGVudCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiB2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpO1xuICAgIHBhZGRpbmc6IHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhzbWFsbCkge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogdmFyKC0tcGFkZGluZ19fbGFyZ2UpO1xuICAgIH1cblxuICAgID4gKiB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgID4gOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG5cbiAgICA+IDpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG59XG4iLCJvbC5nYW1lLWxpc3Qge1xuICAgIG1hcmdpbi1ibG9jay1zdGFydDogMWVtO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XG59XG5cbi5nYW1lLWxpc3RfX2l0ZW0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG5cbiAgICAuaWNvbiB7XG4gICAgICAgIHdpZHRoOiAxZW07XG4gICAgICAgIGhlaWdodDogMWVtO1xuICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgbWFyZ2luLXRvcDogLjRlbTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAuNWVtO1xuICAgIH1cblxuICAgIC5nYW1lLXRpdGxlIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XG4gICAgfVxuXG4gICAgJi1jb250ZW50IHtcblxuICAgIH1cblxuICAgIHAge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgfVxuXG4gICAgLmdhbWUtbWV0YWRhdGEge1xuICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbiAgICB9XG59XG4iLCIuaWNvbiB7XG4gICAgd2lkdGg6IDFlbTtcbiAgICBoZWlnaHQ6IDFlbTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogc3ViO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBib3R0b206IDAuMXJlbTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAmLi1sYXJnZSB7XG4gICAgICAgIHdpZHRoOiAxLjVlbTtcbiAgICAgICAgaGVpZ2h0OiAxLjVlbTtcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICB9XG5cbiAgICAmLi1zdHJhdmEge1xuICAgICAgICBjb2xvcjogI2UzNGEwMDtcbiAgICB9XG5cbiAgICAmLi1nYW1pbmcge1xuICAgICAgICBjb2xvcjogI0IxNzJGRDtcbiAgICB9XG5cbiAgICAmLi1mZXJtZW50YWJsZXMge1xuICAgICAgICBjb2xvcjogI2ZmY2E1YTtcbiAgICB9XG5cbiAgICAmLi1ob3BzIHtcbiAgICAgICAgY29sb3I6ICM2ZjlhNGI7XG4gICAgfVxuXG4gICAgJi4teWVhc3Qge1xuICAgICAgICBjb2xvcjogI2UyYjY5MztcbiAgICB9XG59XG4iLCIua2ctY2FyZCB7XG4gICAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICAgIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgICBAaW5jbHVkZSByZXNwb25kLXRvKG1lZGl1bSkge1xuICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX2xhcmdlKTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19sYXJnZSk7XG4gICAgfVxufVxuIiwiLmtnLWNhcmQua2ctZW1iZWQtY2FyZCB7XG4gICAgYXNwZWN0LXJhdGlvOiAxNi85O1xuICAgIGlmcmFtZSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgIGFzcGVjdC1yYXRpbzogaW5oZXJpdDtcbiAgICB9XG5cbiAgICAmLnJlc3BvbnNpdmUtdmlkZW8ge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICAgaWZyYW1lIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIi5rZy1jYXJkLmtnLXdpZHRoLWZ1bGwge1xuICAgIGltZyB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgd2lkdGg6IDEwMHZ3OyAvKiBPciB3aGF0ZXZlciBtYXggd2lkdGggaXMgKi9cbiAgICAgICAgbWFyZ2luLWxlZnQ6IGNhbGMoNTAlIC0gNTB2dyk7IC8qIDUwdncgZXF1YWxzIGhhbGYgdGhlIHdpZHRoICovXG4gICAgICAgIG1hcmdpbi1yaWdodDogY2FsYyg1MCUgLSA1MHZ3KTtcbiAgICAgICAgbWF4LXdpZHRoOiBub25lO1xuICAgIH1cblxufVxuIiwiLmtnLWNhcmQua2ctZ2FsbGVyeS1jYXJkIHtcbiAgICBAaW5jbHVkZSByZXNwb25kLXRvKG1lZGl1bSkge1xuICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX2xhcmdlKTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19sYXJnZSk7XG4gICAgfVxuICAgIC5rZy1nYWxsZXJ5LWNvbnRhaW5lciB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cbiAgICAgICAgLmtnLWdhbGxlcnktcm93IHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICAgICAgICAgICY6bm90KDpmaXJzdC1vZi10eXBlKSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAkbWFyZ2luX19zbWFsbCAwIDAgMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5rZy1nYWxsZXJ5LWltYWdlIHtcbiAgICAgICAgICAgICAgICAmOm5vdCg6Zmlyc3Qtb2YtdHlwZSkge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDAgMCAwIHZhcigtLW1hcmdpbl9fc21hbGwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIi5rZy1jYXJkLmtnLXdpZHRoLXdpZGUge1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgLS1jYXJkX19leHRyYS13aWR0aDogMDtcblxuICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8obWVkaXVtKSB7XG4gICAgICAgIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbGFyZ2UpO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX2xhcmdlKTtcblxuICAgICAgICA+ICoge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lO1xuICAgICAgICAgICAgd2lkdGg6IGNhbGModmFyKC0tbWF4LXdpZHRoX19jb250ZW50KSArIHZhcigtLWNhcmRfX2V4dHJhLXdpZHRoKSk7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogY2FsYyg1MCUgLSAoKHZhcigtLW1heC13aWR0aF9fY29udGVudCkgKyB2YXIoLS1jYXJkX19leHRyYS13aWR0aCkpIC8gMikpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhsYXJnZSkge1xuICAgICAgICAtLWNhcmRfX2V4dHJhLXdpZHRoOiAxMnJlbTtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSByZXNwb25kLXRvKGh1Z2UpIHtcbiAgICAgICAgLS1jYXJkX19leHRyYS13aWR0aDogMzVyZW07XG4gICAgfVxuXG5cbn1cbiIsIi5nYWxsZXJ5IHtcbiAgICBAaW5jbHVkZSByZXNwb25kLXRvKHNtYWxsKSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIC5nYWxsZXJ5LXJvdyB7XG4gICAgICAgICAgICBtYXJnaW46IHZhcigtLW1hcmdpbl9fc21hbGwpIDAgMCAwO1xuXG4gICAgICAgICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5nYWxsZXJ5LXJvdyB7XG4gICAgbWFyZ2luOiAwO1xuICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8oc21hbGwpIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIG1hcmdpbi10b3A6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuXG4gICAgICAgID4gZmlndXJlIHtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuICAgICAgICA+IGZpZ3VyZTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG4gICAgICAgIH1cblxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIH1cbiAgICB9XG5cblxufVxuIiwiLnBhY2sge1xuICAgICZfX2xhYmVsIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1hcmdpbi1ibG9jay1zdGFydDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICAgICAgICBtYXJnaW4tYmxvY2stZW5kOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcblxuICAgICAgICAuaWNvbiB7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IGNhbGMoMC4yZW0gKyAwLjVyZW0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9faXRlbV9fY2F0ZWdvcnktaGVhZGluZyB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgfVxuXG4gICAgJl9fbGlzdCB7XG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgIG1heC13aWR0aDogMzVlbTtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWFyZ2luLWJsb2NrLXN0YXJ0OiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gICAgICAgIG1hcmdpbi1ibG9jay1lbmQ6IHZhcigtLW1hcmdpbl9fc21hbGwpO1xuXG4gICAgICAgICZfX2JhciB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgei1pbmRleDogMSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgb3BhY2l0eTogLjU7XG4gICAgICAgIH1cblxuICAgICAgICAmLWl0ZW0ge1xuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmVtIDFmciBhdXRvO1xuICAgICAgICAgICAgZ3JpZC1nYXA6IDAgMC41cmVtO1xuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczpcbiAgICAgICAgICAgICAgICBcImxlZnQgbWlkZGxlIHJpZ2h0XCJcbiAgICAgICAgICAgICAgICBcImJvdHRvbS1sZWZ0IGJvdHRvbSBib3R0b20tcmlnaHRcIjtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuXG4gICAgICAgICAgICAmLi1vdmVydmlldyB7XG4gICAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyZW0gMWZyIGF1dG87XG4gICAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczpcbiAgICAgICAgICAgICAgICAgICAgXCJsZWZ0IG1pZGRsZSByaWdodFwiXG4gICAgICAgICAgICAgICAgICAgIFwiYm90dG9tLWxlZnQgYm90dG9tIGJvdHRvbS1yaWdodFwiO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBoc2woMGRlZyAwJSA3MCUgLyAxMCUpO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuMXJlbTtcblxuICAgICAgICAgICAgICAgIC5pY29uIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC4zcmVtO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgID4gc3BhbiB7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICAgICAgei1pbmRleDogMjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICZfX2xlZnQge1xuICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogbGVmdDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJl9fbWlkZGxlIHtcbiAgICAgICAgICAgICAgICBncmlkLWFyZWE6IG1pZGRsZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJl9fcmlnaHQge1xuICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogcmlnaHQ7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICZfX2JvdHRvbS1sZWZ0IHtcbiAgICAgICAgICAgICAgICBncmlkLWFyZWE6IGJvdHRvbS1sZWZ0O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZS1iYXNlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJl9fYm90dG9tIHtcbiAgICAgICAgICAgICAgICBncmlkLWFyZWE6IGJvdHRvbTtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICZfX2JvdHRvbS1yaWdodCB7XG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiBib3R0b20tcmlnaHQ7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplLWJhc2UpO1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9fbGlzdC1idXR0b24ge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICB9XG59XG5cbi8vIEZlYXR1cmVzIHdpdGggSmF2YVNjcmlwdCBlbmFibGVkXG4uanMge1xuICAgIC5wYWNrIHtcbiAgICAgICAgJl9fbGlzdC1jb250YWluZXIge1xuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgICAgICAgICAgJi4tY29sbGFwc2VkIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgbWF4LWhlaWdodDogMjByZW07XG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJi4tY29sbGFwc2VkOmFmdGVyIHtcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX2dyYWRpZW50KTtcbiAgICAgICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgPiA6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCIucGFnZS1oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgcGFkZGluZy10b3A6IHZhcigtLXBhZGRpbmdfX2xhcmdlKTtcbiAgICBwYWRkaW5nLWJvdHRvbTogdmFyKC0tcGFkZGluZ19fbWVkaXVtKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xuXG4gICAgYSB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG4gICAgfVxuXG4gICAgLnBhZ2UtdGl0bGUge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgICB9XG5cbiAgICAucGFnZS1kYXRlIHtcbiAgICAgICAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG4gICAgfVxuXG4gICAgLnRhZ3Mge1xuICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbiAgICAgICAgLnRhZyB7XG4gICAgICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHRfX2NvbnRyYXN0KTtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogLjRlbTtcblxuICAgICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiI1wiO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLnBhZ2UtbWV0YWRhdGEge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHotaW5kZXg6IDEwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWF4LXdpZHRoOiB2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpO1xuICAgICAgICBwYWRkaW5nOiAwIHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG5cbiAgICAgICAgOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgIH1cblxuICAgICAgICA6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJjpub3QoLi1mZWF0dXJlLWltYWdlKXtcbiAgICAgICAgLnBhZ2UtdGl0bGUge1xuICAgICAgICAgICAgLy9ub2luc3BlY3Rpb24gQ3NzSW52YWxpZFByb3BlcnR5VmFsdWVcbiAgICAgICAgICAgIEBzdXBwb3J0cyAoKGJhY2tncm91bmQtY2xpcDogdGV4dCkgYW5kIChiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTIwZGVnLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMCUsIHZhcigtLWNvbG9yX19saW5rKSAzNy41JSwgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDEwMCUpKSkge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMjBkZWcsIHZhcigtLWNvbG9yX19saW5rX192aXNpdGVkKSAwJSwgdmFyKC0tY29sb3JfX2xpbmspIDM3LjUlLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMTAwJSk7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jbGlwOiB0ZXh0O1xuICAgICAgICAgICAgICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICYuLWZlYXR1cmUtaW1hZ2Uge1xuICAgICAgICBtaW4taGVpZ2h0OiA1MHZtaW47XG4gICAgICAgIG1heC1oZWlnaHQ6IDgwdmg7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuXG4gICAgICAgIGEge1xuICAgICAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0X19jb250cmFzdCk7XG4gICAgICAgIH1cblxuICAgICAgICAucGFnZS1oZWFkZXJfX2ltYWdlIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgb3BhY2l0eTogLjU7XG5cbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICAgICAgICAgIG9iamVjdC1wb3NpdGlvbjogY2VudGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIiwiLnBvc3Qge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5jYW5vbmljYWwge1xuICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dC1hbHQpO1xuICAgICY6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJMw6RuazogXCI7XG4gICAgfVxufVxuIiwiLnBvc3QtaGVhZGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgIHBhZGRpbmctdG9wOiB2YXIoLS1wYWRkaW5nX19sYXJnZSk7XG4gICAgcGFkZGluZy1ib3R0b206IHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcblxuICAgIGEge1xuICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xuICAgIH1cblxuXG5cbiAgICAucG9zdC10aXRsZSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IHZhcigtLW1hcmdpbl9fc21hbGwpO1xuICAgICAgICBmb250LXdlaWdodDogOTAwO1xuXG4gICAgICAgIHN2ZyB7XG4gICAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA2MHJlbTtcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiB2YXIoLS1wYWRkaW5nX19zbWFsbCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAucG9zdC1kYXRlIHtcbiAgICAgICAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19zbWFsbCk7XG4gICAgfVxuXG4gICAgLnRhZ3Mge1xuICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbiAgICAgICAgLnRhZyB7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogLjRlbTtcblxuICAgICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiI1wiO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLnBvc3QtbWV0YWRhdGEge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHotaW5kZXg6IDEwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWF4LXdpZHRoOiB2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpO1xuICAgICAgICBwYWRkaW5nOiAwIHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG5cbiAgICAgICAgOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgIH1cblxuICAgICAgICA6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJjpub3QoLi1mZWF0dXJlLWltYWdlKXtcbiAgICAgICAgLnBvc3QtdGl0bGUge1xuICAgICAgICAgICAgLy9ub2luc3BlY3Rpb24gQ3NzSW52YWxpZFByb3BlcnR5VmFsdWVcbiAgICAgICAgICAgIEBzdXBwb3J0cyAoKGJhY2tncm91bmQtY2xpcDogdGV4dCkgYW5kIChiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTIwZGVnLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMCUsIHZhcigtLWNvbG9yX19saW5rKSAzNy41JSwgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDEwMCUpKSkge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMjBkZWcsIHZhcigtLWNvbG9yX19saW5rX192aXNpdGVkKSAwJSwgdmFyKC0tY29sb3JfX2xpbmspIDM3LjUlLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMTAwJSk7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jbGlwOiB0ZXh0O1xuICAgICAgICAgICAgICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICYuLWZlYXR1cmUtaW1hZ2Uge1xuICAgICAgICBtaW4taGVpZ2h0OiA1MHZtaW47XG4gICAgICAgIG1heC1oZWlnaHQ6IDgwdmg7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dF9fY29udHJhc3QpO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuXG4gICAgICAgIGEge1xuICAgICAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0X19jb250cmFzdCk7XG4gICAgICAgIH1cblxuICAgICAgICAucG9zdC1oZWFkZXJfX2ltYWdlIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgb3BhY2l0eTogLjU7XG5cbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICAgICAgICAgIG9iamVjdC1wb3NpdGlvbjogY2VudGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG59XG4iLCIubmV4dC1wb3N0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiBjYWxjKHZhcigtLXBhZGRpbmdfX21lZGl1bSkgKiA0KSAwO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBiYWNrZ3JvdW5kOiBibGFjaztcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBjb2xvcjogd2hpdGU7XG5cbiAgICAucmVhZC1tb3JlLXRleHQge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gICAgICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250X19zYW5zLXNlcmlmKTtcbiAgICAgICAgZm9udC1zaXplOiA5MCU7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICB9XG5cbiAgICAubmV4dC1wb3N0X190aXRsZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy0xKTsgLy8gSDFcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IC0uMnJlbTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgICAgICAgJjp2aXNpdGVkIHtcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5uZXh0LXBvc3RfX21ldGFkYXRhIHtcbiAgICAgICAgei1pbmRleDogMTA7XG4gICAgICAgIHdpZHRoOiAxMDB2dztcbiAgICAgICAgbWF4LXdpZHRoOiB2YXIoLS1tYXgtd2lkdGhfX2NvbnRlbnQpO1xuICAgICAgICBwYWRkaW5nOiAwIHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG4gICAgfVxuXG4gICAgLm5leHQtcG9zdF9fZGF0ZSB7XG4gICAgICAgIG1hcmdpbi10b3A6IHZhcigtLXBhZGRpbmdfX3NtYWxsKTtcbiAgICB9XG5cbiAgICAubmV4dC1wb3N0X19kYXRlIHtcbiAgICAgICAgbWFyZ2luLXRvcDogdmFyKC0tcGFkZGluZ19fc21hbGwpO1xuICAgIH1cblxuICAgIC5uZXh0LXBvc3RfX2ltYWdlIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgb3BhY2l0eTogLjU7XG5cbiAgICAgICAgaW1nIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICAgICAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmOmFmdGVyIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19vdmVybGF5KTtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICB9XG59XG4iLCIuc2VwYXJhdG9yLWhlYWRpbmcge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX2xhcmdlKTtcbiAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX21lZGl1bSk7XG4gICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XG4gICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTUpO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXG4gICAgJjphZnRlciB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgei1pbmRleDogMDtcbiAgICAgICAgdG9wOiA3cHg7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAycHg7XG4gICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kX193aWRnZXQpO1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgIH1cblxuICAgIHNwYW4ge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHotaW5kZXg6IDEwO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHBhZGRpbmc6IDAgMWVtO1xuICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG4gICAgfVxufVxuIiwiLnBvc3QtbGlzdCB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBwYWRkaW5nLWlubGluZS1zdGFydDogMDtcbn1cblxuLnBvc3QtbGlzdF9faXRlbSB7XG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgfVxuXG4gICAgLnBvc3QtdGl0bGUge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZV9faGVhZGluZy00KTtcbiAgICB9XG5cbiAgICBwIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbn1cbiIsIi5wb3N0IHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4uY2Fub25pY2FsIHtcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbiAgICAmOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiTMOkbms6IFwiO1xuICAgIH1cbn1cbiIsIi5zaXRlLWZvb3RlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgIHBhZGRpbmc6IHZhcigtLXBhZGRpbmdfX21lZGl1bSkgMDtcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgdmFyKC0tY29sb3JfX2JhY2tncm91bmRfX3dpZGdldCk7XG4gICAgLmNvbHVtbiB7XG4gICAgICAgIG1hcmdpbjogdmFyKC0tbWFyZ2luX19tZWRpdW0pIDA7XG4gICAgfVxufVxuXG4uc2l0ZS1mb290ZXJfX2NvbnRlbnQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogdmFyKC0tbWF4LXdpZHRoX19iYXNlKTtcbiAgICBwYWRkaW5nOiAwIHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG4gICAgZm9udC1zaXplOiA5MCU7XG5cbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICBncmlkLWdhcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhzbWFsbCkge1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAyZnIgMWZyO1xuICAgIH1cblxuICAgIGxhYmVsIHtcbiAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbiAgICB9XG59XG5cbi5zaXRlLWZvb3Rlcl9fbmF2aWdhdGlvbiB7XG4gICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcblxuICAgIHVsIHtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICB9XG5cbiAgICBhIHtcbiAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0KTtcbiAgICAgICAgJjp2aXNpdGVkIHtcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5zaXRlLWZvb3Rlcl9faGVhZGluZyB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XG59XG4iLCIuc2l0ZS1oZWFkZXJfX25hdmlnYXRpb24ge1xuICAgIGZsZXg6IDE7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgdWwge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIGxpIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbiAgICAgICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIiwiLnNpdGUtaGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG59XG5cbi5zaXRlLWhlYWRlcl9fY29udGVudCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHotaW5kZXg6IDEwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWF4LXdpZHRoOiB2YXIoLS1tYXgtd2lkdGhfX2Jhc2UpO1xuICAgIGhlaWdodDogdmFyKC0taGVhZGVyX19oZWlnaHQpO1xuICAgIG1heC1oZWlnaHQ6IHZhcigtLWhlYWRlcl9faGVpZ2h0KTtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIHBhZGRpbmctcmlnaHQ6IHZhcigtLXBhZGRpbmdfX21lZGl1bSk7XG4gICAgcGFkZGluZy1sZWZ0OiB2YXIoLS1wYWRkaW5nX19tZWRpdW0pO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbiAgICBmb250LXNpemU6IHZhcigtLWhlYWRlcl9fZm9udC1zY2FsZSk7XG4gICAgbGluZS1oZWlnaHQ6IHZhcigtLWhlYWRlcl9faGVpZ2h0KTtcblxuICAgIC5zaXRlX190aXRsZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiBpbmhlcml0O1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgfVxuXG4gICAgLnNpdGVfX2ltYWdlIHtcbiAgICAgICAgd2lkdGg6IGNhbGModmFyKC0taGVhZGVyX19oZWlnaHQpICogLjUpO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMC43NWVtO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgfVxuXG4gICAgYSB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgICY6dmlzaXRlZCB7XG4gICAgICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLnNpdGVfX2Rlc2NyaXB0aW9uIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnRfX3NlcmlmKTtcbiAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xuXG4gICAgICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8oc21hbGwpIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIi5zdGF0aXN0aWNzIHtcbiAgICAmX19saXN0IHtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBncmlkLWF1dG8tZmxvdzogZGVuc2U7XG4gICAgICAgIGdyaWQtZ2FwOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xuICAgICAgICBtYXgtd2lkdGg6IDM1ZW07XG5cbiAgICAgICAgQGluY2x1ZGUgcmVzcG9uZC10byh0aW55KSB7XG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xuICAgICAgICB9XG5cbiAgICAgICAgJi4tY29sdW1uLWNvdW50LTQge1xuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xuICAgICAgICAgICAgQGluY2x1ZGUgcmVzcG9uZC10byhzbWFsbCkge1xuICAgICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnIgMWZyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9fbGlzdC1pdGVtIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcblxuICAgICAgICAmX19sYWJlbCB7XG4gICAgICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XG4gICAgICAgICAgICBjb2xvcjogdmFyKC0tY29sb3JfX3RleHQtYWx0KTtcbiAgICAgICAgfVxuICAgICAgICAmX192YWx1ZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctNCk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCIudGFnLWhlYWRlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICBwYWRkaW5nLXRvcDogdmFyKC0tcGFkZGluZ19fbGFyZ2UpO1xuICAgIHBhZGRpbmctYm90dG9tOiB2YXIoLS1wYWRkaW5nX19tZWRpdW0pO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGNvbG9yOiB2YXIoLS1jb2xvcl9fdGV4dCk7XG5cbiAgICAudGFnLW1ldGFkYXRhIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB6LWluZGV4OiAxMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1heC13aWR0aDogdmFyKC0tbWF4LXdpZHRoX19jb250ZW50KTtcbiAgICAgICAgcGFkZGluZzogMCB2YXIoLS1wYWRkaW5nX19tZWRpdW0pO1xuXG4gICAgICAgIDpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgOmxhc3QtY2hpbGQge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC50YWctdGl0bGUge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgICB9XG5cbiAgICAudGFnLWRhdGUge1xuICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbiAgICB9XG5cbiAgICAmOm5vdCguLWZlYXR1cmUtaW1hZ2Upe1xuICAgICAgICAudGFnLXRpdGxlIHtcbiAgICAgICAgICAgIC8vbm9pbnNwZWN0aW9uIENzc0ludmFsaWRQcm9wZXJ0eVZhbHVlXG4gICAgICAgICAgICBAc3VwcG9ydHMgKChiYWNrZ3JvdW5kLWNsaXA6IHRleHQpIGFuZCAoYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEyMGRlZywgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDAlLCB2YXIoLS1jb2xvcl9fbGluaykgMzcuNSUsIHZhcigtLWNvbG9yX19saW5rX192aXNpdGVkKSAxMDAlKSkpIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTIwZGVnLCB2YXIoLS1jb2xvcl9fbGlua19fdmlzaXRlZCkgMCUsIHZhcigtLWNvbG9yX19saW5rKSAzNy41JSwgdmFyKC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQpIDEwMCUpO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY2xpcDogdGV4dDtcbiAgICAgICAgICAgICAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLi1mZWF0dXJlLWltYWdlIHtcbiAgICAgICAgaGVpZ2h0OiA1MHZoO1xuICAgICAgICBtaW4taGVpZ2h0OiAyNXJlbTtcbiAgICAgICAgbWF4LWhlaWdodDogNTB2dztcbiAgICAgICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0X19jb250cmFzdCk7XG5cbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fb3ZlcmxheSk7XG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiYXJ0aWNsZS50YWcge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgd2lkdGg6IDEwMCU7XG59XG4iLCIudGFncyB7XG4gICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XG4gICAgLnRhZyB7XG4gICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiI1wiO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiLnBvc3QtdGVtcGxhdGUge1xuICAgIG1haW4ge1xuICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG4gICAgfVxufVxuXG4udGFnLXRlbXBsYXRlIHtcbiAgICBtYWluIHtcbiAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3JfX2JhY2tncm91bmQpO1xuICAgIH1cbn1cblxuLnBhZ2UtdGVtcGxhdGUge1xuICAgIG1haW4ge1xuICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvcl9fYmFja2dyb3VuZCk7XG4gICAgfVxufVxuXG4uaG9tZS10ZW1wbGF0ZSB7XG4gICAgbWFpbiB7XG4gICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yX19iYWNrZ3JvdW5kKTtcblxuICAgIH1cbn1cbiIsIi8qIERlcHJlY2F0ZWQgZml4IGZvciB0aGUgb2xkIHdheSBvZiBoYW5kbGluZyBpbWFnZXMsIGp1c3Qgc28gdGhleSBkb24ndCBsb29rIHRlcnJpYmxlICovXG5cbi5jb250ZW50IHtcbiAgICBpbWdbc3JjJD1cIiNsYXJnZVwiXSwgaW1nW3NyYyQ9XCIjZnVsbFwiXSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbn1cbiIsIi8qIEZpeCBmb3IgMTAwdncgYW5kIGhvcml6b250YWwgc2Nyb2xsYmFyICovXG5cbmJvZHkge1xuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcbn0iLCIuaGlkZGVuIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi53cmFwcGVyIHtcbiAgICBtYXgtd2lkdGg6IHZhcigtLW1heC13aWR0aF9fYmFzZSk7XG4gICAgcGFkZGluZzogMCB2YXIoLS1wYWRkaW5nX19tZWRpdW0pO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbn1cblxuLnNlY29uZGFyeSB7XG4gICAgY29sb3I6IHZhcigtLWNvbG9yX190ZXh0LWFsdCk7XG59XG5cbi4tY29sdW1uLWNvdW50LTIge1xuICAgIGNvbHVtbi1jb3VudDogMjtcbn1cblxuLnNyLW9ubHkge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMXB4O1xuICAgIGhlaWdodDogMXB4O1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiAtMSBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGNsaXA6IHJlY3QoMCwwLDAsMCk7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBib3JkZXItd2lkdGg6IDA7XG59XG5cbi51cHBlcmNhc2Uge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5sb3dlcmNhc2Uge1xuICAgIHRleHQtdHJhbnNmb3JtOiBsb3dlcmNhc2U7XG59XG5cbi5zbWFsbGNhcHMge1xuICAgIGZvbnQtdmFyaWFudDogc21hbGwtY2Fwcztcbn1cblxuLmxpZ2h0IHtcbiAgICBmb250LXdlaWdodDogNDAwO1xufVxuXG4uc2VtaWJvbGQge1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5cbi5ib2xkIHtcbiAgICBmb250LXdlaWdodDogNzAwO1xufVxuXG5zbWFsbCwgLnNtYWxsIHtcbiAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemUtYmFzZSk7XG59XG5cbi5ub3JtYWwge1xuICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udF9fc2l6ZSk7XG59XG5cbi5sYXJnZSB7XG4gICAgZm9udC1zaXplOiB2YXIoLS1mb250X19zaXplX19oZWFkaW5nLTQpO1xufVxuXG4ubm8tanMgLmhpZGRlblxcQG5vLWpzIHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuIiwiQG1lZGlhIHByaW50IHtcblxuICAgIC5oaWRkZW5cXEBwcmludCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAua2ctYm9va21hcmstdGh1bWJuYWlsIHtcbiAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIGEsIHAsIHNwYW4sIHVsLCBvbCwgbGksIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICAgICAgICBjb2xvcjogYmxhY2sgIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICBtYWluLm1haW4ge1xuICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZSAhaW1wb3J0YW50O1xuICAgIH1cblxuXG5cbiAgICAuaGVhZGVyIHtcbiAgICAgICAgYmFja2dyb3VuZDogd2hpdGUgIWltcG9ydGFudDtcbiAgICAgICAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XG5cbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cblxuICAgICAgICAuaGVhZGVyX190b3Age1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgICB9XG5cbiAgICAgICAgLmhlcm8ge1xuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cblxuICAgICAgICAuaGVyby1jb250ZW50IHtcbiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wb3N0X19yZWFkLXRpbWUsIC5wb3N0X190YWdzIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5jb250ZW50IHtcbiAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgICAgICAgcGFkZGluZy10b3A6IHZhcigtLW1hcmdpbl9fbWVkaXVtKTtcbiAgICB9XG5cbiAgICAuY29udGVudCA+ICoge1xuICAgICAgICBjb2xvcjogYmxhY2sgIWltcG9ydGFudDtcbiAgICAgICAgYmFja2dyb3VuZDogd2hpdGUgIWltcG9ydGFudDtcbiAgICAgICAgbWFyZ2luLXRvcDogdmFyKC0tbWFyZ2luX19tZWRpdW0pO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYXJnaW5fX3NtYWxsKTtcbiAgICB9XG5cbiAgICAuY29udGVudCBwcmUge1xuICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZSAhaW1wb3J0YW50O1xuICAgICAgICBjb2xvcjogYmxhY2sgIWltcG9ydGFudDtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG5cbiAgICAgICAgY29kZSB7XG4gICAgICAgICAgICBjb2xvcjogYmxhY2sgIWltcG9ydGFudDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5wb3N0LWhlYWRlciB7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDAgIWltcG9ydGFudDtcbiAgICAgICAgYmFja2dyb3VuZDogd2hpdGUgIWltcG9ydGFudDtcbiAgICAgICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW0gIWltcG9ydGFudDtcblxuICAgICAgICAmLi1mZWF0dXJlLWltYWdlOmFmdGVyIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cblxuICAgICAgICAucG9zdC1tZXRhZGF0YSB7XG4gICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuc2VwYXJhdG9yLWhlYWRpbmcge1xuICAgICAgICBmb250LXNpemU6IHZhcigtLWZvbnRfX3NpemVfX2hlYWRpbmctMik7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiBpbml0aWFsO1xuICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIH1cbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLnRhZ3Mge1xuICAgICAgICAudGFnIHtcbiAgICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnLCc7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwLjJlbTtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogLTAuMmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJjpmaXJzdC1vZi10eXBlOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC4tY29sbGFwc2VkIHtcbiAgICAgICAgbWF4LWhlaWdodDogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIFN0eWxlIGJ1dHRvbnMgd2l0aCBvdXRsaW5lIGluc3RlYWQgb2YgYmFja2dyb3VuZCAodG8gc2F2ZSBpbmspXG4gICAgYS5CdXR0b24ge1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjayAhaW1wb3J0YW50O1xuICAgICAgICBiYWNrZ3JvdW5kOiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgIHBvc2l0aW9uOiBpbml0aWFsICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgLy8gSGlkZSBidXR0b25zIHRoYXQgZG9uJ3QgbGluayBhbnl3aGVyZVxuICAgIC5CdXR0b246bm90KGEpIHtcbiAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIC8vIFN1ZmZpeCB0aGUgVVJMIG9mIGxpbmtzIGFmdGVyIHRoZSBsaW5rIHRleHRcbiAgICBhW2hyZWZePSdodHRwJ10sIGFbaHJlZl49Jy8nXSB7XG4gICAgICAgIGNvbG9yOiAjMDA2YmYxICFpbXBvcnRhbnQ7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lICFpbXBvcnRhbnQ7XG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogJyBbJ2F0dHIoaHJlZiknXSc7XG4gICAgICAgICAgICBmb250LXNpemU6IDg1JTtcbiAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBzdXBlcjtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG4iLCJAbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKSB7XG4gICAgOnJvb3Qge1xuICAgICAgICAtLWNvbG9yX19iYWNrZ3JvdW5kOiAjMTQxNDE0O1xuICAgICAgICAtLWNvbG9yX19iYWNrZ3JvdW5kX19hbHQ6ICMxZTFlMWU7XG4gICAgICAgIC0tY29sb3JfX2JhY2tncm91bmRfX3dpZGdldDogIzMzMzMzMztcbiAgICAgICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3Q6ICMxNDE0MTQ7XG4gICAgICAgIC0tY29sb3JfX2JhY2tncm91bmRfX2NvbnRyYXN0X193aWRnZXQ6ICMyNjI2MjY7XG4gICAgICAgIC0tY29sb3JfX2JhY2tncm91bmRfX2NvbnRyYXN0X19hbHQ6ICMzMzMzMzM7XG4gICAgICAgIC0tY29sb3JfX2JhY2tncm91bmRfX2dyYWRpZW50OiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLHJnYmEoMCwwLDAsMCkgMCwjMTQxNDE0IDEwMCUpO1xuICAgICAgICAtLWNvbG9yX19vdmVybGF5OiByZ2JhKDAsMCwwLC41KTtcbiAgICAgICAgLS1jb2xvcl9fbGluazogIzYxODNmZDtcbiAgICAgICAgLS1jb2xvcl9fbGlua19fdmlzaXRlZDogI0IxNzJGRDtcbiAgICAgICAgLS1jb2xvcl9fdGV4dDogI3skY29sb3JfXzk1LWJyaWdodG5lc3N9O1xuICAgICAgICAtLWNvbG9yX190ZXh0LWFsdDogI3skY29sb3JfXzY1LWJyaWdodG5lc3N9O1xuICAgICAgICAtLWNvbG9yX190ZXh0X19jb250cmFzdDogd2hpdGU7XG4gICAgfVxufVxuXG5bZGF0YS10aGVtZT1saWdodF0ge1xuICAgIC0tY29sb3JfX2JhY2tncm91bmQ6IHdoaXRlO1xuICAgIC0tY29sb3JfX2JhY2tncm91bmRfX2FsdDogI3skY29sb3JfXzk3LWJyaWdodG5lc3N9O1xuICAgIC0tY29sb3JfX2JhY2tncm91bmRfX3dpZGdldDogI3skY29sb3JfXzk1LWJyaWdodG5lc3N9O1xuICAgIC0tY29sb3JfX2JhY2tncm91bmRfX2NvbnRyYXN0OiAjeyRjb2xvcl9fMTUtYnJpZ2h0bmVzc307XG4gICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3RfX3dpZGdldDogI3skY29sb3JfXzgtYnJpZ2h0bmVzc307XG4gICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3RfX2FsdDogI3skY29sb3JfXzItYnJpZ2h0bmVzc307XG4gICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fZ3JhZGllbnQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcscmdiYSgwLDAsMCwwKSAwLHdoaXRlIDEwMCUpO1xuICAgIC0tY29sb3JfX292ZXJsYXk6IHJnYmEoMCwwLDAsLjUpO1xuICAgIC0tY29sb3JfX2xpbms6ICN7JGNvbG9yX19ibHVlfTtcbiAgICAtLWNvbG9yX19saW5rX192aXNpdGVkOiAjeyRjb2xvcl9fcHVycGxlfTtcbiAgICAtLWNvbG9yX190ZXh0OiBibGFjaztcbiAgICAtLWNvbG9yX190ZXh0LWFsdDogI3skY29sb3JfXzI1LWJyaWdodG5lc3N9O1xuICAgIC0tY29sb3JfX3RleHRfX2NvbnRyYXN0OiB3aGl0ZTtcbiAgICAtLWNvbG9yX190ZXh0X19jb250cmFzdF9fYWx0OiAjYTlhOWE5O1xufVxuXG5bZGF0YS10aGVtZT1kYXJrXSB7XG4gICAgLS1jb2xvcl9fYmFja2dyb3VuZDogIzE0MTQxNDtcbiAgICAtLWNvbG9yX19iYWNrZ3JvdW5kX19hbHQ6ICMxZTFlMWU7XG4gICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fd2lkZ2V0OiAjMzMzMzMzO1xuICAgIC0tY29sb3JfX2JhY2tncm91bmRfX2NvbnRyYXN0OiAjMTQxNDE0O1xuICAgIC0tY29sb3JfX2JhY2tncm91bmRfX2NvbnRyYXN0X193aWRnZXQ6ICMyNjI2MjY7XG4gICAgLS1jb2xvcl9fYmFja2dyb3VuZF9fY29udHJhc3RfX2FsdDogIzMzMzMzMztcbiAgICAtLWNvbG9yX19iYWNrZ3JvdW5kX19ncmFkaWVudDogbGluZWFyLWdyYWRpZW50KDE4MGRlZyxyZ2JhKDAsMCwwLDApIDAsIzE0MTQxNCAxMDAlKTtcbiAgICAtLWNvbG9yX19vdmVybGF5OiByZ2JhKDAsMCwwLC41KTtcbiAgICAtLWNvbG9yX19saW5rOiAjNjE4M2ZkO1xuICAgIC0tY29sb3JfX2xpbmtfX3Zpc2l0ZWQ6ICNCMTcyRkQ7XG4gICAgLS1jb2xvcl9fdGV4dDogI3skY29sb3JfXzk1LWJyaWdodG5lc3N9O1xuICAgIC0tY29sb3JfX3RleHQtYWx0OiAjeyRjb2xvcl9fNjUtYnJpZ2h0bmVzc307XG4gICAgLS1jb2xvcl9fdGV4dF9fY29udHJhc3Q6IHdoaXRlO1xuICAgIC0tY29sb3JfX3RleHRfX2NvbnRyYXN0X19hbHQ6ICNhOWE5YTk7XG59XG4iXX0= */
