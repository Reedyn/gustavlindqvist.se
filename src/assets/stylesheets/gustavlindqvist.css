@charset 'UTF-8';
/* MAIN
---------------
Import all relevant files
--------------- */
/* Breakpoints
-------------------
Breakpoints for various screen sizes
------------------- */
/* Colors
-------------------
All colors used throughout the theme
------------------- */
/* Fonts
---------------
Fonts
--------------- */
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video
{
    font: inherit;

    margin: 0;
    padding: 0;

    vertical-align: baseline;

    border: 0;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section
{
    display: block;
}

body
{
    line-height: 1;
}

ol,
ul
{
    list-style: none;
}

blockquote,
q
{
    quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after
{
    content: '';
    content: none;
}

table
{
    border-spacing: 0;
    border-collapse: collapse;
}

@font-face
{
    font-family: 'Noto Sans';
    font-weight: 500;
    font-style: normal;

    font-display: fallback;
    src: local('Noto Sans'), url('/assets/fonts/NotoSans-500.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Sans';
    font-weight: 700;
    font-style: normal;

    font-display: fallback;
    src: local('Noto Sans'), url('/assets/fonts/NotoSans-700.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Sans';
    font-weight: 900;
    font-style: normal;

    font-display: fallback;
    src: local('Noto Sans'), url('/assets/fonts/NotoSans-900.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Serif';
    font-weight: 500;
    font-style: normal;

    font-display: fallback;
    src: local('Noto Serif'), url('/assets/fonts/NotoSerif-500.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Serif';
    font-weight: 500;
    font-style: italic;

    font-display: fallback;
    src: local('Noto Serif'), url('/assets/fonts/NotoSerif-500-Italic.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Serif';
    font-weight: 700;
    font-style: normal;

    font-display: fallback;
    src: local('Noto Serif'), url('/assets/fonts/NotoSerif-700.woff2') format('woff2');
}
@font-face
{
    font-family: 'Noto Serif';
    font-weight: 700;
    font-style: italic;

    font-display: fallback;
    src: local('Noto Serif'), url('/assets/fonts/NotoSerif-700-Italic.woff2') format('woff2');
}
/**
 * GHColors theme by Avi Aryan (http://aviaryan.in)
 * Inspired by Github syntax coloring
 */
code[class*=language-],
pre[class*=language-]
{
    font-family: 'Consolas', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;
    font-size: .9em;
    line-height: 1.2em;

    text-align: left;
    white-space: pre;
    word-spacing: normal;
    word-break: normal;
    -moz-tab-size: 4;
      -o-tab-size: 4;
         tab-size: 4;
    -webkit-hyphens: none;
            hyphens: none;

    color: #393a34;

    direction: ltr;
}

pre > code[class*=language-]
{
    font-size: 1em;
}

pre[class*=language-]::-moz-selection,
pre[class*=language-] ::-moz-selection,
code[class*=language-]::-moz-selection,
code[class*=language-] ::-moz-selection
{
    background: #b3d4fc;
}

pre[class*=language-]::-moz-selection,
pre[class*=language-] ::-moz-selection,
code[class*=language-]::-moz-selection,
code[class*=language-] ::-moz-selection
{
    background: #b3d4fc;
}

pre[class*=language-]::selection,
pre[class*=language-] ::selection,
code[class*=language-]::selection,
code[class*=language-] ::selection
{
    background: #b3d4fc;
}

/* Code blocks */
pre[class*=language-]
{
    overflow: auto;

    margin: .5em 0;
    padding: 1em;

    border: 1px solid #ddd;
    background-color: white;
}

/* Inline code */
:not(pre) > code[class*=language-]
{
    padding: .2em;
    padding-top: 1px;
    padding-bottom: 1px;

    border: 1px solid #ddd;
    background: #f8f8f8;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata
{
    font-style: italic;

    color: #998;
}

.token.namespace
{
    opacity: .7;
}

.token.string,
.token.attr-value
{
    color: #e3116c;
}

.token.punctuation,
.token.operator
{
    color: #393a34; /* no highlight */
}

.token.entity,
.token.url,
.token.symbol,
.token.number,
.token.boolean,
.token.variable,
.token.constant,
.token.property,
.token.regex,
.token.inserted
{
    color: #36acaa;
}

.token.atrule,
.token.keyword,
.token.attr-name,
.language-autohotkey .token.selector
{
    color: #00a4db;
}

.token.function,
.token.deleted,
.language-autohotkey .token.tag
{
    color: #9a050f;
}

.token.tag,
.token.selector,
.language-autohotkey .token.keyword
{
    color: #00009f;
}

.token.important,
.token.function,
.token.bold
{
    font-weight: bold;
}

.token.italic
{
    font-style: italic;
}

:root
{
    --color__background: white;
    --color__background__alt: #f7f7f7;
    --color__background__widget: #f1f1f1;
    --color__background__contrast: #262626;
    --color__background__contrast__widget: #141414;
    --color__background__contrast__alt: #050505;
    --color__background__gradient: linear-gradient(180deg,rgba(0,0,0,0) 0,white 100%);
    --color__overlay: rgba(0,0,0,.5);
    --color__link: hsl(240, 100%, 60%);
    --color__link__visited: hsl(285, 100%, 40%);
    --color__text: black;
    --color__text-alt: #404040;
    --color__text__contrast: white;
    --color__text__contrast__alt: #666;
    --font__dynamic-scaling: .3vw;
    --font__ratio: 1.25;
    --font__dynamic-ratio: 1.3;
    --font__size: 1.6rem;
    --font__size-base: 1.4rem;
    --font__size__heading-4: calc( (var(--font__size-base) * var(--font__ratio)) + (var(--font__dynamic-scaling) * var(--font__dynamic-ratio)));
    --font__size__heading-3: calc( (var(--font__size-base) * var(--font__ratio) * var(--font__ratio)) + (var(--font__dynamic-scaling) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio)));
    --font__size__heading-2: calc( (var(--font__size-base) * var(--font__ratio) * var(--font__ratio) * var(--font__ratio)) + (var(--font__dynamic-scaling) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio)));
    --font__size__heading-1: calc( (var(--font__size-base) * var(--font__ratio) * var(--font__ratio) * var(--font__ratio) * var(--font__ratio)) + (var(--font__dynamic-scaling) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio) * var(--font__dynamic-ratio)));
    --font__sans-serif: Noto Sans, Arial, sans-serif;
    --font__serif: Noto Serif, Times New Roman, serif;
    --font__mono: monospace;
    --max-width__base: 120rem;
    --max-width__content: 80rem;
    --margin__tiny: .5rem;
    --margin__small: 1rem;
    --margin__medium: 2rem;
    --margin__large: 4rem;
    --padding__small: 1rem;
    --padding__medium: 2rem;
    --padding__large: 4rem;
    --header__height: 6rem;
    --header__font-scale: 90%;
}

html
{
    font-size: 62.5%;

    display: flex;
    flex-direction: column;

    height: 100%;
}

body
{
    font-family: var(--font__sans-serif);
    font-size: var(--font__size);
    font-weight: 500;
    line-height: 1.8;

    display: flex;
    overflow-y: scroll;
    flex-direction: column;

    height: 100%;
    min-height: 100%;

    color: var(--color__text);
    background: var(--color__background);

    flex: 1;
}
body main
{
    flex: 1;
}

*
{
    box-sizing: border-box;
}

p,
ul,
ol,
blockquote,
br,
button,
canvas,
caption,
col,
colgroup,
dd,
dl,
dt,
embed,
fieldset,
figcaption,
figure,
img,
form,
h1,
h2,
h3,
h4,
h5,
h6
{
    margin-top: 1em;
    margin-bottom: .5em;
}

code
{
    font-family: var(--font__mono);
    font-size: 90%;

    padding: .2em .4em;

    color: var(--color__text);
    background: var(--color__background__widget);
}

figure figcaption
{
    font-family: var(--font__serif);

    margin-top: var(--margin__small);

    text-align: center;
}
@media (min-width: 55em)
{
    figure
    {
        margin-top: var(--margin__medium);
        margin-bottom: var(--margin__medium);
    }
}
figure.-full > picture img,
figure.-full > img,
figure.-full iframe,
figure.-full > div
{
    position: relative;

    width: 100vw; /* Or whatever max width is */
    max-width: none;
    margin-right: calc(50% - 50vw);
    margin-left: calc(50% - 50vw); /* 50vw equals half the width */
}
figure.-pixels
{
    image-rendering: crisp-edges;
}
figure.-wide
{
    --card__extra-width: 0;
}
@media (min-width: 55em)
{
    figure.-wide
    {
        margin-top: var(--margin__medium);
        margin-bottom: var(--margin__medium);
    }
}
@media (min-width: 65em)
{
    figure.-wide
    {
        --card__extra-width: 10rem;
    }
    figure.-wide > picture img,
    figure.-wide > img,
    figure.-wide iframe,
    figure.-wide > div,
    figure.-wide > figure.gallery-row
    {
        width: calc(var(--max-width__content) + var(--card__extra-width));
        max-width: none;
        margin-left: calc(50% - (var(--max-width__content) + var(--card__extra-width)) / 2);
    }
}
@media (min-width: 90em)
{
    figure.-wide
    {
        --card__extra-width: 35rem;
    }
}
figure.embed iframe
{
    min-width: 100%;
    height: auto;

    aspect-ratio: 16/9;
}
figure.map iframe
{
    min-width: 100%;
    height: 50vh;
}
figure .instagram-media
{
    margin: 0 auto !important;
}

h1,
h2,
h3,
h4,
h5,
h6
{
    font-family: var(--font__sans-serif);
    line-height: 1.25;
}
h1 a,
h2 a,
h3 a,
h4 a,
h5 a,
h6 a
{
    border: 0;
}

h1
{
    font-size: var(--font__size__heading-1);
    font-weight: 700;

    letter-spacing: -.2rem;
}

h2
{
    font-size: var(--font__size__heading-2);
    font-weight: 500;
}

h3
{
    font-size: var(--font__size__heading-3);
    font-weight: 500;
}

h4
{
    font-size: var(--font__size__heading-4);
    font-weight: 500;
}

h5
{
    font-weight: 700;
}

h6
{
    font-size: 80%;
    font-weight: 700;

    text-transform: uppercase;
}

img
{
    max-width: 100%;
    height: auto;
}

svg
{
    fill: currentColor;
}

a
{
    transition: all .2s;
    text-decoration: none;

    color: var(--color__link);
}
a:hover,
a:focus
{
    text-decoration: underline;
}
a:visited
{
    color: var(--color__link__visited);
}

ul
{
    list-style: disc;

    -webkit-padding-start: 1.5em;
    padding-inline-start: 1.5em;
}
ul ul
{
    margin-top: 0;
    margin-bottom: 0;

    -webkit-padding-start: 1em;
    padding-inline-start: 1em;
}

ol
{
    list-style: decimal;

    -webkit-padding-start: 1.5em;
    padding-inline-start: 1.5em;
}
ol ol
{
    margin-top: 0;
    margin-bottom: 0;

    -webkit-padding-start: 1em;
    padding-inline-start: 1em;
}
ol li:last-of-type
{
    margin-bottom: 0;
}

.contains-task-list
{
    list-style: none;
}

.no-style
{
    list-style: none;

    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.task-list-item-checkbox
{
    margin-left: -1.6em;

    vertical-align: baseline;
}

[id]
{
    scroll-margin-top: 1ex;
}

select
{
    font-family: var(--font__sans-serif);
    font-size: var(--font__size);
    font-weight: 500;
    line-height: 2;

    padding: .4rem .4rem;

    color: var(--color__text);
    border: 1px solid var(--color__background__widget);
    border-radius: 3px;
    background: var(--color__background);
}

em
{
    font-family: var(--font__serif);
    font-style: italic;
}

.note
{
    padding: var(--margin__small);

    background: var(--color__background__alt);
}

.lead
{
    font-size: 115%;
}

sup
{
    font-size: 85%;

    vertical-align: super;
}

blockquote
{
    font-family: var(--font__serif);

    padding-left: var(--margin__medium);

    border-left: 4px solid var(--color__background__alt);
}
blockquote img
{
    width: 100%;
    margin: 2rem 0;
}
blockquote > :first-child
{
    margin-top: 0;
}
blockquote > :last-child
{
    margin-bottom: 0;
}

q
{
    font-family: var(--font__serif);
    font-size: 125%;
    font-style: italic;

    display: block;

    text-align: center;
}
@media (min-width: 40em)
{
    q
    {
        width: calc(100% + var(--margin__large));
        max-width: calc(100% + var(--margin__large));
        margin-top: var(--margin__large);
        margin-bottom: var(--margin__medium);
        margin-left: calc(0% - var(--margin__medium));
    }
}
q:before,
q:after
{
    display: none;
}

cite
{
    font-family: var(--font__serif);
    font-style: normal;

    display: block;
}
cite a
{
    color: inherit;
    border: none;
}
cite:before
{
    content: '— ';
}

strong
{
    font-weight: 700;
}

hr
{
    height: .4rem;
    margin: var(--margin__medium) 0 0;

    border: 0;
    background: var(--color__background__alt);
}

abbr
{
    font-variant: all-small-caps;

    text-decoration: none;

    border-bottom-width: 1px;
    border-bottom-style: dotted;
    border-bottom-color: var(--color__text);
}

.center
{
    text-align: center;
}

kbd
{
    padding: .2em .4em;

    border-radius: .3em;
    background: var(--color__background__alt);
}

.Breadcrumbs a
{
    color: var(--color__text-alt);
}

.Breadcrumbs a:hover,
.Breadcrumbs a:focus
{
    color: var(--color__link);
}

.Breadcrumbs ol
{
    font-size: 80%;

    margin: 0;

    list-style: none;

    text-transform: uppercase;

    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.Breadcrumbs ol li
{
    display: inline-block;
}

.Breadcrumbs ol li:before
{
    display: none !important;

    content: none !important;
}

.Breadcrumbs ol li:after
{
    content: '/';

    color: var(--color__text-alt);
}

.Breadcrumbs ol li:last-child:after
{
    content: none;
}

.Button
{
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    line-height: 1.5;

    display: inline-block;

    margin: 0;
    padding: .5em .8em;

    cursor: pointer;

    color: var(--color__background);
    border: 0;
    background: var(--color__link);
}
.Button:visited
{
    color: var(--color__background);
}
.Button:hover,
.Button:focus
{
    text-decoration: underline;
}

.Cards
{
    display: grid;

    margin-top: var(--margin__medium);
    margin-bottom: var(--margin__medium);

    grid-auto-flow: dense;
    grid-gap: var(--margin__medium);
    grid-template-columns: 1fr;
}
@media (min-width: 40em)
{
    .Cards
    {
        grid-template-columns: 1fr 1fr;
    }
}
@media (min-width: 55em)
{
    .Cards
    {
        grid-template-columns: 1fr 1fr 1fr;
    }
}
@media (min-width: 55em)
{
    .Cards.-max-2-columns
    {
        grid-template-columns: 1fr 1fr;
    }
}

.Card
{
    position: relative;

    display: flex;
    overflow: hidden;
    flex-direction: column;

    min-height: 25vh;
    padding: calc(var(--padding__small) * 1.5);

    color: var(--color__text__contrast);
    background: var(--color__background__contrast__widget);
    background-position: center;
    background-size: cover;
}
.Card.-align-bottom
{
    padding-top: 8rem;

    justify-content: flex-end;
}
.Card.-align-top
{
    justify-content: flex-start;
}
@media (min-width: 55em)
{
    .Card.post:first-of-type
    {
        aspect-ratio: 21/9;
        grid-column-start: span 3;
    }
    .Card.post:first-of-type .Card__title
    {
        font-size: 3rem;
    }
}
.Card.-featured-image:after
{
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';

    background: var(--color__overlay);
}

.Card__content
{
    font-size: var(--font__size-base);

    z-index: 10;
}
.Card__content > *
{
    margin: 0;
}
.Card__content ul,
.Card__content ol
{
    -webkit-padding-start: 2.5rem;
    padding-inline-start: 2.5rem;
}
.Card__content a
{
    color: var(--color__text__contrast);
}
.Card__content ol.metadata-list
{
    list-style: none;

    -webkit-margin-before: 1em;
    margin-block-start: 1em;
    -webkit-padding-start: 0;
    padding-inline-start: 0;
}
.Card__content .metadata-list__item
{
    overflow: hidden;

    margin-bottom: var(--margin__small);

    list-style: none;

    white-space: nowrap;
    text-overflow: ellipsis;
}
.Card__content .metadata-list__item:before
{
    display: none;

    content: none;
}
.Card__content .metadata-list__item:last-child
{
    margin-bottom: 0;
}
.Card__content .metadata-list__item .metadata-title
{
    font-size: var(--font__size__heading-4);

    margin: 0;
}
.Card__content .metadata-list__item p
{
    margin: 0;
}
.Card__content .metadata-list__item .metadata-content
{
    overflow: hidden;

    white-space: nowrap;
    text-overflow: ellipsis;
}
.Card__content .metadata-list__item .metadata-list__item-title
{
    display: block;

    color: var(--color__text__contrast);
}
.Card__content .metadata-list__item .metadata-values
{
    color: var(--color__text__contrast__alt);
}

.Card__image
{
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;
    margin: 0;
}
.Card__image img
{
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;

    -o-object-fit: cover;
       object-fit: cover;
    -o-object-position: center;
       object-position: center;
}

.Card__content__extra
{
    font-size: 90%;
    line-height: 1;

    position: absolute;
    z-index: 10;
}
.Card__content__extra.-top-left
{
    top: calc(var(--padding__small) * 1.5);
    left: calc(var(--padding__small) * 1.5);

    margin-right: 8rem;
}
.Card__content__extra.-top-right
{
    top: calc(var(--padding__small) * 1.5);
    right: calc(var(--padding__small) * 1.5);

    margin-left: 8rem;
}
.Card__content__extra.-symbol
{
    font-size: 2.5rem;
}
.Card__content__extra > :nth-child(2)
{
    margin-left: .5em;
}
.Card__content__extra .tags .tag
{
    display: inline-block;

    width: auto;
    margin-right: .4em;
    margin-bottom: .4em;

    color: var(--color__text__contrast);
}
.Card__content__extra .tags .tag:before
{
    content: '#';
}
.Card__content__extra .webmentions__count
{
    margin-right: .5em;
}

.Card__post-list
{
    margin-top: var(--margin__small);
    margin-bottom: var(--margin__small);

    list-style: decimal-leading-zero;
}

.Card__title
{
    font-size: 2.5rem;
    font-weight: 700;

    margin: 0;

    color: var(--color__text__contrast);
}
.Card__title a
{
    color: inherit;
}

.Card__title-link:after
{
    position: absolute;
    top: 0;
    left: 0;

    display: block;

    width: 100%;
    height: 100%;

    content: '';
}

.Comments__list
{
    margin-top: var(--margin__medium);

    list-style: none;

    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.Comments_reference
{
    font-size: calc(var(--font__size) * .85);
}

.Comments__panel
{
    font-weight: 500;
}
.Comments__panel .Comments__likes,
.Comments__panel .Comments__reposts,
.Comments__panel .Comments__comments
{
    margin-right: .5em;
}
.Comments__panel .Comments__status
{
    display: inline-block;

    padding: var(--padding__medium);

    background-color: var(--color__background__alt);
}
.Comments__panel svg
{
    height: 1.2em;

    vertical-align: sub;
}

.Comments__metadata
{
    font-size: var(--font__size-base);
    line-height: 1.4;

    color: var(--color__text-alt);
}
.Comments__metadata span.Comments__author
{
    color: var(--color__text);
}

.Comments__author .Comments__avatar
{
    position: absolute;
    top: 1.2rem;
    left: 1rem;

    width: 4.5rem;
    margin-right: .5em;

    vertical-align: bottom;

    border-radius: 50%;
}

.Comments__list-item
{
    position: relative;

    display: flex;
    flex-direction: column;

    margin-bottom: var(--margin__medium);
    padding: 1rem 1rem 1rem 7rem;
}
.Comments__list-item:before
{
    content: none !important;
}
.Comments__list-item.-is-me
{
    background: var(--color__background__alt);
}
.Comments__list-item.-repost-of
{
    padding-left: 4rem;
}
.Comments__list-item.-repost-of .Comments__author .Comments__avatar
{
    top: .8rem;
    left: .5rem;

    width: 2.5rem;
}
.Comments__list-item:hover
{
    background: var(--color__background__widget);
}
.Comments__list-item:last-child
{
    margin-bottom: 0;
}
.Comments__list-item p
{
    margin: .3em 0 0 0;
}

.Form
{
    font-family: var(--font__sans-serif);
    font-size: var(--font__size);

    margin-top: 2em;

    color: var(--color__text);
}
.Form.-inactive label
{
    display: none !important;
}
.Form.-inactive .-collapsed
{
    display: none !important;
}
.Form.-inactive textarea
{
    overflow: hidden;

    height: 2.7em;
    min-height: 0 !important;

    resize: none !important;
}
.Form__group
{
    position: relative;

    margin: 0 0 1em 0;
}
.Form__group input,
.Form__group textarea
{
    font-family: inherit;
    font-size: inherit;

    width: 100%;
    padding: .5em;

    color: inherit;
    border: 2px solid var(--color__background__widget);
    background: var(--color__background);
}
.Form__group input:focus,
.Form__group textarea:focus
{
    border-color: var(--color__text);
}
.Form__group input:focus + label,
.Form__group textarea:focus + label
{
    color: var(--color__text);
}
.Form__group textarea
{
    min-height: 15rem;

    resize: vertical;
}
.Form__group label
{
    font-size: var(--font__size-base);
    line-height: 1;

    position: absolute;
    top: -7px;
    left: 4px;

    display: inline-block;

    padding: 0 .5em;

    text-align: center;
    text-transform: uppercase;

    color: var(--color__text-alt);
    background: var(--color__background);
}

ol.activity-list
{
    list-style: none;

    -webkit-margin-before: 1em;
    margin-block-start: 1em;
    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.activity-list__item
{
    display: flex;

    margin-bottom: var(--margin__small);
}
.activity-list__item:last-child
{
    margin-bottom: 0;
}
.activity-list__item .icon
{
    font-size: 1.5em;

    margin-top: .4em;
    margin-right: .5em;
}
.activity-list__item .activity-title
{
    font-size: var(--font__size__heading-4);

    margin: 0;
}
.activity-list__item p
{
    margin: 0;
}
.activity-list__item .activity-content
{
    overflow: hidden;

    white-space: nowrap;
    text-overflow: ellipsis;
}
.activity-list__item .activity-metadata
{
    color: var(--color__text-alt);
}

ol.book-list
{
    list-style: disc;
}

.book-list__item
{
    margin-bottom: var(--margin__small);
}
.book-list__item:last-child
{
    margin-bottom: 0;
}
.book-list__item .book-title
{
    font-size: var(--font__size__heading-4);

    margin: 0;
}
.book-list__item p
{
    margin: 0;
}
.book-list__item .book-metadata
{
    color: var(--color__text-alt);
}

.post-header .post-title .beer-label
{
    display: block;

    width: 40rem;
    max-width: 100%;

    color: var(--color__text);
}

.beer-title a .beer-label
{
    color: var(--color__text);
}
.beer-title a:hover .beer-label,
.beer-title a:visited .beer-label
{
    color: var(--color__text);
}

.beer-statistics__list
{
    display: grid;

    max-width: 30em;
    margin: 0;
    padding: 0;

    list-style: none;

    grid-auto-flow: dense;
    grid-gap: var(--margin__small);
    grid-template-columns: 1fr 1fr;
}
@media (min-width: 25em)
{
    .beer-statistics__list
    {
        grid-template-columns: 1fr 1fr 1fr;
    }
}
.beer-statistics__list-item
{
    display: flex;
    flex-direction: column;

    justify-content: flex-end;
}
.beer-statistics__list-item__label
{
    font-size: var(--font__size-base);

    color: var(--color__text-alt);
}
.beer-statistics__list-item__value
{
    font-size: var(--font__size__heading-4);
}

.beer-ingredients__label
{
    display: block;

    -webkit-margin-before: var(--margin__medium);
    margin-block-start: var(--margin__medium);
    -webkit-margin-after: var(--margin__small);
    margin-block-end: var(--margin__small);
}
.beer-ingredients__label .icon
{
    margin-left: -.2em;
}
.beer-ingredients__list
{
    max-width: 25em;
    margin: 0;
    padding: 0;

    list-style: none;
}
.beer-ingredients__list-item
{
    display: grid;

    margin-bottom: .5em;

    grid-template-columns: 3.8em 1fr auto;
    grid-gap: 0 .5rem;
    grid-template-rows: auto;
    grid-template-areas: 'left middle right' 'left bottom bottom-right';
}
.beer-ingredients__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 3;
    -ms-grid-column: 1;
    grid-area: left;
}
.pack__list-item > .beer-ingredients__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 1;
    -ms-grid-column: 1;
}
.pack__list-item.-overview > .beer-ingredients__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 1;
    -ms-grid-column: 1;
}
.beer-ingredients__list-item__middle
{
    overflow: hidden;

    white-space: nowrap;
    text-overflow: ellipsis;

    -ms-grid-row: 1;
    -ms-grid-column: 3;
    grid-area: middle;
}
.pack__list-item > .beer-ingredients__list-item__middle
{
    -ms-grid-row: 1;
    -ms-grid-column: 3;
}
.pack__list-item.-overview > .beer-ingredients__list-item__middle
{
    -ms-grid-row: 1;
    -ms-grid-column: 3;
}
.beer-ingredients__list-item__right
{
    text-align: right;

    -ms-grid-row: 1;
    -ms-grid-column: 5;
    grid-area: right;
}
.pack__list-item > .beer-ingredients__list-item__right
{
    -ms-grid-row: 1;
    -ms-grid-column: 5;
}
.pack__list-item.-overview > .beer-ingredients__list-item__right
{
    -ms-grid-row: 1;
    -ms-grid-column: 5;
}
.beer-ingredients__list-item__bottom-left
{
    font-size: var(--font__size-base);

    -ms-grid-row: 3;
    -ms-grid-column: 1;
    grid-area: bottom-left;
}
.pack__list-item.-overview > .beer-ingredients__list-item__bottom-left
{
    -ms-grid-row: 3;
    -ms-grid-column: 1;
}
.beer-ingredients__list-item__bottom
{
    font-size: var(--font__size-base);

    -ms-grid-row: 3;
    -ms-grid-column: 3;
    grid-area: bottom;
}
.pack__list-item > .beer-ingredients__list-item__bottom
{
    -ms-grid-row: 3;
    -ms-grid-column: 3;
}
.pack__list-item.-overview > .beer-ingredients__list-item__bottom
{
    -ms-grid-row: 3;
    -ms-grid-column: 3;
}
.beer-ingredients__list-item__bottom-right
{
    font-size: var(--font__size-base);

    text-align: right;

    -ms-grid-row: 3;
    -ms-grid-column: 5;
    grid-area: bottom-right;
}
.pack__list-item > .beer-ingredients__list-item__bottom-right
{
    -ms-grid-row: 3;
    -ms-grid-column: 5;
}
.pack__list-item.-overview > .beer-ingredients__list-item__bottom-right
{
    -ms-grid-row: 3;
    -ms-grid-column: 5;
}

.batches__status
{
    font-size: var(--font__size);

    position: relative;
    bottom: .1em;

    display: inline-block;

    padding: .3em;

    vertical-align: middle;

    background: var(--color__background__widget);
}

.beers
{
    display: grid;

    margin-top: var(--margin__medium);
    margin-bottom: var(--margin__medium);

    grid-auto-flow: dense;
    grid-gap: var(--margin__medium);
    grid-template-columns: 1fr;
}
@media (min-width: 40em)
{
    .beers
    {
        grid-template-columns: 1fr 1fr;
    }
}

.beer
{
    margin: auto;
    padding: var(--padding__medium);
}
.beer a:hover .beer-label,
.beer a:focus .beer-label
{
    filter: drop-shadow(0 0 1rem var(--color__link));
}
.beer .beer-title
{
    margin: 0;
}
.beer .beer-label
{
    width: 100%;

    transition: .25s all ease;
}

.columns
{
    display: grid;

    grid-template-columns: 1fr;
    grid-gap: var(--margin__medium);
}
@media (min-width: 40em)
{
    .columns
    {
        grid-template-columns: repeat(3, minmax(0, 1fr));
    }
}

.content pre
{
    line-height: 125%;

    overflow-y: hidden;

    width: 100vw;
    max-width: 100%;
    margin-top: var(--margin__medium);
    margin-right: 0;
    margin-bottom: 0;
    margin-left: 0;
    padding: var(--padding__small);

    word-wrap: break-word;

    border: 0;
    background-color: var(--color__background__alt);
}
.content pre code
{
    font-size: 1.6rem;

    display: block;

    padding: 0;

    color: var(--color__text);
    background: none;
}

.header-anchor
{
    position: relative;

    color: var(--color__text);
}
.header-anchor:visited
{
    color: var(--color__text);
}
.header-anchor:before
{
    position: absolute;
    left: -.8em;

    display: none;

    content: '#';
}
.header-anchor:focus,
.header-anchor:hover
{
    color: var(--color__link);
}
.header-anchor:focus:before,
.header-anchor:hover:before
{
    display: block;
}

figure.exif
{
    position: relative;
}
figure.exif:hover .exif__container,
figure.exif:focus .exif__container
{
    opacity: 1;
}

figure.exif:hover .exif__container,
figure.exif:focus .exif__container
{
    opacity: 1;
}

.exif__container
{
    font-size: 75%;

    position: absolute;
    left: 0;

    transform: translateY(calc(-100% - var(--margin__small)));

    opacity: 0;
    color: var(--color__text__contrast);
    text-shadow: 0 0 2px #000, 0 0 2px #000, 0 0 4px #000, 0 0 3px #000;
}
.exif__data
{
    display: block;
}
.exif__data:before
{
    display: inline-block;

    width: 5.5em;

    content: attr(data-type);
}

.content .embed.video
{
    aspect-ratio: 16/9;
}

.content img
{
    display: block;

    max-width: 100%;
    height: auto;
    margin: 0 auto;
}

.content
{
    width: 100%;
    max-width: var(--max-width__content);
    margin-right: auto;
    margin-left: auto;
    padding: var(--padding__medium);
}
@media (min-width: 40em)
{
    .content
    {
        padding-bottom: var(--padding__large);
    }
}
.content > *
{
    width: 100%;
}
.content > :first-child
{
    margin-top: 0;
}
.content > :last-child
{
    margin-bottom: 0;
}

ol.game-list
{
    list-style: none;

    -webkit-margin-before: 1em;
    margin-block-start: 1em;
    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.game-list__item
{
    display: flex;

    margin-bottom: var(--margin__small);
}
.game-list__item:last-child
{
    margin-bottom: 0;
}
.game-list__item .icon
{
    width: 1em;
    height: 1em;
    margin-top: .4em;
    margin-right: .5em;
    margin-bottom: 0;
    margin-left: 0;
}
.game-list__item .game-title
{
    font-size: var(--font__size__heading-4);

    margin: 0;
}
.game-list__item p
{
    margin: 0;
}
.game-list__item .game-metadata
{
    color: var(--color__text-alt);
}

.icon
{
    position: relative;
    bottom: .1rem;

    display: inline-block;

    width: 1em;
    height: 1em;

    vertical-align: sub;
}
.icon.-large
{
    width: 1.5em;
    height: 1.5em;

    vertical-align: middle;
}
.icon.-strava
{
    color: #e34a00;
}
.icon.-gaming
{
    color: #b172fd;
}
.icon.-fermentables
{
    color: #ffca5a;
}
.icon.-hops
{
    color: #6f9a4b;
}
.icon.-yeast
{
    color: #e2b693;
}

.kg-card
{
    margin-top: var(--margin__medium);
    margin-bottom: var(--margin__medium);
}
@media (min-width: 55em)
{
    .kg-card
    {
        margin-top: var(--margin__large);
        margin-bottom: var(--margin__large);
    }
}

.kg-card.kg-embed-card
{
    aspect-ratio: 16/9;
}
.kg-card.kg-embed-card iframe
{
    width: 100%;
    height: auto;

    aspect-ratio: inherit;
}
.kg-card.kg-embed-card.responsive-video
{
    position: relative;
}
.kg-card.kg-embed-card.responsive-video iframe
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;
}

.kg-card.kg-width-full img
{
    position: relative;

    width: 100vw; /* Or whatever max width is */
    max-width: none;
    margin-right: calc(50% - 50vw);
    margin-left: calc(50% - 50vw); /* 50vw equals half the width */
}

@media (min-width: 55em)
{
    .kg-card.kg-gallery-card
    {
        margin-top: var(--margin__large);
        margin-bottom: var(--margin__large);
    }
}
.kg-card.kg-gallery-card .kg-gallery-container
{
    display: flex;
    flex-direction: column;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row
{
    display: flex;
    flex-direction: row;

    justify-content: center;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row:not(:first-of-type)
{
    margin: 1rem 0 0 0;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row .kg-gallery-image:not(:first-of-type)
{
    margin: 0 0 0 var(--margin__small);
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row .kg-gallery-image img
{
    display: block;

    width: 100%;
    height: 100%;
    margin: 0;
}

.kg-card.kg-width-wide
{
    width: 100%;

    --card__extra-width: 0;
}
@media (min-width: 55em)
{
    .kg-card.kg-width-wide
    {
        margin-top: var(--margin__large);
        margin-bottom: var(--margin__large);
    }
    .kg-card.kg-width-wide > *
    {
        width: calc(var(--max-width__content) + var(--card__extra-width));
        max-width: none;
        margin-left: calc(50% - (var(--max-width__content) + var(--card__extra-width)) / 2);
    }
}
@media (min-width: 65em)
{
    .kg-card.kg-width-wide
    {
        --card__extra-width: 12rem;
    }
}
@media (min-width: 90em)
{
    .kg-card.kg-width-wide
    {
        --card__extra-width: 35rem;
    }
}

@media (min-width: 40em)
{
    .gallery
    {
        display: flex;
        flex-direction: column;
    }
    .gallery .gallery-row
    {
        margin: var(--margin__small) 0 0 0;
    }
    .gallery .gallery-row:first-child
    {
        margin-top: 0;
    }
    .gallery .gallery-row:last-child
    {
        margin-bottom: 0;
    }
}

.gallery-row
{
    margin: 0;
}
@media (min-width: 40em)
{
    .gallery-row
    {
        display: flex;
        flex-direction: row;

        margin-top: var(--margin__medium);
        margin-bottom: var(--margin__medium);

        justify-content: center;
    }
    .gallery-row > figure
    {
        margin: 0;
    }
    .gallery-row > figure:not(:last-child)
    {
        margin-right: var(--margin__small);
    }
    .gallery-row img
    {
        width: 100%;
    }
}

.pack__label
{
    display: block;

    -webkit-margin-before: var(--margin__medium);
    margin-block-start: var(--margin__medium);
    -webkit-margin-after: var(--margin__small);
    margin-block-end: var(--margin__small);
}
.pack__label .icon
{
    margin-right: calc(.2em + .5rem);
}
.pack__item__category-heading
{
    font-weight: 600;

    text-transform: uppercase;
}
.pack__list
{
    display: block;

    max-width: 35em;
    margin: 0;
    padding: 0;

    list-style: none;

    -webkit-margin-before: var(--margin__medium);
    margin-block-start: var(--margin__medium);
    -webkit-margin-after: var(--margin__small);
    margin-block-end: var(--margin__small);
}
.pack__list__bar
{
    position: absolute !important;
    z-index: 1 !important;
    top: 0;
    right: 0;

    height: 100%;

    opacity: .5;
}
.pack__list-item
{
    display: grid;

    margin-bottom: .5em;

    grid-template-columns: 2em 1fr auto;
    grid-gap: 0 .5rem;
    grid-template-rows: auto;
    grid-template-areas: 'left middle right' 'bottom-left bottom bottom-right';
}
.pack__list-item.-overview
{
    position: relative;

    margin-bottom: .1rem;

    background: hsla(0, 0%, 70%, .1);

    grid-template-columns: 2em 1fr auto;
    grid-template-areas: 'left middle right' 'bottom-left bottom bottom-right';
}
.pack__list-item.-overview .icon
{
    margin-left: .3rem;
}
.pack__list-item.-overview > span
{
    position: relative;
    z-index: 2;
}
.pack__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 3;
    -ms-grid-column: 1;
    grid-area: left;
}
.pack__list-item > .pack__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 1;
    -ms-grid-column: 1;
}
.pack__list-item.-overview > .pack__list-item__left
{
    -ms-grid-row: 1;
    -ms-grid-row-span: 1;
    -ms-grid-column: 1;
}
.pack__list-item__middle
{
    -ms-grid-row: 1;
    -ms-grid-column: 3;
    grid-area: middle;
}
.pack__list-item > .pack__list-item__middle
{
    -ms-grid-row: 1;
    -ms-grid-column: 3;
}
.pack__list-item.-overview > .pack__list-item__middle
{
    -ms-grid-row: 1;
    -ms-grid-column: 3;
}
.pack__list-item__right
{
    text-align: right;

    -ms-grid-row: 1;
    -ms-grid-column: 5;
    grid-area: right;
}
.pack__list-item > .pack__list-item__right
{
    -ms-grid-row: 1;
    -ms-grid-column: 5;
}
.pack__list-item.-overview > .pack__list-item__right
{
    -ms-grid-row: 1;
    -ms-grid-column: 5;
}
.pack__list-item__bottom-left
{
    font-size: var(--font__size-base);

    -ms-grid-row: 3;
    -ms-grid-column: 1;
    grid-area: bottom-left;
}
.pack__list-item.-overview > .pack__list-item__bottom-left
{
    -ms-grid-row: 3;
    -ms-grid-column: 1;
}
.pack__list-item__bottom
{
    font-size: var(--font__size-base);

    -ms-grid-row: 3;
    -ms-grid-column: 3;
    grid-area: bottom;
}
.pack__list-item > .pack__list-item__bottom
{
    -ms-grid-row: 3;
    -ms-grid-column: 3;
}
.pack__list-item.-overview > .pack__list-item__bottom
{
    -ms-grid-row: 3;
    -ms-grid-column: 3;
}
.pack__list-item__bottom-right
{
    font-size: var(--font__size-base);

    text-align: right;

    -ms-grid-row: 3;
    -ms-grid-column: 5;
    grid-area: bottom-right;
}
.pack__list-item > .pack__list-item__bottom-right
{
    -ms-grid-row: 3;
    -ms-grid-column: 5;
}
.pack__list-item.-overview > .pack__list-item__bottom-right
{
    -ms-grid-row: 3;
    -ms-grid-column: 5;
}
.pack__list-button
{
    position: absolute;
    z-index: 1;
    bottom: 0;
}

.js .pack__list-container
{
    overflow: hidden;
}
.js .pack__list-container.-collapsed
{
    position: relative;

    max-height: 20rem;
}
.js .pack__list-container.-collapsed:after
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';

    background: var(--color__background__gradient);
}
.js .pack__list-container > :first-child
{
    margin-top: 0;
}

.page-header
{
    position: relative;

    display: flex;
    overflow: hidden;
    flex-direction: column;

    padding-top: var(--padding__large);
    padding-bottom: var(--padding__medium);

    color: var(--color__text);
    background-position: center;
    background-size: cover;

    align-items: center;
    justify-content: flex-end;
}
.page-header a
{
    color: var(--color__text);
}
.page-header .page-title
{
    font-weight: 900;

    margin-bottom: var(--margin__small);
}
.page-header .page-date
{
    margin-top: var(--margin__small);
}
.page-header .tags
{
    margin-top: var(--margin__small);
}
.page-header .tags .tag
{
    margin-right: .4em;

    color: var(--color__text__contrast);
}
.page-header .tags .tag:before
{
    content: '#';
}
.page-header .page-metadata
{
    position: relative;
    z-index: 10;

    width: 100%;
    max-width: var(--max-width__content);
    padding: 0 var(--padding__medium);
}
.page-header .page-metadata :first-child
{
    margin-top: 0;
}
.page-header .page-metadata :last-child
{
    margin-bottom: 0;
}
@supports ((-webkit-background-clip: text) or (background-clip: text)) and (background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%))
{
    .page-header:not(.-feature-image) .page-title
    {
        color: transparent;
        background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%);
        -webkit-background-clip: text;
                background-clip: text;
    }
}
.page-header.-feature-image
{
    position: relative;

    min-height: 50vmin;
    max-height: 80vh;

    color: var(--color__text__contrast);
    background-color: black;
}
.page-header.-feature-image a
{
    color: var(--color__text__contrast);
}
.page-header.-feature-image .page-header__image
{
    position: absolute;
    top: 0;

    width: 100%;
    height: 100%;
    margin: 0;

    opacity: .5;
}
.page-header.-feature-image .page-header__image img
{
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;

    -o-object-fit: cover;
       object-fit: cover;
    -o-object-position: center;
       object-position: center;
}

.post
{
    overflow: hidden;

    width: 100%;
}

.canonical
{
    color: var(--color__text-alt);
}
.canonical:before
{
    content: 'Länk: ';
}

.post-header
{
    position: relative;

    display: flex;
    overflow: hidden;
    flex-direction: column;

    padding-top: var(--padding__large);
    padding-bottom: var(--padding__medium);

    color: var(--color__text);
    background-position: center;
    background-size: cover;

    align-items: center;
    justify-content: flex-end;
}
.post-header a
{
    color: var(--color__text);
}
.post-header .post-title
{
    font-weight: 900;

    margin-bottom: var(--margin__small);
}
.post-header .post-title svg
{
    width: 90%;
    max-width: 60rem;
    padding-bottom: var(--padding__small);
}
.post-header .post-date
{
    margin-top: var(--margin__small);
}
.post-header .tags
{
    margin-top: var(--margin__small);
}
.post-header .tags .tag
{
    display: inline-block;

    margin-right: .4em;

    color: inherit;
}
.post-header .tags .tag:before
{
    content: '#';
}
.post-header .post-metadata
{
    position: relative;
    z-index: 10;

    width: 100%;
    max-width: var(--max-width__content);
    padding: 0 var(--padding__medium);
}
.post-header .post-metadata :first-child
{
    margin-top: 0;
}
.post-header .post-metadata :last-child
{
    margin-bottom: 0;
}
@supports ((-webkit-background-clip: text) or (background-clip: text)) and (background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%))
{
    .post-header:not(.-feature-image) .post-title
    {
        color: transparent;
        background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%);
        -webkit-background-clip: text;
                background-clip: text;
    }
}
.post-header.-feature-image
{
    position: relative;

    min-height: 50vmin;
    max-height: 80vh;

    color: var(--color__text__contrast);
    background-color: black;
}
.post-header.-feature-image a
{
    color: var(--color__text__contrast);
}
.post-header.-feature-image .post-header__image
{
    position: absolute;
    top: 0;

    width: 100%;
    height: 100%;
    margin: 0;

    opacity: .5;
}
.post-header.-feature-image .post-header__image img
{
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;

    -o-object-fit: cover;
       object-fit: cover;
    -o-object-position: center;
       object-position: center;
}

.next-post
{
    position: relative;

    display: flex;
    overflow: hidden;
    flex-direction: column;

    margin: auto;
    padding: calc(var(--padding__medium) * 4) 0;

    color: white;
    background: black;
    background-position: center;
    background-size: cover;

    align-items: center;
}
.next-post .read-more-text
{
    font-family: var(--font__sans-serif);
    font-size: 90%;
    font-weight: 600;

    margin-bottom: var(--margin__medium);

    text-align: center;
    text-transform: uppercase;
}
.next-post .next-post__title
{
    font-size: var(--font__size__heading-1);
    font-weight: 700;
    line-height: 1.2;

    display: block;

    letter-spacing: -.2rem;

    color: white;
}
.next-post .next-post__title:visited
{
    color: white;
}
.next-post .next-post__title:after
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';
}
.next-post .next-post__metadata
{
    z-index: 10;

    width: 100vw;
    max-width: var(--max-width__content);
    padding: 0 var(--padding__medium);
}
.next-post .next-post__date
{
    margin-top: var(--padding__small);
}
.next-post .next-post__date
{
    margin-top: var(--padding__small);
}
.next-post .next-post__image
{
    position: absolute;
    top: 0;

    width: 100%;
    height: 100%;
    margin: 0;

    opacity: .5;
}
.next-post .next-post__image img
{
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;

    -o-object-fit: cover;
       object-fit: cover;
    -o-object-position: center;
       object-position: center;
}
.next-post:after
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';

    background: var(--color__overlay);
}

.separator-heading
{
    font-size: var(--font__size__heading-5);

    position: relative;

    margin-top: var(--margin__large);
    margin-bottom: var(--margin__medium);

    text-align: center;
    text-transform: uppercase;

    color: var(--color__text-alt);
}
.separator-heading:after
{
    position: absolute;
    z-index: 0;
    top: 7px;
    left: 0;

    display: block;

    width: 100%;
    height: 2px;

    content: '';

    background: var(--color__background__widget);
}
.separator-heading span
{
    position: relative;
    z-index: 10;

    display: inline-block;

    padding: 0 1em;

    background: var(--color__background);
}

.post-list
{
    list-style: none;

    -webkit-padding-start: 0;
    padding-inline-start: 0;
}

.post-list__item
{
    margin-bottom: var(--margin__medium);
}
.post-list__item:last-child
{
    margin-bottom: 0;
}
.post-list__item .post-title
{
    font-size: var(--font__size__heading-4);

    margin: 0;
}
.post-list__item p
{
    margin: 0;
}

.post
{
    overflow: hidden;

    width: 100%;
}

.canonical
{
    color: var(--color__text-alt);
}
.canonical:before
{
    content: 'Länk: ';
}

.site-footer
{
    display: flex;
    flex-direction: column;

    padding: var(--padding__medium) 0;

    border-top: 1px solid var(--color__background__widget);

    align-content: space-around;
    align-items: center;
    justify-content: space-around;
}
.site-footer .column
{
    margin: var(--margin__medium) 0;
}

.site-footer__content
{
    font-size: 90%;

    width: 100%;
    max-width: var(--max-width__base);
    padding: 0 var(--padding__medium);

    grid-template-columns: 1fr;
    grid-gap: var(--margin__medium);
}
@media (min-width: 40em)
{
    .site-footer__content
    {
        grid-template-columns: 1fr 2fr 1fr;
    }
}
.site-footer__content label
{
    color: var(--color__text);
}

.site-footer__navigation
{
    color: var(--color__text);
}
.site-footer__navigation ul
{
    margin: 0;

    list-style: none;

    -webkit-padding-start: 0;
    padding-inline-start: 0;
}
.site-footer__navigation a
{
    color: var(--color__text);
}
.site-footer__navigation a:visited
{
    color: var(--color__text);
}

.site-footer__heading
{
    font-size: var(--font__size__heading-4);

    margin-top: 0;
}

.site-header__navigation
{
    text-align: right;

    flex: 1;
}
.site-header__navigation ul
{
    margin: 0;
}
.site-header__navigation ul li
{
    display: inline-block;

    margin-left: var(--margin__small);
}
.site-header__navigation ul li:first-child
{
    margin-left: 0;
}

.site-header
{
    background-color: var(--color__background);
}

.site-header__content
{
    font-size: var(--header__font-scale);
    line-height: var(--header__height);

    position: relative;
    z-index: 10;

    display: flex;
    flex-direction: row;

    max-width: var(--max-width__base);
    height: var(--header__height);
    max-height: var(--header__height);
    margin: auto;
    padding-right: var(--padding__medium);
    padding-left: var(--padding__medium);

    color: var(--color__text-alt);
}
.site-header__content .site__title
{
    font-size: inherit;
    line-height: inherit;

    margin: 0;

    letter-spacing: inherit;
}
.site-header__content .site__image
{
    width: calc(var(--header__height) * .5);
    margin: 0;
    margin-right: .75em;

    vertical-align: middle;

    border-radius: 50%;
}
.site-header__content a
{
    font-weight: 500;

    color: var(--color__text);
}
.site-header__content a:visited
{
    color: var(--color__text);
}
.site-header__content .site__description
{
    font-family: var(--font__serif);
    font-style: italic;

    display: none;
}
@media (min-width: 40em)
{
    .site-header__content .site__description
    {
        display: inline;
    }
}

.statistics__list
{
    display: grid;

    max-width: 35em;
    margin: 0;
    padding: 0;

    list-style: none;

    grid-auto-flow: dense;
    grid-gap: var(--margin__small);
    grid-template-columns: 1fr 1fr;
}
@media (min-width: 25em)
{
    .statistics__list
    {
        grid-template-columns: 1fr 1fr 1fr;
    }
}
.statistics__list.-column-count-4
{
    grid-template-columns: 1fr 1fr;
}
@media (min-width: 40em)
{
    .statistics__list.-column-count-4
    {
        grid-template-columns: 1fr 1fr 1fr 1fr;
    }
}
.statistics__list-item
{
    display: flex;
    flex-direction: column;

    justify-content: flex-end;
}
.statistics__list-item__label
{
    font-size: var(--font__size-base);

    color: var(--color__text-alt);
}
.statistics__list-item__value
{
    font-size: var(--font__size__heading-4);
}

.tag-header
{
    position: relative;

    display: flex;
    overflow: hidden;
    flex-direction: column;

    padding-top: var(--padding__large);
    padding-bottom: var(--padding__medium);

    color: var(--color__text);
    background-position: center;
    background-size: cover;

    align-items: center;
    justify-content: flex-end;
}
.tag-header .tag-metadata
{
    position: relative;
    z-index: 10;

    width: 100%;
    max-width: var(--max-width__content);
    padding: 0 var(--padding__medium);
}
.tag-header .tag-metadata :first-child
{
    margin-top: 0;
}
.tag-header .tag-metadata :last-child
{
    margin-bottom: 0;
}
.tag-header .tag-title
{
    font-weight: 900;

    margin-bottom: var(--margin__small);
}
.tag-header .tag-date
{
    margin-top: var(--margin__small);
}
@supports ((-webkit-background-clip: text) or (background-clip: text)) and (background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%))
{
    .tag-header:not(.-feature-image) .tag-title
    {
        color: transparent;
        background: linear-gradient(120deg, var(--color__link__visited) 0%, var(--color__link) 37.5%, var(--color__link__visited) 100%);
        -webkit-background-clip: text;
                background-clip: text;
    }
}
.tag-header.-feature-image
{
    height: 50vh;
    min-height: 25rem;
    max-height: 50vw;

    color: var(--color__text__contrast);
}
.tag-header.-feature-image:after
{
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    content: '';

    background: var(--color__overlay);
}

article.tag
{
    overflow: hidden;

    width: 100%;
}

.tags
{
    color: var(--color__text-alt);
}
.tags .tag:before
{
    content: '#';
}

.post-template main
{
    background: var(--color__background);
}

.tag-template main
{
    background: var(--color__background);
}

.page-template main
{
    background: var(--color__background);
}

.home-template main
{
    background: var(--color__background);
}

/* Deprecated fix for the old way of handling images, just so they don't look terrible */
.content img[src$='#large'],
.content img[src$='#full']
{
    width: 100%;
}

/* Fix for 100vw and horizontal scrollbar */
body
{
    overflow-x: hidden;
}

.hidden
{
    display: none !important;
}

.wrapper
{
    width: 100%;
    max-width: var(--max-width__base);
    margin-right: auto;
    margin-left: auto;
    padding: 0 var(--padding__medium);
}

.secondary
{
    color: var(--color__text-alt);
}

.-column-count-2
{
    -moz-column-count: 2;
         column-count: 2;
}

.sr-only
{
    position: absolute;

    overflow: hidden;
    clip: rect(0, 0, 0, 0);

    width: 1px;
    height: 1px;
    margin: -1 px;
    padding: 0;

    white-space: nowrap;

    border-width: 0;
}

.uppercase
{
    text-transform: uppercase;
}

.lowercase
{
    text-transform: lowercase;
}

.smallcaps
{
    font-variant: small-caps;
}

.light
{
    font-weight: 400;
}

.semibold
{
    font-weight: 600;
}

.bold
{
    font-weight: 700;
}

small,
.small
{
    font-size: var(--font__size-base);
}

.normal
{
    font-size: var(--font__size);
}

.large
{
    font-size: var(--font__size__heading-4);
}

.no-js .hidden\@no-js
{
    display: none;
}

@media print
{
    .hidden\@print
    {
        display: none !important;
    }
    .kg-bookmark-thumbnail
    {
        display: none !important;
    }
    a,
    p,
    span,
    ul,
    ol,
    li,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6
    {
        color: black !important;
    }
    main.main
    {
        background: white !important;
    }
    .header
    {
        color: black !important;
        background: white !important;
    }
    .header:after
    {
        display: none !important;
    }
    .header .header__top
    {
        display: none !important;
    }
    .header .hero
    {
        height: auto !important;
    }
    .header .hero-content
    {
        width: 100% !important;
        max-width: 100% !important;
    }
    .header .post__read-time,
    .header .post__tags
    {
        display: none !important;
    }
    .content
    {
        width: 100% !important;
        max-width: 100% !important;
        padding: 0 !important;
        padding-top: var(--margin__medium);
    }
    .content > *
    {
        margin-top: var(--margin__medium);
        margin-bottom: var(--margin__small);

        color: black !important;
        background: white !important;
    }
    .content pre
    {
        color: black !important;
        border: 1px solid black;
        background: white !important;
    }
    .content pre code
    {
        color: black !important;
    }
    .post-header
    {
        min-height: 0 !important;
        margin-bottom: 1em !important;
        padding: 0 !important;

        background: white !important;
    }
    .post-header.-feature-image:after
    {
        display: none;
    }
    .post-header .post-metadata
    {
        max-width: none !important;
        padding: 0;
    }
    .separator-heading
    {
        font-size: var(--font__size__heading-2);

        text-align: left;
        text-transform: initial;
    }
    .separator-heading span
    {
        padding: 0;
    }
    .separator-heading:after
    {
        display: none;
    }
    .tags .tag:before
    {
        margin-right: .2em;
        margin-left: -.2em;

        content: ',';
    }
    .tags .tag:first-of-type:before
    {
        display: none;
    }
    .-collapsed
    {
        max-height: none !important;
    }
    .-collapsed:after
    {
        display: none !important;
    }
    a.Button
    {
        position: initial !important;

        border: 1px solid black !important;
        background: none !important;
    }
    .Button:not(a)
    {
        display: none !important;
    }
    a[href^=http],
    a[href^='/']
    {
        text-decoration: underline !important;

        color: #006bf1 !important;
    }
    a[href^=http]:after,
    a[href^='/']:after
    {
        font-size: 85%;

        content: ' [' attr(href) ']';
        vertical-align: super;
    }
}
@media (prefers-color-scheme: dark)
{
    :root
    {
        --color__background: #141414;
        --color__background__alt: #1e1e1e;
        --color__background__widget: #333;
        --color__background__contrast: #141414;
        --color__background__contrast__widget: #262626;
        --color__background__contrast__alt: #333;
        --color__background__gradient: linear-gradient(180deg,rgba(0,0,0,0) 0,#141414 100%);
        --color__overlay: rgba(0,0,0,.5);
        --color__link: #6183fd;
        --color__link__visited: #b172fd;
        --color__text: #f1f1f1;
        --color__text-alt: #a6a6a6;
        --color__text__contrast: white;
    }
}
[data-theme=light]
{
    --color__background: white;
    --color__background__alt: #f7f7f7;
    --color__background__widget: #f1f1f1;
    --color__background__contrast: #262626;
    --color__background__contrast__widget: #141414;
    --color__background__contrast__alt: #050505;
    --color__background__gradient: linear-gradient(180deg,rgba(0,0,0,0) 0,white 100%);
    --color__overlay: rgba(0,0,0,.5);
    --color__link: hsl(240, 100%, 60%);
    --color__link__visited: hsl(285, 100%, 40%);
    --color__text: black;
    --color__text-alt: #404040;
    --color__text__contrast: white;
    --color__text__contrast__alt: #a9a9a9;
}

[data-theme=dark]
{
    --color__background: #141414;
    --color__background__alt: #1e1e1e;
    --color__background__widget: #333;
    --color__background__contrast: #141414;
    --color__background__contrast__widget: #262626;
    --color__background__contrast__alt: #333;
    --color__background__gradient: linear-gradient(180deg,rgba(0,0,0,0) 0,#141414 100%);
    --color__overlay: rgba(0,0,0,.5);
    --color__link: #6183fd;
    --color__link__visited: #b172fd;
    --color__text: #f1f1f1;
    --color__text-alt: #a6a6a6;
    --color__text__contrast: white;
    --color__text__contrast__alt: #a9a9a9;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
